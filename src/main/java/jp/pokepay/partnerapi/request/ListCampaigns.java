// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi.request;

import com.google.gson.JsonObject;
import com.google.gson.JsonSerializationContext;
import jp.pokepay.partnerapi.response.*;
import java.lang.reflect.Type;

public class ListCampaigns extends Request {
    private String privateMoneyId;
    private Boolean isOngoing;
    private String availableFrom;
    private String availableTo;
    private Integer page;
    private Integer perPage;

    public ListCampaigns(String privateMoneyId) {
        this.privateMoneyId = privateMoneyId;
    }

    public ListCampaigns setOngoing(Boolean ongoing) {
        isOngoing = ongoing;
        return this;
    }

    public ListCampaigns availableFrom(String availableFrom) {
        this.availableFrom = availableFrom;
        return this;
    }

    public ListCampaigns availableTo(String availableTo) {
        this.availableTo = availableTo;
        return this;
    }

    public ListCampaigns page(Integer page) {
        this.page = page;
        return this;
    }

    public ListCampaigns perPage(Integer perPage) {
        this.perPage = perPage;
        return this;
    }

    @Override
    public Method method() {
        return Method.GET;
    }

    @Override
    public String path() {
        return "/campaigns";
    }

    @Override
    public Type getResponseClass() {
        return PaginatedCampaigns.class;
    }

    @Override
    public JsonObject getRequestBodyJsonObject(JsonSerializationContext context) {
        JsonObject object = new JsonObject();
        if (privateMoneyId != null) { object.add("private_money_id", context.serialize(this.privateMoneyId)); }
        if (isOngoing != null) { object.add("is_ongoing", context.serialize(this.isOngoing)); }
        if (availableFrom != null) { object.add("available_from", context.serialize(this.availableFrom)); }
        if (availableTo != null) { object.add("available_to", context.serialize(this.availableTo)); }
        if (page != null) { object.add("page", context.serialize(this.page)); }
        if (perPage != null) { object.add("per_page", context.serialize(this.perPage)); }
        return object;
    }
}
