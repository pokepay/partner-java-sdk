// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi.request;

import com.google.gson.JsonObject;
import com.google.gson.JsonSerializationContext;
import jp.pokepay.partnerapi.response.*;
import java.lang.reflect.Type;

public class ListTransfers extends Request {
    private String from;
    private String to;
    private Integer page;
    private Integer perPage;
    private String shopId;
    private String shopName;
    private String customerId;
    private String customerName;
    private String transactionId;
    private String privateMoneyId;
    private Boolean isModified;
    private String[] transactionTypes;
    private String[] transferTypes;
    private String description;

    public ListTransfers() {
    }

    public ListTransfers from(String from) {
        this.from = from;
        return this;
    }

    public ListTransfers to(String to) {
        this.to = to;
        return this;
    }

    public ListTransfers page(int page) {
        this.page = page;
        return this;
    }

    public ListTransfers perPage(int perPage) {
        this.perPage = perPage;
        return this;
    }

    public ListTransfers shopId(String shopId) {
        this.shopId = shopId;
        return this;
    }

    public ListTransfers shopName(String shopName) {
        this.shopName = shopName;
        return this;
    }

    public ListTransfers customerId(String customerId) {
        this.customerId = customerId;
        return this;
    }

    public ListTransfers customerName(String customerName) {
        this.customerName = customerName;
        return this;
    }

    public ListTransfers transactionId(String transactionId) {
        this.transactionId = transactionId;
        return this;
    }

    public ListTransfers privateMoneyId(String privateMoneyId) {
        this.privateMoneyId = privateMoneyId;
        return this;
    }

    public ListTransfers setModified(boolean modified) {
        isModified = modified;
        return this;
    }

    public ListTransfers transactionTypes(String[] transactionTypes) {
        this.transactionTypes = transactionTypes;
        return this;
    }

    public ListTransfers transferTypes(String[] transferTypes) {
        this.transferTypes = transferTypes;
        return this;
    }

    public ListTransfers description(String description) {
        this.description = description;
        return this;
    }

    @Override
    public Method method() {
        return Method.GET;
    }

    @Override
    public String path() {
        return "/transfers";
    }

    @Override
    public Type getResponseClass() {
        return PaginatedTransfers.class;
    }

    @Override
    public JsonObject getRequestBodyJsonObject(JsonSerializationContext context) {
        JsonObject object = new JsonObject();
        if (from != null) { object.add("from", context.serialize(this.from)); }
        if (to != null) { object.add("to", context.serialize(this.to)); }
        if (page != null) { object.add("page", context.serialize(this.page)); }
        if (perPage != null) { object.add("per_page", context.serialize(this.perPage)); }
        if (shopId != null) { object.add("shop_id", context.serialize(this.shopId)); }
        if (shopName != null) { object.add("shop_name", context.serialize(this.shopName)); }
        if (customerId != null) { object.add("customer_id", context.serialize(this.customerId)); }
        if (customerName != null) { object.add("customer_name", context.serialize(this.customerName)); }
        if (transactionId != null) { object.add("transaction_id", context.serialize(this.transactionId)); }
        if (privateMoneyId != null) { object.add("private_money_id", context.serialize(this.privateMoneyId)); }
        if (isModified != null) { object.add("is_modified", context.serialize(this.isModified)); }
        if (transactionTypes != null) { object.add("transaction_types", context.serialize(this.transactionTypes)); }
        if (transferTypes != null) { object.add("transfer_types", context.serialize(this.transferTypes)); }
        if (description != null) { object.add("description", context.serialize(this.description)); }
        return object;
    }
}
