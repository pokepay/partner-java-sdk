// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi.request;

import com.google.gson.JsonObject;
import com.google.gson.JsonSerializationContext;
import jp.pokepay.partnerapi.response.*;
import java.lang.reflect.Type;

public class UpdateCheck extends Request {
    private Double moneyAmount;
    private Double pointAmount;
    private String description;
    private Boolean isOnetime;
    private Integer usageLimit;
    private String expiresAt;
    private String pointExpiresAt;
    private Integer pointExpiresInDays;
    private String bearPointAccount;
    private Boolean isDisabled;
    private String checkId;

    public UpdateCheck(String checkId) {
        this.checkId = checkId;
    }

    public UpdateCheck moneyAmount(Double moneyAmount) {
        this.moneyAmount = moneyAmount;
        return this;
    }

    public UpdateCheck pointAmount(Double pointAmount) {
        this.pointAmount = pointAmount;
        return this;
    }

    public UpdateCheck description(String description) {
        this.description = description;
        return this;
    }

    public UpdateCheck setOnetime(Boolean onetime) {
        isOnetime = onetime;
        return this;
    }

    public UpdateCheck usageLimit(Integer usageLimit) {
        this.usageLimit = usageLimit;
        return this;
    }

    public UpdateCheck expiresAt(String expiresAt) {
        this.expiresAt = expiresAt;
        return this;
    }

    public UpdateCheck pointExpiresAt(String pointExpiresAt) {
        this.pointExpiresAt = pointExpiresAt;
        return this;
    }

    public UpdateCheck pointExpiresInDays(Integer pointExpiresInDays) {
        this.pointExpiresInDays = pointExpiresInDays;
        return this;
    }

    public UpdateCheck bearPointAccount(String bearPointAccount) {
        this.bearPointAccount = bearPointAccount;
        return this;
    }

    public UpdateCheck setDisabled(Boolean disabled) {
        isDisabled = disabled;
        return this;
    }

    @Override
    public Method method() {
        return Method.PATCH;
    }

    @Override
    public String path() {
        return "/checks" + "/" + this.checkId;
    }

    @Override
    public Type getResponseClass() {
        return Check.class;
    }

    @Override
    public JsonObject getRequestBodyJsonObject(JsonSerializationContext context) {
        JsonObject object = new JsonObject();
        if (moneyAmount != null) { object.add("money_amount", context.serialize((int)this.moneyAmount.doubleValue())); }
        if (pointAmount != null) { object.add("point_amount", context.serialize((int)this.pointAmount.doubleValue())); }
        if (description != null) { object.add("description", context.serialize(this.description)); }
        if (isOnetime != null) { object.add("is_onetime", context.serialize(this.isOnetime)); }
        if (usageLimit != null) { object.add("usage_limit", context.serialize(this.usageLimit)); }
        if (expiresAt != null) { object.add("expires_at", context.serialize(this.expiresAt)); }
        if (pointExpiresAt != null) { object.add("point_expires_at", context.serialize(this.pointExpiresAt)); }
        if (pointExpiresInDays != null) { object.add("point_expires_in_days", context.serialize(this.pointExpiresInDays)); }
        if (bearPointAccount != null) { object.add("bear_point_account", context.serialize(this.bearPointAccount)); }
        if (isDisabled != null) { object.add("is_disabled", context.serialize(this.isDisabled)); }
        return object;
    }
}
