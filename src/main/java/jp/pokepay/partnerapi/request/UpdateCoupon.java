// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi.request;

import com.google.gson.JsonObject;
import com.google.gson.JsonSerializationContext;
import jp.pokepay.partnerapi.response.*;
import java.lang.reflect.Type;

public class UpdateCoupon extends Request {
    private String name;
    private String description;
    private Integer discountAmount;
    private Double discountPercentage;
    private Integer discountUpperLimit;
    private String startsAt;
    private String endsAt;
    private String displayStartsAt;
    private String displayEndsAt;
    private Boolean isDisabled;
    private Boolean isHidden;
    private Boolean isPublic;
    private String code;
    private Integer usageLimit;
    private Integer minAmount;
    private Boolean isShopSpecified;
    private String[] availableShopIds;
    private String storageId;
    private String couponId;

    public UpdateCoupon(String couponId) {
        this.couponId = couponId;
    }

    public UpdateCoupon name(String name) {
        this.name = name;
        return this;
    }

    public UpdateCoupon description(String description) {
        this.description = description;
        return this;
    }

    public UpdateCoupon discountAmount(Integer discountAmount) {
        this.discountAmount = discountAmount;
        return this;
    }

    public UpdateCoupon discountPercentage(Double discountPercentage) {
        this.discountPercentage = discountPercentage;
        return this;
    }

    public UpdateCoupon discountUpperLimit(Integer discountUpperLimit) {
        this.discountUpperLimit = discountUpperLimit;
        return this;
    }

    public UpdateCoupon startsAt(String startsAt) {
        this.startsAt = startsAt;
        return this;
    }

    public UpdateCoupon endsAt(String endsAt) {
        this.endsAt = endsAt;
        return this;
    }

    public UpdateCoupon displayStartsAt(String displayStartsAt) {
        this.displayStartsAt = displayStartsAt;
        return this;
    }

    public UpdateCoupon displayEndsAt(String displayEndsAt) {
        this.displayEndsAt = displayEndsAt;
        return this;
    }

    public UpdateCoupon setDisabled(Boolean disabled) {
        isDisabled = disabled;
        return this;
    }

    public UpdateCoupon setHidden(Boolean hidden) {
        isHidden = hidden;
        return this;
    }

    public UpdateCoupon setPublic(Boolean is_public) {
        isPublic = is_public;
        return this;
    }

    public UpdateCoupon code(String code) {
        this.code = code;
        return this;
    }

    public UpdateCoupon usageLimit(Integer usageLimit) {
        this.usageLimit = usageLimit;
        return this;
    }

    public UpdateCoupon minAmount(Integer minAmount) {
        this.minAmount = minAmount;
        return this;
    }

    public UpdateCoupon setShopSpecified(Boolean shopSpecified) {
        isShopSpecified = shopSpecified;
        return this;
    }

    public UpdateCoupon availableShopIds(String[] availableShopIds) {
        this.availableShopIds = availableShopIds;
        return this;
    }

    public UpdateCoupon storageId(String storageId) {
        this.storageId = storageId;
        return this;
    }

    @Override
    public Method method() {
        return Method.PATCH;
    }

    @Override
    public String path() {
        return "/coupons" + "/" + this.couponId;
    }

    @Override
    public Type getResponseClass() {
        return CouponDetail.class;
    }

    @Override
    public JsonObject getRequestBodyJsonObject(JsonSerializationContext context) {
        JsonObject object = new JsonObject();
        if (name != null) { object.add("name", context.serialize(this.name)); }
        if (description != null) { object.add("description", context.serialize(this.description)); }
        if (discountAmount != null) { object.add("discount_amount", context.serialize(this.discountAmount)); }
        if (discountPercentage != null) { object.add("discount_percentage", context.serialize(this.discountPercentage)); }
        if (discountUpperLimit != null) { object.add("discount_upper_limit", context.serialize(this.discountUpperLimit)); }
        if (startsAt != null) { object.add("starts_at", context.serialize(this.startsAt)); }
        if (endsAt != null) { object.add("ends_at", context.serialize(this.endsAt)); }
        if (displayStartsAt != null) { object.add("display_starts_at", context.serialize(this.displayStartsAt)); }
        if (displayEndsAt != null) { object.add("display_ends_at", context.serialize(this.displayEndsAt)); }
        if (isDisabled != null) { object.add("is_disabled", context.serialize(this.isDisabled)); }
        if (isHidden != null) { object.add("is_hidden", context.serialize(this.isHidden)); }
        if (isPublic != null) { object.add("is_public", context.serialize(this.isPublic)); }
        if (code != null) { object.add("code", context.serialize(this.code)); }
        if (usageLimit != null) { object.add("usage_limit", context.serialize(this.usageLimit)); }
        if (minAmount != null) { object.add("min_amount", context.serialize(this.minAmount)); }
        if (isShopSpecified != null) { object.add("is_shop_specified", context.serialize(this.isShopSpecified)); }
        if (availableShopIds != null) { object.add("available_shop_ids", context.serialize(this.availableShopIds)); }
        if (storageId != null) { object.add("storage_id", context.serialize(this.storageId)); }
        return object;
    }
}
