// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.BulkCreateTransaction;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class BulkCreateTransactionTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new BulkCreateTransaction(
            "24qGHQmyjo5tP1",
            "q3gMC6K",
            "8tHcy926j1L5NawwgvuNKX2IY459qgAAwcNs"
        );
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new BulkCreateTransaction(
            "24qGHQmyjo5tP1",
            "q3gMC6K",
            "8tHcy926j1L5NawwgvuNKX2IY459qgAAwcNs"
        )
                .privateMoneyId("ea58403b-2c5e-4f68-8f4f-1a777de17819");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new BulkCreateTransaction(
            "24qGHQmyjo5tP1",
            "q3gMC6K",
            "8tHcy926j1L5NawwgvuNKX2IY459qgAAwcNs"
        )
                .description("Ey9C4fPkl7vL6GZNzAehCPDZA2NfvjjLAwczEhwpsSp")
                .privateMoneyId("753e7214-f875-4a55-8bf2-6df141b972f0");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
