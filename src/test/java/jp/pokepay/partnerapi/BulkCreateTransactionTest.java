// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.BulkCreateTransaction;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class BulkCreateTransactionTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new BulkCreateTransaction(
            "8HRSP5FHw4UX4tGWi4N1",
            "Wpw",
            "hPzDe8V1DYdcKn6nAl4cEX71br7jv7EDkwXN"
        );
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new BulkCreateTransaction(
            "8HRSP5FHw4UX4tGWi4N1",
            "Wpw",
            "hPzDe8V1DYdcKn6nAl4cEX71br7jv7EDkwXN"
        )
                .privateMoneyId("52d410b7-8c36-4486-acc0-708a5e74ce01");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new BulkCreateTransaction(
            "8HRSP5FHw4UX4tGWi4N1",
            "Wpw",
            "hPzDe8V1DYdcKn6nAl4cEX71br7jv7EDkwXN"
        )
                .description("HyKk1SGbd2fzw9nBiKXYeHN7C4dOhcXyEVzhZku2OJwUM0kt")
                .privateMoneyId("7e11363a-9aeb-479a-b179-4573a184ff65");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
