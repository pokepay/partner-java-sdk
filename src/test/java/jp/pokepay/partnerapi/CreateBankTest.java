// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.CreateBank;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class CreateBankTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new CreateBank(
            "53108dbc-f100-4f08-97c9-e047d892ca31",
            "c65dd0c6-9958-4307-860f-7d723d4d99ec",
            "seqq7iHj8OfZ0VmoI8o4avNrxY1spuTstrfMILQRTxOOEsatNYoAbCo3ZMaf5KPKxelGW2PLMndzwsr1uv9FIOtH1KOWvnnzjzZAhW8D2ddoULlUcHuyaiEbRe8n3yOtWNGYstAurARpkAej7d3pmm2X1vQfnmCFJlBFCCKSrUPGtyVwMuKuLx7wL8pLgjraw5vJZi2F8G7vmLATWHC6iaIOnWYjtCIYZezAqhpmjYMb1iuYBPA",
            "7905ahp1h14JVU6gHePJM"
        );
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new CreateBank(
            "53108dbc-f100-4f08-97c9-e047d892ca31",
            "c65dd0c6-9958-4307-860f-7d723d4d99ec",
            "seqq7iHj8OfZ0VmoI8o4avNrxY1spuTstrfMILQRTxOOEsatNYoAbCo3ZMaf5KPKxelGW2PLMndzwsr1uv9FIOtH1KOWvnnzjzZAhW8D2ddoULlUcHuyaiEbRe8n3yOtWNGYstAurARpkAej7d3pmm2X1vQfnmCFJlBFCCKSrUPGtyVwMuKuLx7wL8pLgjraw5vJZi2F8G7vmLATWHC6iaIOnWYjtCIYZezAqhpmjYMb1iuYBPA",
            "7905ahp1h14JVU6gHePJM"
        )
                .birthdate("7j");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new CreateBank(
            "53108dbc-f100-4f08-97c9-e047d892ca31",
            "c65dd0c6-9958-4307-860f-7d723d4d99ec",
            "seqq7iHj8OfZ0VmoI8o4avNrxY1spuTstrfMILQRTxOOEsatNYoAbCo3ZMaf5KPKxelGW2PLMndzwsr1uv9FIOtH1KOWvnnzjzZAhW8D2ddoULlUcHuyaiEbRe8n3yOtWNGYstAurARpkAej7d3pmm2X1vQfnmCFJlBFCCKSrUPGtyVwMuKuLx7wL8pLgjraw5vJZi2F8G7vmLATWHC6iaIOnWYjtCIYZezAqhpmjYMb1iuYBPA",
            "7905ahp1h14JVU6gHePJM"
        )
                .email("DAwe0E01uk@ac00.com")
                .birthdate("WMWMy7jD");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
