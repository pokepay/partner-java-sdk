// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.CreateCheck;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class CreateCheckTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "b4587ab4-6e6e-4f13-b778-9d8d178b8f38"
        )
                .moneyAmount(7457.0);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "b4587ab4-6e6e-4f13-b778-9d8d178b8f38"
        )
                .moneyAmount(2047.0)
                .description("kuyhAEwW6Mqg1AqtSViCBPnSAGXuYVqqX35yY2c0GOoGxCxmkzGeW8k2DPm30opynmdQnTUABDiEZEcOvOYxlIEreEVTWuQP3WCN0YDjsvV67r39F7tCQ1akbvDZssfoLd");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "b4587ab4-6e6e-4f13-b778-9d8d178b8f38"
        )
                .moneyAmount(5617.0)
                .setOnetime(true)
                .description("RTebO3rsrXu6N3SMPJkpmwuzBW0VytUKqbLx7dAT2UutkI9NYVLNTJzyvMFiIyORNQ7yIt84heLaEQu3eHk93n1TXyjoER09x3L6wfHjAOuFAPmAfk3gmTKDe5");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "b4587ab4-6e6e-4f13-b778-9d8d178b8f38"
        )
                .moneyAmount(7658.0)
                .usageLimit(3300)
                .setOnetime(true)
                .description("jcJg5KheF6cdMvmgJ42KFcEE6NiNuSGzNWzn5s9pmHQoGDUs3kRUPFqpKqbSFbcyfbC4BkBHiI6sO7fJqNbl12I5TMlRpWrhkT0LCPkuQoeI2XSRN44WXtiDZyO5Z8p61tisRMugdXCZsF9WSLCQ1aZsxJeZC9jKLNQ");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "b4587ab4-6e6e-4f13-b778-9d8d178b8f38"
        )
                .moneyAmount(1802.0)
                .expiresAt("2023-10-17T01:52:43.000000+09:00")
                .usageLimit(7708)
                .setOnetime(false)
                .description("gLyDEwHJg4DZR8LqMDAmrhRcVAwsgZKsgqi7CNjG0WYrPx6TjDeMFyg4k2Ral7fQLMXBp8yqHZtK5LlqEQIXsBwcXmy5R128N3X3D2bVqMhk8ekJkmc1Xwml1pjYLvP2zWRocR7P");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "b4587ab4-6e6e-4f13-b778-9d8d178b8f38"
        )
                .moneyAmount(1044.0)
                .pointExpiresAt("2022-05-06T16:37:12.000000+09:00")
                .expiresAt("2023-06-17T07:34:17.000000+09:00")
                .usageLimit(5108)
                .setOnetime(false)
                .description("o9clxu0oEk0GdFLsdGfYeoXgNYMQVzxl8JdOQavVNl6LcqmHZq2uARIMCf2rmAORTvykYtPcX82JiGTiiT0rTFM4SqMbxgWWJajH9xzqdeJXllQwkITzyZ39FDnb7oiL2cTuBeoDg");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "b4587ab4-6e6e-4f13-b778-9d8d178b8f38"
        )
                .moneyAmount(212.0)
                .pointExpiresInDays(1454)
                .pointExpiresAt("2022-08-25T12:42:57.000000+09:00")
                .expiresAt("2021-06-04T10:59:55.000000+09:00")
                .usageLimit(8593)
                .setOnetime(true)
                .description("lMz44EmGhA6MlHtwm8zRrNvXSFYCrG2s38ueJopAYwKA7BlYthku5d3hxufxWUGVNZfVSgaThGadpnAedkDjYZxvOKzgFwkQJHypBUOatGfKElcJwRaZcv3Z39RPpPzsODRua5IWmo5g8PJQGcjsEgKsp8aiFnnXRU8ly2WqW3CDejGF92XIAQnhwU5ktnRaV8LuAG");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "b4587ab4-6e6e-4f13-b778-9d8d178b8f38"
        )
                .moneyAmount(3854.0)
                .bearPointAccount("d99fc1b0-7443-46c6-8118-48d814bfc607")
                .pointExpiresInDays(113)
                .pointExpiresAt("2023-12-23T14:12:01.000000+09:00")
                .expiresAt("2021-10-19T15:07:02.000000+09:00")
                .usageLimit(5268)
                .setOnetime(true)
                .description("caW1Wiq4sg5HHVyKHPT");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "b4587ab4-6e6e-4f13-b778-9d8d178b8f38"
        )
                .moneyAmount(15.0)
                .pointAmount(2720.0);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test9() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "b4587ab4-6e6e-4f13-b778-9d8d178b8f38"
        )
                .moneyAmount(7496.0)
                .pointAmount(613.0)
                .description("9WPHRTYFbNoyAi0WLiGNuEU4gKUIKkKQqJmXBNdsuxi3rt0bBE3Zb76KhcoIzMNuvMDNYME2bvVQ7vM8axA6xHOSB5SAnDBPp9MdYv7eD5lH24PwICbJZ8BdI2IRXJoCCZn87x0P");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test10() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "b4587ab4-6e6e-4f13-b778-9d8d178b8f38"
        )
                .moneyAmount(9262.0)
                .pointAmount(2760.0)
                .setOnetime(true)
                .description("e6s4QBX300yl3JenWK7KiCbzc5xQ0LqrE4xi4zejAWqMDIFsu2XLs");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test11() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "b4587ab4-6e6e-4f13-b778-9d8d178b8f38"
        )
                .moneyAmount(5582.0)
                .pointAmount(6063.0)
                .usageLimit(9069)
                .setOnetime(false)
                .description("ao4HXRff441nwS1Phca0B8qXvCCmq3IT6I4BDpQSOu08DVsi9b0wx5gLZGXlWJbUPF1WX3XYBNIDIm2Xh6St14qe03uOb7sY0WcQzmyxxkeXn9LEDPrb6gXFvwHXJeXhPxPDC9CMIm3OFg5ue3xI2KPDR5gIVOMwZS1x7sl0rs");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test12() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "b4587ab4-6e6e-4f13-b778-9d8d178b8f38"
        )
                .moneyAmount(1611.0)
                .pointAmount(4947.0)
                .expiresAt("2023-11-24T11:04:37.000000+09:00")
                .usageLimit(9207)
                .setOnetime(true)
                .description("hOvucSJ2PlSQ6ie250YSY6BKL5KnkSsm8tc7VqXrDj9CpM3AyKZeMJIHxq3q1QbDM00Ohe0I13y1asaqc6eXNYJYru7ejC3u1s6GztrxN8tzat5DbHxR8Eskw");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test13() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "b4587ab4-6e6e-4f13-b778-9d8d178b8f38"
        )
                .moneyAmount(8955.0)
                .pointAmount(8029.0)
                .pointExpiresAt("2022-11-07T13:49:22.000000+09:00")
                .expiresAt("2021-02-17T13:03:54.000000+09:00")
                .usageLimit(1006)
                .setOnetime(true)
                .description("ZIj2ihSnhuqfi08aMdu31CeU4XZ0lKsu0TlfF4IZeDlboWsNbR27lKwGLaAQ0bshXs");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test14() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "b4587ab4-6e6e-4f13-b778-9d8d178b8f38"
        )
                .moneyAmount(83.0)
                .pointAmount(9557.0)
                .pointExpiresInDays(4677)
                .pointExpiresAt("2020-05-07T01:36:08.000000+09:00")
                .expiresAt("2021-06-19T17:48:42.000000+09:00")
                .usageLimit(5272)
                .setOnetime(false)
                .description("1I9rxRZCChGA5bC3HquTrveINukYUeHz7cwgMVL3aAvTTp53g1IKGlzChgxPYdgX5xPz31Fz5DzpfN7s");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test15() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "b4587ab4-6e6e-4f13-b778-9d8d178b8f38"
        )
                .moneyAmount(784.0)
                .pointAmount(3063.0)
                .bearPointAccount("fec464ac-3f62-4df3-9786-640e0f7b11de")
                .pointExpiresInDays(1324)
                .pointExpiresAt("2021-09-07T01:25:18.000000+09:00")
                .expiresAt("2021-09-16T18:21:05.000000+09:00")
                .usageLimit(3164)
                .setOnetime(false)
                .description("o45pv");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test16() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "b4587ab4-6e6e-4f13-b778-9d8d178b8f38"
        )
                .pointAmount(3255.0);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test17() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "b4587ab4-6e6e-4f13-b778-9d8d178b8f38"
        )
                .pointAmount(5434.0)
                .description("uB4blS2PV6Yk68yzW8iRv81gbWn3nwC7EOixb5J8DJSxxuM0rZLDEYxe2PiPgmAWQJSA5LozxU");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test18() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "b4587ab4-6e6e-4f13-b778-9d8d178b8f38"
        )
                .pointAmount(5940.0)
                .setOnetime(false)
                .description("paSBrv0w2QVW1olXKD3IMA1Txh4VEFB3HGhZ37k5K0vVE2jl");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test19() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "b4587ab4-6e6e-4f13-b778-9d8d178b8f38"
        )
                .pointAmount(8231.0)
                .usageLimit(2132)
                .setOnetime(false)
                .description("ZcUnWHpbdd");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test20() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "b4587ab4-6e6e-4f13-b778-9d8d178b8f38"
        )
                .pointAmount(7137.0)
                .expiresAt("2021-01-16T05:30:04.000000+09:00")
                .usageLimit(1630)
                .setOnetime(true)
                .description("Usb8uuCHL1xm8e8MtPGZWwBVKrq2rssiav3IWAdddifFDp1gJaYE6yIpF9USLvEsVudvwoMFwgKIHJ5Aha9doYiVAAwMQmEKBrjgWItilgsm1wXgqv8LoRHzu0V9ix6hM6pjSmbXFGVgB6oc5yB7WGhdyxvrTrjXBg3JG8s01lHyI7CHIR2KiGX4DjOUBNS");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test21() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "b4587ab4-6e6e-4f13-b778-9d8d178b8f38"
        )
                .pointAmount(9896.0)
                .pointExpiresAt("2020-09-16T07:58:25.000000+09:00")
                .expiresAt("2020-08-08T23:47:25.000000+09:00")
                .usageLimit(9424)
                .setOnetime(true)
                .description("5Es4oVDsn7b2wM2GxqrtCiOOYpQeWH8KjMZ1vX0Q9Jj8O1WWrjVrEqODezF8pdzkzF7THWzSvMKVbwYvLMv9q799uasfCvypYFctdGpxLTcYArKNtEtNZXjuCNEt6w3sXBBxtNOTsF7KIwsg1zoVRLoPUIY7KMgb9c2sDWxD4tdBdgCifssmFl6yhztzx4dDQQ2ShXW");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test22() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "b4587ab4-6e6e-4f13-b778-9d8d178b8f38"
        )
                .pointAmount(8097.0)
                .pointExpiresInDays(2175)
                .pointExpiresAt("2021-04-02T10:21:31.000000+09:00")
                .expiresAt("2023-10-16T15:17:46.000000+09:00")
                .usageLimit(4422)
                .setOnetime(false)
                .description("mY8GoMaOJGCAyOLIzttO4yuNWQFfi8YeOnysSkyuTORarRd66V9ooAaaa3NGnL5hL3C0QXSogkafoiluf4mjoWGW4w4OL3W25CNP7iIVda4");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test23() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "b4587ab4-6e6e-4f13-b778-9d8d178b8f38"
        )
                .pointAmount(8794.0)
                .bearPointAccount("79456e8c-c989-4789-a2ae-fa770efca725")
                .pointExpiresInDays(2965)
                .pointExpiresAt("2024-07-03T17:36:32.000000+09:00")
                .expiresAt("2024-03-04T14:05:04.000000+09:00")
                .usageLimit(8522)
                .setOnetime(false)
                .description("DzMRk6u6Pp2y7G8Ds8OGyMNkvQ0NFnP7");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
