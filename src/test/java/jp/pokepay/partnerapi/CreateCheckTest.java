// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.CreateCheck;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class CreateCheckTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "9cfab3c0-b154-4c08-acd5-b0176950128d"
        )
                .moneyAmount(6502.0);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "9cfab3c0-b154-4c08-acd5-b0176950128d"
        )
                .moneyAmount(2741.0)
                .description("rbvodSosKJcTf80USjPRgIXT4nR2ftMQafnNbOy1iE6k88IKw9QQkUv1q9nYISW0OMz4x2AE20sOg2Of");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "9cfab3c0-b154-4c08-acd5-b0176950128d"
        )
                .moneyAmount(4327.0)
                .setOnetime(false)
                .description("YstJKOvR3JAyRw5G7DboZfzTUXcOScHDK3uzFcMTWWPJlIAxlNX");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "9cfab3c0-b154-4c08-acd5-b0176950128d"
        )
                .moneyAmount(4954.0)
                .usageLimit(7774)
                .setOnetime(true)
                .description("FSV4KQUe4MBXL6nKJPEmKX0qC5j6VsRIyp8wM1uETJsaJZc1CuNjlXVetpPnL69IoIdByFrnqhkvAjmnPx49JqSaYd3rhrHhBopKlJWEuHqHyQYf4vdJAVWwi0U6kNDu5tMzrpfU2Xx8MXtD");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "9cfab3c0-b154-4c08-acd5-b0176950128d"
        )
                .moneyAmount(1788.0)
                .expiresAt("2023-06-10T12:23:15.000000+09:00")
                .usageLimit(1537)
                .setOnetime(false)
                .description("zif27tRaWRbBbX2p5cRnAS7XB5");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "9cfab3c0-b154-4c08-acd5-b0176950128d"
        )
                .moneyAmount(751.0)
                .pointExpiresAt("2020-10-27T08:43:28.000000+09:00")
                .expiresAt("2024-07-25T08:22:14.000000+09:00")
                .usageLimit(7015)
                .setOnetime(true)
                .description("yf8HWkzBP7dXWnAWXTaY69C87l0n2QcbIdnwa6Ut49Alsni1KT8AuOwyOqeIzT53iOMvA6vlm5ghD2gQTWKZrYtS7DMXiL4LUBAey6SoicxCi4AcoA9ZsyWMm5rq6LXpym5KZpqfjSm77rZk");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "9cfab3c0-b154-4c08-acd5-b0176950128d"
        )
                .moneyAmount(1896.0)
                .pointExpiresInDays(1543)
                .pointExpiresAt("2021-06-07T00:31:17.000000+09:00")
                .expiresAt("2021-10-06T04:29:22.000000+09:00")
                .usageLimit(2240)
                .setOnetime(true)
                .description("sJylwz2GiDCLpXTtt59m355VJX6ukYAR7WCnPb3q680HAraMjDlY7lNZZSGkvWlT7uWw7W1sjqGytH2oAgA5yuEKapzxmC67swUby4tSdxQRJ1zbZ2jKfxTN8c1mWG2DPhn2r7N55");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "9cfab3c0-b154-4c08-acd5-b0176950128d"
        )
                .moneyAmount(7650.0)
                .bearPointAccount("f0b27168-e319-47d0-96b8-2e4e67d0582c")
                .pointExpiresInDays(9546)
                .pointExpiresAt("2022-09-24T00:47:25.000000+09:00")
                .expiresAt("2020-12-17T12:52:02.000000+09:00")
                .usageLimit(9325)
                .setOnetime(true)
                .description("ZAWNx9H0YBe5TgT3CkK5zln");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "9cfab3c0-b154-4c08-acd5-b0176950128d"
        )
                .moneyAmount(8335.0)
                .pointAmount(2368.0);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test9() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "9cfab3c0-b154-4c08-acd5-b0176950128d"
        )
                .moneyAmount(7751.0)
                .pointAmount(980.0)
                .description("5Qvb431g2crwz9z7o13WH39YYdolpcvZuR4cKHyJxnc9HPwPnUPbzAEY6a5InJiAknNyHO2S7Dk8Mx9XkhLjznywYjKhshDo0PGwOdICPpmmliF8HSIjGYbDrrP9j");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test10() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "9cfab3c0-b154-4c08-acd5-b0176950128d"
        )
                .moneyAmount(2579.0)
                .pointAmount(2239.0)
                .setOnetime(true)
                .description("gaFlLSjCAzYz9QE5ewIY446AkPXaIDxdN4mu5bGYO9XRFsJIWTRKGHxNKoj4XxQmYmQjSmA9O9Q5Gp5m0YDYQ1RmsJ6M7GiliiXJYYRabjULv6ajDhREbViOplFCR1JS");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test11() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "9cfab3c0-b154-4c08-acd5-b0176950128d"
        )
                .moneyAmount(5122.0)
                .pointAmount(5115.0)
                .usageLimit(8257)
                .setOnetime(true)
                .description("NS5Qn2gQ4WxPlEd9VzrLEjNoT95Wqp8slOwsvsSzFWciR1jDuix1oTyqBlVZPqOQyvK5euBow2MOf05wyhGsb8KLLaB1hhmYTLX3JIxS6nTflJxIohJJBN43Ez6WDgw22GdRFQ4THuUsIS8xGk8yYEmYR");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test12() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "9cfab3c0-b154-4c08-acd5-b0176950128d"
        )
                .moneyAmount(399.0)
                .pointAmount(1111.0)
                .expiresAt("2021-11-22T05:51:44.000000+09:00")
                .usageLimit(614)
                .setOnetime(false)
                .description("8qNhvscRgRi6L9QOdxjnjX9acxZ7GdIHTECavOjmJwPsxHP9480KhAUxSatvxWyXQmUer3ghwG");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test13() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "9cfab3c0-b154-4c08-acd5-b0176950128d"
        )
                .moneyAmount(5714.0)
                .pointAmount(2077.0)
                .pointExpiresAt("2023-09-26T13:53:18.000000+09:00")
                .expiresAt("2022-03-20T07:06:41.000000+09:00")
                .usageLimit(8114)
                .setOnetime(false)
                .description("G8IaTPmrHtW2MMKzWu9LS0TbAltpB6SnuKHzSwq3b3aafsi2RKi8vnFHe6Aze");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test14() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "9cfab3c0-b154-4c08-acd5-b0176950128d"
        )
                .moneyAmount(845.0)
                .pointAmount(3553.0)
                .pointExpiresInDays(2801)
                .pointExpiresAt("2020-07-08T17:24:47.000000+09:00")
                .expiresAt("2022-12-27T12:44:13.000000+09:00")
                .usageLimit(8402)
                .setOnetime(false)
                .description("b3HsZXdNfGZoWBMFa0aWumjbxQUknUpV2iB6");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test15() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "9cfab3c0-b154-4c08-acd5-b0176950128d"
        )
                .moneyAmount(8287.0)
                .pointAmount(4250.0)
                .bearPointAccount("8c7cab0e-ad19-473f-8168-3fead30ab74c")
                .pointExpiresInDays(2955)
                .pointExpiresAt("2023-01-31T14:54:56.000000+09:00")
                .expiresAt("2021-06-29T01:08:33.000000+09:00")
                .usageLimit(4626)
                .setOnetime(false)
                .description("0slt5wzq7rNVSxi6lcDaGg26VgsX05HXY2NMObqhe6pserVEztrP1bhhjC4UWhWbKpfhK6KRBWLqCHXwQe1xbO1DCplZCTL3rABv2VGXDQnq6rNXNOUAyP6cOb8HQdZeknpGTlXg");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test16() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "9cfab3c0-b154-4c08-acd5-b0176950128d"
        )
                .pointAmount(1751.0);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test17() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "9cfab3c0-b154-4c08-acd5-b0176950128d"
        )
                .pointAmount(1894.0)
                .description("Ncz9yEDnVOO8TBKWNiRTT3hNXjzYUtejFV0T4Rjk0EgVC25aL0jmIPPw7gRlRQ5pMQlG4P2O1wbh6gZlNI8W7Nhnd1Pn69hBhmrbUl8CC5rwbtuT771mctN");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test18() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "9cfab3c0-b154-4c08-acd5-b0176950128d"
        )
                .pointAmount(2231.0)
                .setOnetime(true)
                .description("o9ixjXtolXWQxVPylgA6Vu4Dbr8oe0HoVCnk61CVZpFNpCyKH7Cy55sVGGPeCoJckAlQd3oLjJVofhed5rLXQrcMYbK70rzzIzZBqdYbwtMPPNm0OXrQN8TWjdECjbZU2XSo7CnVM9iAX8s");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test19() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "9cfab3c0-b154-4c08-acd5-b0176950128d"
        )
                .pointAmount(696.0)
                .usageLimit(4021)
                .setOnetime(false)
                .description("oh44UtNSaj0hSCXFi1z457mrN0EecaZzuQSe5ugCj0WdcV8cGRl0jENbFakSmwTdEfhRITBxcvT");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test20() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "9cfab3c0-b154-4c08-acd5-b0176950128d"
        )
                .pointAmount(4346.0)
                .expiresAt("2023-01-11T18:59:31.000000+09:00")
                .usageLimit(3603)
                .setOnetime(false)
                .description("I4Q4sGLVJhs");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test21() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "9cfab3c0-b154-4c08-acd5-b0176950128d"
        )
                .pointAmount(2014.0)
                .pointExpiresAt("2020-01-21T06:46:46.000000+09:00")
                .expiresAt("2023-02-02T10:39:43.000000+09:00")
                .usageLimit(6919)
                .setOnetime(false)
                .description("fAB6s0ZiHoUIKr0jMOFArfOEP1qeWGn6jRymok4hr8tsaYyqBljiJVDHe6TJCKcUvnldfL9");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test22() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "9cfab3c0-b154-4c08-acd5-b0176950128d"
        )
                .pointAmount(6725.0)
                .pointExpiresInDays(31)
                .pointExpiresAt("2021-02-28T00:57:37.000000+09:00")
                .expiresAt("2022-10-14T06:38:49.000000+09:00")
                .usageLimit(5977)
                .setOnetime(true)
                .description("2fWs00YEHlduKX1N65bZOxzLbw3sGuJpISZYlMnCV32HOjyMcyKT3PpnAYpRnPgdn8KzY22kIqITCMfEfArGtNn6UlsqbhCEHxdZZ6r5cSdxE10TeM3tZ2CRE6nPuGRkXFaXUxnB7oAjytgupLpPJ50JItUpo3CCbIRaRSid6XI9BpvbOgtae9AIQqGum8kwn6Iij");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test23() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "9cfab3c0-b154-4c08-acd5-b0176950128d"
        )
                .pointAmount(2565.0)
                .bearPointAccount("dc0f5709-62c5-410f-bd44-51818eff7405")
                .pointExpiresInDays(8673)
                .pointExpiresAt("2024-05-24T18:06:50.000000+09:00")
                .expiresAt("2024-04-09T17:50:37.000000+09:00")
                .usageLimit(9439)
                .setOnetime(false)
                .description("XtmkRlD0uSdH4sFJr2L1uKZ0mMwIBn5iopk2XVF334YKERUYevLsNO8zWYsKCrFbP1EurbcoduaX5iE9qMEK0pKKXT1dbChIzO3gt0o3XkwYSC7JLaIqNNGYOukpzg4JSB");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
