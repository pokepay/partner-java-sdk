// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.CreateCheck;
import jp.pokepay.partnerapi.request.Request;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class CreateCheckTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "419f946e-1a2e-4462-aedb-2bf2a231a29e"
        );
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "419f946e-1a2e-4462-aedb-2bf2a231a29e"
        )
                .bearPointAccount("13b47928-1d46-4591-aa5b-1fd415d6c976");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "419f946e-1a2e-4462-aedb-2bf2a231a29e"
        )
                .pointExpiresInDays(6716)
                .bearPointAccount("d5a3d786-c2a2-4945-aa21-c25734e8e71e");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "419f946e-1a2e-4462-aedb-2bf2a231a29e"
        )
                .pointExpiresAt("2022-02-20T15:39:39.000000+09:00")
                .pointExpiresInDays(1565)
                .bearPointAccount("885ad6c8-8ec5-4161-ab35-767dcb6aae97");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "419f946e-1a2e-4462-aedb-2bf2a231a29e"
        )
                .expiresAt("2022-07-24T04:25:57.000000+09:00")
                .pointExpiresAt("2019-10-15T04:23:00.000000+09:00")
                .pointExpiresInDays(6855)
                .bearPointAccount("2c3b6632-9bd7-4a9e-9bfd-cbfc5be2102f");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "419f946e-1a2e-4462-aedb-2bf2a231a29e"
        )
                .usageLimit(3547)
                .expiresAt("2017-01-16T03:52:15.000000+09:00")
                .pointExpiresAt("2024-03-29T09:02:51.000000+09:00")
                .pointExpiresInDays(6946)
                .bearPointAccount("0961cc5d-9622-4217-a278-31b425996a29");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "419f946e-1a2e-4462-aedb-2bf2a231a29e"
        )
                .setOnetime(false)
                .usageLimit(5796)
                .expiresAt("2017-02-24T03:10:47.000000+09:00")
                .pointExpiresAt("2017-04-11T17:25:58.000000+09:00")
                .pointExpiresInDays(2771)
                .bearPointAccount("d7678c4b-a3f8-4330-8d6e-36dc9abf0661");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "419f946e-1a2e-4462-aedb-2bf2a231a29e"
        )
                .description("J4lNeLyAInB66o7GPbe8IFfR97GR5aVv4ccdBnsfGhlv8Xn684N7Vvhc8xvnxHH8seidYYFf9MKQt")
                .setOnetime(false)
                .usageLimit(7520)
                .expiresAt("2022-08-20T08:20:11.000000+09:00")
                .pointExpiresAt("2021-08-08T17:55:15.000000+09:00")
                .pointExpiresInDays(6452)
                .bearPointAccount("38736c07-16aa-4667-9951-f6c0a442696e");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "419f946e-1a2e-4462-aedb-2bf2a231a29e"
        )
                .pointAmount(5510)
                .description("xwXGba3sITcO87lJclNR54QixAyAe37Pp6HYjYYp1fSG73kZEL1W0ippVXOdby7DNiBfVQGnZluhSzEacq5cFyjxkzMdnznGwkHez1Hzm5IPF3iqvqJt8bknxpqqmvR5mefSaP0bgQsoZoUbHVU")
                .setOnetime(false)
                .usageLimit(5447)
                .expiresAt("2020-12-21T21:19:05.000000+09:00")
                .pointExpiresAt("2021-02-26T07:21:24.000000+09:00")
                .pointExpiresInDays(7015)
                .bearPointAccount("9a5b1856-4b66-45c2-a5b3-e5c46e7062fc");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test9() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "419f946e-1a2e-4462-aedb-2bf2a231a29e"
        )
                .moneyAmount(6127)
                .pointAmount(6327)
                .description("5d5MGFN2DJkmjPtFggcNSRXOKVqoeql7mMImSeQ1fV")
                .setOnetime(false)
                .usageLimit(5754)
                .expiresAt("2017-06-10T04:25:32.000000+09:00")
                .pointExpiresAt("2019-05-10T15:57:29.000000+09:00")
                .pointExpiresInDays(3712)
                .bearPointAccount("9e2d5ae2-c77c-4afe-8492-ef62041ac348");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
