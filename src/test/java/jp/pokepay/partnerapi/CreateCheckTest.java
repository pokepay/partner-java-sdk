// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.CreateCheck;
import jp.pokepay.partnerapi.request.Request;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class CreateCheckTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "6a1cb46c-6ef4-4fc4-948e-158959fa37c9"
        );
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "6a1cb46c-6ef4-4fc4-948e-158959fa37c9"
        )
                .bearPointAccount("3cd98e94-a671-4f78-aab2-01f417e91df0");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "6a1cb46c-6ef4-4fc4-948e-158959fa37c9"
        )
                .pointExpiresInDays(5476)
                .bearPointAccount("8b083362-f21f-4446-b504-ef3108bad1ec");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "6a1cb46c-6ef4-4fc4-948e-158959fa37c9"
        )
                .pointExpiresAt("2015-11-23T06:31:29.000000+09:00")
                .pointExpiresInDays(4761)
                .bearPointAccount("46d2fd40-f757-42bc-b434-b6ec58f5a8a0");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "6a1cb46c-6ef4-4fc4-948e-158959fa37c9"
        )
                .expiresAt("2015-08-27T16:37:59.000000+09:00")
                .pointExpiresAt("2016-07-05T23:02:22.000000+09:00")
                .pointExpiresInDays(4946)
                .bearPointAccount("2b1f59dc-58e4-447c-b117-421d7827db70");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "6a1cb46c-6ef4-4fc4-948e-158959fa37c9"
        )
                .usageLimit(9060)
                .expiresAt("2020-10-14T17:47:18.000000+09:00")
                .pointExpiresAt("2020-08-04T23:37:15.000000+09:00")
                .pointExpiresInDays(5632)
                .bearPointAccount("01aea57d-5c25-43a4-b9f3-2d9c11b9c6b1");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "6a1cb46c-6ef4-4fc4-948e-158959fa37c9"
        )
                .setOnetime(false)
                .usageLimit(3815)
                .expiresAt("2025-06-12T16:45:55.000000+09:00")
                .pointExpiresAt("2021-08-09T13:10:39.000000+09:00")
                .pointExpiresInDays(2419)
                .bearPointAccount("c3474c93-651a-42c4-a3d9-475c15378c3a");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "6a1cb46c-6ef4-4fc4-948e-158959fa37c9"
        )
                .description("A12Xqkqt34E70gzAAryy")
                .setOnetime(true)
                .usageLimit(1887)
                .expiresAt("2021-03-13T09:10:31.000000+09:00")
                .pointExpiresAt("2020-12-23T16:30:07.000000+09:00")
                .pointExpiresInDays(9802)
                .bearPointAccount("20c5eee3-adff-4f05-bda3-2e6785cba992");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "6a1cb46c-6ef4-4fc4-948e-158959fa37c9"
        )
                .pointAmount(8244)
                .description("slxkoScxoHhLz25x62KK87lpBsU5enjQRThTNkJcfYjWof5Zj")
                .setOnetime(false)
                .usageLimit(8693)
                .expiresAt("2016-01-22T10:05:09.000000+09:00")
                .pointExpiresAt("2025-03-04T04:01:47.000000+09:00")
                .pointExpiresInDays(319)
                .bearPointAccount("114dd0e7-6eb4-429e-8c6a-2cbcca1b6228");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test9() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "6a1cb46c-6ef4-4fc4-948e-158959fa37c9"
        )
                .moneyAmount(5404)
                .pointAmount(9294)
                .description("SLRLmr8F3GN4gP0cAGTPC9rkKEd1UofLDKKc10zSLngfGX")
                .setOnetime(true)
                .usageLimit(9722)
                .expiresAt("2017-10-18T16:29:01.000000+09:00")
                .pointExpiresAt("2024-10-31T22:27:34.000000+09:00")
                .pointExpiresInDays(5071)
                .bearPointAccount("eb10f0de-d55a-4eed-b347-f7ebaba5773b");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
