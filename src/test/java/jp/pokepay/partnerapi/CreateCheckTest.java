// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.CreateCheck;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class CreateCheckTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "e93a5608-9534-41aa-ac09-a2ee2396bbde"
        )
                .moneyAmount(6810.0);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "e93a5608-9534-41aa-ac09-a2ee2396bbde"
        )
                .moneyAmount(4625.0)
                .description("7dnnrYNOgNMnRQBIPXmRdjgN3O7Dz547kEeXs4d2K4sVdCu3fjF9dUZOFqYF8ch2WNErWT6n3umwW7O5zTzqRaMlJUfKom90hOaIfea0zhcQxH6xd6aDhOLQUraDO5WcsVfPR6IAmNmrtyCiodjOI31LIRULIwannMBmGchn77l3dc6KIK5WDmAUqLB0P");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "e93a5608-9534-41aa-ac09-a2ee2396bbde"
        )
                .moneyAmount(8637.0)
                .setOnetime(true)
                .description("RA29O0jIAMrXgqmK1qvFl9KAY4eO2pSl1XwufctIDos3a4gSMZZiCLrcaf8ISGynVJuUMmyPQL6dvablZBvWECQaB1btzncvEIah1OYs4K01SpZuX0Bt2YV6OMYu0BQN8Cx0zTTF5Xp7Dozc");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "e93a5608-9534-41aa-ac09-a2ee2396bbde"
        )
                .moneyAmount(1425.0)
                .usageLimit(4257)
                .setOnetime(false)
                .description("X9fR7gsaOXHS8nRgDISeetybMclnADhNlnYIXSA8mP9H2YzJnevcoZPuMUT1kZB0GqNyjEtlRHLro2au43l9H8ejEu40Crirs4tINM2ObM");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "e93a5608-9534-41aa-ac09-a2ee2396bbde"
        )
                .moneyAmount(551.0)
                .expiresAt("2019-10-23T04:59:48.000000+09:00")
                .usageLimit(1602)
                .setOnetime(true)
                .description("4p3QiJwzQEam5tPj96QdU7YCziS7spqfUPk0REdwr1kWq3RZcD6V3p15seb9Jh92ltWDOL7hYsqwqiPyiADAZzig9RF");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "e93a5608-9534-41aa-ac09-a2ee2396bbde"
        )
                .moneyAmount(6291.0)
                .pointExpiresAt("2022-09-02T03:34:22.000000+09:00")
                .expiresAt("2024-06-01T14:54:10.000000+09:00")
                .usageLimit(2157)
                .setOnetime(true)
                .description("O14wenHwPURdTXO8mQVPMr83DdyY0qVUES9SC6At7mBxPX8rXAjOPowXTJUTYjfJzRBwYD81PA6xwh64O4BNlHHOy");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "e93a5608-9534-41aa-ac09-a2ee2396bbde"
        )
                .moneyAmount(8545.0)
                .pointExpiresInDays(2422)
                .pointExpiresAt("2018-06-26T23:37:46.000000+09:00")
                .expiresAt("2024-01-09T23:16:39.000000+09:00")
                .usageLimit(2071)
                .setOnetime(false)
                .description("0rLbjIY3M09Sn4BeL");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "e93a5608-9534-41aa-ac09-a2ee2396bbde"
        )
                .moneyAmount(8839.0)
                .bearPointAccount("3caa1342-d1a8-402c-b3bd-204c6e734bc1")
                .pointExpiresInDays(559)
                .pointExpiresAt("2021-12-27T00:42:39.000000+09:00")
                .expiresAt("2020-02-25T07:27:43.000000+09:00")
                .usageLimit(9736)
                .setOnetime(true)
                .description("yrVamyQdzSms0R2NKIgHWx49EOlhCgeYDztJ6OvlJj9rYP5MYlODnZrCTWvP1fDCvPRyBIAO7");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "e93a5608-9534-41aa-ac09-a2ee2396bbde"
        )
                .moneyAmount(2177.0)
                .pointAmount(8772.0);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test9() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "e93a5608-9534-41aa-ac09-a2ee2396bbde"
        )
                .moneyAmount(2320.0)
                .pointAmount(1276.0)
                .description("SU37sHS3taJzzaOjVb7FqVa5OqIZXEOTb8GvEwkJvUSOrcM9wJ50LhGp1ek1WGFnleYxagpj3GY3TJe81J9zK3RjkMRgEXaKnTDfNzVaRoSVpD");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test10() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "e93a5608-9534-41aa-ac09-a2ee2396bbde"
        )
                .moneyAmount(5204.0)
                .pointAmount(1848.0)
                .setOnetime(false)
                .description("nhLy97YB3vU3zE757JREaFwioXBPEWgm5Pp40XnqKVsHTep3LKMwRfUxHWlXgzT0AZBYOUyVDEHOKO2y4aiqUatyxEUig6CjRGWrqsu5EcaJKfG1MVgfKozL5QbyNX5ATO");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test11() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "e93a5608-9534-41aa-ac09-a2ee2396bbde"
        )
                .moneyAmount(7195.0)
                .pointAmount(1049.0)
                .usageLimit(7454)
                .setOnetime(false)
                .description("KaK6ehlTDG4ejK1LsVMA22QXuoV3DwE5TnywaNRepdkhTMs3K7FNuM06O3DcKxyVQKzF8MJW0EhhVbPJyvnHF4cmms6lQwmvWLBhWigw05pRKgYP");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test12() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "e93a5608-9534-41aa-ac09-a2ee2396bbde"
        )
                .moneyAmount(1935.0)
                .pointAmount(4490.0)
                .expiresAt("2024-07-07T16:48:55.000000+09:00")
                .usageLimit(7234)
                .setOnetime(true)
                .description("oDZQd1eTqE3LPJbOhQdaxqvibgxo9vhKhl51MZYkTgz9KfAMwFZMKyi9u4JjwzRWemZrItNdd8Q27Kc6UdsnA5R9a015emhJHl5LzJgM4muCuIwq4y6hvhkf7eecwdXS95uYBFmN83aO1HVUcfMImQ7TCubOEymAyfiJ6ouUTgSUz10J6Kd7KORKa6xzEkWd3TusY");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test13() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "e93a5608-9534-41aa-ac09-a2ee2396bbde"
        )
                .moneyAmount(780.0)
                .pointAmount(3449.0)
                .pointExpiresAt("2022-06-17T03:00:58.000000+09:00")
                .expiresAt("2019-03-02T23:42:17.000000+09:00")
                .usageLimit(4081)
                .setOnetime(false)
                .description("eQQa0t8ZczM5fQ39RaMylpflVxSJazMPQapSSL9QrcyXic4k51M8g7DO27Nh4ndKBADJJLBoPD3zbCdxcul4svOf0ya0zw8nAoUgKVdq7XQGO40Qu32hUk8pS470Na8tWJhrOrtNWgJeOweXmrOxUJHnlofBeXpPLMx3q74kVHFh2GH2CnBNSsBQK4DtUMNx00S");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test14() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "e93a5608-9534-41aa-ac09-a2ee2396bbde"
        )
                .moneyAmount(3007.0)
                .pointAmount(9462.0)
                .pointExpiresInDays(665)
                .pointExpiresAt("2024-11-08T00:13:48.000000+09:00")
                .expiresAt("2018-03-19T22:45:55.000000+09:00")
                .usageLimit(1381)
                .setOnetime(false)
                .description("YZhtJbkcpZzWyeThhyta7JfwD7KmcFbwZnaNEVk5ZOvoyUep9rkQX3vaOdhfZ20M1aXUpAc5GCPWrwjc9fLqSYoXi5gn8maGMrefuqAqNYRy2Oq7VV6ZgxPtyuw6SrxGSOHiFmdS1y5cp");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test15() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "e93a5608-9534-41aa-ac09-a2ee2396bbde"
        )
                .moneyAmount(7659.0)
                .pointAmount(7958.0)
                .bearPointAccount("6b366248-442a-49a1-a191-94078960f34a")
                .pointExpiresInDays(7620)
                .pointExpiresAt("2018-07-07T20:59:18.000000+09:00")
                .expiresAt("2020-02-10T03:11:38.000000+09:00")
                .usageLimit(459)
                .setOnetime(true)
                .description("JIbJCuP0U6JWL5gvgKq0tSzjehsJzQIjdKdKhE91ERqnUvxN33tbLTqDndIRscSDwTUvl4yGBkwlGwdvPlLhwnZv32oRtdzewVlPpWa8aLwcDeLI");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test16() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "e93a5608-9534-41aa-ac09-a2ee2396bbde"
        )
                .pointAmount(2676.0);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test17() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "e93a5608-9534-41aa-ac09-a2ee2396bbde"
        )
                .pointAmount(8484.0)
                .description("MhCkF3RvpavAruRhrjJUYJhOaAOununn6y9zC99LzftQLDavMYosXIt6fHrMLsfa1DfoFB47E24zzOtco8pcc14Alw2mxe49827O6kJ8M2j3DlFyjC5FSURCrCwsMsWosMCPdcr5LQcE76KlvwcoKnGb1Baf3eaJHSk8Pd");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test18() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "e93a5608-9534-41aa-ac09-a2ee2396bbde"
        )
                .pointAmount(8482.0)
                .setOnetime(false)
                .description("RNDsXGrnBb0lRAPQqxDfu4opXeQH9E1I40kh7UdCfbU2I");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test19() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "e93a5608-9534-41aa-ac09-a2ee2396bbde"
        )
                .pointAmount(7092.0)
                .usageLimit(8422)
                .setOnetime(true)
                .description("dPkjnjNKtQnPdm8Z9Rit9VuPYZj6KfdeSpodEjPO7dOTXbM5OewkkFW2TFRdLZtgNHd2g0M3tK5rzMeRXTDntKH03GZaWHPkapuwxsFiAOAjg18CmF0hRyifl0kr8Ys6f2cKwcmt9rLJNT1II5zVbUWzm8fz0QLwzWpVTIL34FL2Q7iur8ZGB3c7oAzD5OqVaRTvv6M3");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test20() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "e93a5608-9534-41aa-ac09-a2ee2396bbde"
        )
                .pointAmount(317.0)
                .expiresAt("2022-05-29T19:26:04.000000+09:00")
                .usageLimit(8375)
                .setOnetime(false)
                .description("PCqscv04IwSIIv9CRXk9zkDO0gRLQd7exYBkD5nhi40lkGQZ5sQf4wJkRYDeAtupBE1OR0Q6rpy4qhegVvgDp0HE2nSu1Z4FhMcdtlv6MPYnccmoGIgOunQu1Per3nfUcTOhL7IP9uzqXdF3dOJal4n5JnN4yLC8aduGfE74PTWxTZ7uW");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test21() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "e93a5608-9534-41aa-ac09-a2ee2396bbde"
        )
                .pointAmount(7211.0)
                .pointExpiresAt("2019-04-30T23:45:19.000000+09:00")
                .expiresAt("2022-07-18T16:37:58.000000+09:00")
                .usageLimit(3146)
                .setOnetime(false)
                .description("VQDttm3Vzxh40FMtTuGOBq1OsRL0sKLlzRQ");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test22() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "e93a5608-9534-41aa-ac09-a2ee2396bbde"
        )
                .pointAmount(1882.0)
                .pointExpiresInDays(6610)
                .pointExpiresAt("2016-07-22T09:30:35.000000+09:00")
                .expiresAt("2023-09-23T01:59:02.000000+09:00")
                .usageLimit(2624)
                .setOnetime(false)
                .description("iYgYLANgFjcKLvjFn");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test23() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "e93a5608-9534-41aa-ac09-a2ee2396bbde"
        )
                .pointAmount(1419.0)
                .bearPointAccount("e1e60cad-5c25-42f2-a285-1e8fb7e1a07e")
                .pointExpiresInDays(3525)
                .pointExpiresAt("2021-10-16T12:12:02.000000+09:00")
                .expiresAt("2023-09-28T23:57:48.000000+09:00")
                .usageLimit(2970)
                .setOnetime(true)
                .description("4BuwaqyaEY5cnb0sY6YXc5aMx5hFc2nWZLqnZ5OhHlkowtpic3EDBBzb1nqksTUbJMFd2WBXUONOgDe6cEWUJpjxNwMyvG1lu2pGd26g7aoBqbO2QiiovJMvK4Nlqmzd5zwDPygQuEjTr3yjSCrvSzfGk1zO8rH7zq6Y38h7aC8BmMAT7r");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
