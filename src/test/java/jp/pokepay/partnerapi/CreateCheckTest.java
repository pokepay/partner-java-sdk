// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.CreateCheck;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class CreateCheckTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "11078018-1fb2-45ce-8b59-40c8c5742431"
        )
                .moneyAmount(416.0);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "11078018-1fb2-45ce-8b59-40c8c5742431"
        )
                .moneyAmount(9778.0)
                .description("xHXaAOFq");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "11078018-1fb2-45ce-8b59-40c8c5742431"
        )
                .moneyAmount(713.0)
                .setOnetime(false)
                .description("xrvxkxwVYBDQiRCyVTR3");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "11078018-1fb2-45ce-8b59-40c8c5742431"
        )
                .moneyAmount(7214.0)
                .usageLimit(9481)
                .setOnetime(true)
                .description("czNdwQ9LziqjK5MdQ1lZMyARXVB9A32ESqVU");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "11078018-1fb2-45ce-8b59-40c8c5742431"
        )
                .moneyAmount(1099.0)
                .expiresAt("2021-04-26T12:47:04.000000+09:00")
                .usageLimit(7621)
                .setOnetime(true)
                .description("GN9JqLEvyRdA5j20ws4Z1pnjZ8xWKeN3WKGyHXCKDfS0S9olxt");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "11078018-1fb2-45ce-8b59-40c8c5742431"
        )
                .moneyAmount(2442.0)
                .pointExpiresAt("2019-06-16T14:31:33.000000+09:00")
                .expiresAt("2016-01-06T03:35:40.000000+09:00")
                .usageLimit(9843)
                .setOnetime(true)
                .description("4enFyHhIbteE1tQOMttUhD0OiwEvovxL7L6kZ3KaNub1zwaCdHgj");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "11078018-1fb2-45ce-8b59-40c8c5742431"
        )
                .moneyAmount(3754.0)
                .pointExpiresInDays(746)
                .pointExpiresAt("2019-12-28T02:43:24.000000+09:00")
                .expiresAt("2023-04-06T22:27:07.000000+09:00")
                .usageLimit(1836)
                .setOnetime(false)
                .description("SURUNaSg6OcHEmOeQFO3Ox8qDzSQ0YVNC6SfrLsEgbwDrafzykU4qQWwEl9RBh7JkqQ2DDr8e6Qf8fK7SBxethCuCr4dBSWzD3agMTAvZtCmtviHLHOB");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "11078018-1fb2-45ce-8b59-40c8c5742431"
        )
                .moneyAmount(2980.0)
                .bearPointAccount("743d4d48-dd6f-41cc-88da-43351f400f17")
                .pointExpiresInDays(5961)
                .pointExpiresAt("2017-01-04T19:09:37.000000+09:00")
                .expiresAt("2016-03-27T07:01:31.000000+09:00")
                .usageLimit(1907)
                .setOnetime(true)
                .description("5u9Osjia9h3ovwp1QqOYhJfTJv94bnDyHKg7jf7TRBDusrb62imeaN035TYhQYVT6897JBIT98Ea3vOiHnJbC3RzxMsGYTRQVbbDGQ3KFvfr7wcT");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "11078018-1fb2-45ce-8b59-40c8c5742431"
        )
                .moneyAmount(2455.0)
                .pointAmount(5435.0);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test9() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "11078018-1fb2-45ce-8b59-40c8c5742431"
        )
                .moneyAmount(8617.0)
                .pointAmount(1905.0)
                .description("fZGa8VmM7LxaafZsEiZ4h1kUtLESZUqCMHUv6WI9WlLqAjF");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test10() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "11078018-1fb2-45ce-8b59-40c8c5742431"
        )
                .moneyAmount(454.0)
                .pointAmount(3677.0)
                .setOnetime(true)
                .description("tovIA3w7if4YoZJ6x");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test11() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "11078018-1fb2-45ce-8b59-40c8c5742431"
        )
                .moneyAmount(7968.0)
                .pointAmount(5070.0)
                .usageLimit(6715)
                .setOnetime(true)
                .description("uCNZaugRp11iMcrfILoN8ZP7287JaoYb8spv1FcaYx8c7c37K2BoQEomxqdvzxKVxdoit0nsRdkY0a6T9IRy95uKnYj6aDVb3qDkr4zFWttvA7t4NS9wkdOXwioDpfXuzoNbRpuKefj9znX2XonFzQcO5QEOmdgUm73I2kFchNQksZB6ByT3l");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test12() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "11078018-1fb2-45ce-8b59-40c8c5742431"
        )
                .moneyAmount(9599.0)
                .pointAmount(86.0)
                .expiresAt("2025-05-01T12:22:48.000000+09:00")
                .usageLimit(2385)
                .setOnetime(true)
                .description("7O823WFeXCsADfveWv5SetJLuZcB6tdcwibyPvTHbjOWbqqVGNOP2f7Fmc6XSXX");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test13() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "11078018-1fb2-45ce-8b59-40c8c5742431"
        )
                .moneyAmount(2094.0)
                .pointAmount(6416.0)
                .pointExpiresAt("2018-03-28T00:35:25.000000+09:00")
                .expiresAt("2019-11-24T11:35:29.000000+09:00")
                .usageLimit(7861)
                .setOnetime(true)
                .description("PxnjFhfkfYgvABxRhjV7rXm6F6onhtgkbe1I3fnSrAjiMpnuQgQNZWqLAFAWqZBqyjs43AAjNChMERBnJER6lOBQBwAgsTow2Z3Uka1wds9TY9Bp5VDJiBPB1XeTNJcI");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test14() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "11078018-1fb2-45ce-8b59-40c8c5742431"
        )
                .moneyAmount(1670.0)
                .pointAmount(7371.0)
                .pointExpiresInDays(9730)
                .pointExpiresAt("2019-10-09T03:37:48.000000+09:00")
                .expiresAt("2015-11-12T06:55:05.000000+09:00")
                .usageLimit(6615)
                .setOnetime(false)
                .description("eNc1zzlxW2hgOK8NI225RAsUHuuLFS4058hKDGnyjbxrF6zxkmTZedVWeLbSdWlO");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test15() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "11078018-1fb2-45ce-8b59-40c8c5742431"
        )
                .moneyAmount(2054.0)
                .pointAmount(9726.0)
                .bearPointAccount("bd8c8721-6dd2-47a4-abc6-aaaa7767a05d")
                .pointExpiresInDays(5639)
                .pointExpiresAt("2020-07-25T12:39:57.000000+09:00")
                .expiresAt("2021-07-17T11:19:59.000000+09:00")
                .usageLimit(9190)
                .setOnetime(false)
                .description("fgII7vrhxHZrOEIH6HNdDlfIrfFFwUdXhpSi4j72IcAxs47XeIzYlwiQaQGyn4Age91Y1cWNDBnv9RrzZK5kL8kuH9QZjAoA9Wjz3xWF4fJVtnG3Avmta20vIgud6F1UgGMHbk2IRflsvwuZxk0nQmXMvg0FcWUrBHOSV7LC2s46hfsRF0");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test16() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "11078018-1fb2-45ce-8b59-40c8c5742431"
        )
                .pointAmount(3019.0);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test17() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "11078018-1fb2-45ce-8b59-40c8c5742431"
        )
                .pointAmount(3576.0)
                .description("TClCMK7WZ9OzNLNkjfoAuPSksHUu");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test18() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "11078018-1fb2-45ce-8b59-40c8c5742431"
        )
                .pointAmount(2203.0)
                .setOnetime(true)
                .description("Am0yTlB8Y7jnhE6v0ICVfZpB32LWZFMYYNQ77hNnDgeQkP6BrHNLW2TjgwJkClYsxYjLV6mNckmXWb6cDTOBEvT1fZYocBrtgwRLixenA1GWqf2JPqamqpbbuSj1PURjYRasH9ARntTDK9f1O2csoG3F55uy56fVMl4ovKt");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test19() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "11078018-1fb2-45ce-8b59-40c8c5742431"
        )
                .pointAmount(3746.0)
                .usageLimit(9676)
                .setOnetime(false)
                .description("z4xf72tklHyikvXSu1xVqKMzKtPMLBX6YLvmDqPAbWtHJHRtQBqCHsxk71kIOi");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test20() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "11078018-1fb2-45ce-8b59-40c8c5742431"
        )
                .pointAmount(1032.0)
                .expiresAt("2024-11-10T08:47:10.000000+09:00")
                .usageLimit(995)
                .setOnetime(false)
                .description("Z37iojnk7j2j33qMA4N2evwLBNS7QyCEhtgNDuAnxydB9u3o7ZMeTosoRh4S0mExQI1uCwHXvSS9xqXNJMeqv2rRxx8SeYgA5RTAZIE0d3whSKLF4xWXCgQOdSsQVPrApolt");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test21() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "11078018-1fb2-45ce-8b59-40c8c5742431"
        )
                .pointAmount(8865.0)
                .pointExpiresAt("2020-12-29T18:29:14.000000+09:00")
                .expiresAt("2020-11-26T17:17:23.000000+09:00")
                .usageLimit(8381)
                .setOnetime(true)
                .description("jGbqCaDUv1CsWTy6z2FdXbfXavW2HwaVVWGcOvRgfjTir1eeHpnGAvFN5uVHKI7mM3plgJR5fwzKIFQcpGZZVlRU03Fa2F6PUopGrOCijX4VQZjHwhb9lV9sTjbq8Wo22UU1er3T1gBtfr20CiDsC");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test22() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "11078018-1fb2-45ce-8b59-40c8c5742431"
        )
                .pointAmount(9255.0)
                .pointExpiresInDays(632)
                .pointExpiresAt("2024-02-28T10:57:05.000000+09:00")
                .expiresAt("2018-10-10T12:50:44.000000+09:00")
                .usageLimit(6325)
                .setOnetime(false)
                .description("EeQbE5VhNxjrtNh84WLuHKWoYQpDLtJyiWbDVy6Ss7attO0KDvZ2PuoFKU33PYYZTEIyRndmm72c26Cd6B3OB7swghUIdkqUOY2HAI87h7tC8vMnTzjNmFWDzLZ");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test23() throws ConnectionError, ProcessingError {
        Request request = new CreateCheck(
            "11078018-1fb2-45ce-8b59-40c8c5742431"
        )
                .pointAmount(5701.0)
                .bearPointAccount("9b7c3450-2a8e-4d1c-85ce-d0a0072a9190")
                .pointExpiresInDays(3472)
                .pointExpiresAt("2021-04-14T14:37:51.000000+09:00")
                .expiresAt("2022-02-12T21:55:37.000000+09:00")
                .usageLimit(6017)
                .setOnetime(false)
                .description("mFrbXYvN3cal4RO9jT63dRDxKNVoewLoaJggIMA5wXB3CTdPu3I6Gb57N6Bfk723xgVJhWc2FLmu9RV4wTQ1eFfFoOmA6KgKFTgUMIqeaKPydQtxKkPEiJ9F7s");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
