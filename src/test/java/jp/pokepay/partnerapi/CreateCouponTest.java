// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.CreateCoupon;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class CreateCouponTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "6766f169-5df9-4e9b-8e09-a269a879dd33",
            "aAuGXWsNdhyWJyqrPAKmmZGZJN",
            "2022-07-04T11:47:15.000000Z",
            "2021-02-13T08:49:11.000000Z",
            "602867b4-6c6a-49ba-ab32-7161fcd53418"
        )
                .discountAmount(8539);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "6766f169-5df9-4e9b-8e09-a269a879dd33",
            "aAuGXWsNdhyWJyqrPAKmmZGZJN",
            "2022-07-04T11:47:15.000000Z",
            "2021-02-13T08:49:11.000000Z",
            "602867b4-6c6a-49ba-ab32-7161fcd53418"
        )
                .discountAmount(5276)
                .storageId("f77ee315-9cdc-45f7-88d8-4e2dea98d2ec");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "6766f169-5df9-4e9b-8e09-a269a879dd33",
            "aAuGXWsNdhyWJyqrPAKmmZGZJN",
            "2022-07-04T11:47:15.000000Z",
            "2021-02-13T08:49:11.000000Z",
            "602867b4-6c6a-49ba-ab32-7161fcd53418"
        )
                .discountAmount(475)
                .minAmount(1579)
                .storageId("f46b87ca-beac-4246-959f-632718138880");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "6766f169-5df9-4e9b-8e09-a269a879dd33",
            "aAuGXWsNdhyWJyqrPAKmmZGZJN",
            "2022-07-04T11:47:15.000000Z",
            "2021-02-13T08:49:11.000000Z",
            "602867b4-6c6a-49ba-ab32-7161fcd53418"
        )
                .discountAmount(9602)
                .usageLimit(5001)
                .minAmount(5144)
                .storageId("03c2523f-6a22-4428-890e-3db6b613f48b");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "6766f169-5df9-4e9b-8e09-a269a879dd33",
            "aAuGXWsNdhyWJyqrPAKmmZGZJN",
            "2022-07-04T11:47:15.000000Z",
            "2021-02-13T08:49:11.000000Z",
            "602867b4-6c6a-49ba-ab32-7161fcd53418"
        )
                .discountAmount(5533)
                .code("xf")
                .usageLimit(8070)
                .minAmount(5763)
                .storageId("3de35655-d515-43b8-9712-dbc857ad1c49");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "6766f169-5df9-4e9b-8e09-a269a879dd33",
            "aAuGXWsNdhyWJyqrPAKmmZGZJN",
            "2022-07-04T11:47:15.000000Z",
            "2021-02-13T08:49:11.000000Z",
            "602867b4-6c6a-49ba-ab32-7161fcd53418"
        )
                .discountAmount(4094)
                .setPublic(false)
                .code("LO5Dd5X")
                .usageLimit(1164)
                .minAmount(144)
                .storageId("3bac0488-36c6-4f57-8c0e-308cab040384");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "6766f169-5df9-4e9b-8e09-a269a879dd33",
            "aAuGXWsNdhyWJyqrPAKmmZGZJN",
            "2022-07-04T11:47:15.000000Z",
            "2021-02-13T08:49:11.000000Z",
            "602867b4-6c6a-49ba-ab32-7161fcd53418"
        )
                .discountAmount(2528)
                .setHidden(false)
                .setPublic(false)
                .code("oU011Xo")
                .usageLimit(7962)
                .minAmount(5831)
                .storageId("59691fef-5a9b-4693-83f0-4eba34c704e5");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "6766f169-5df9-4e9b-8e09-a269a879dd33",
            "aAuGXWsNdhyWJyqrPAKmmZGZJN",
            "2022-07-04T11:47:15.000000Z",
            "2021-02-13T08:49:11.000000Z",
            "602867b4-6c6a-49ba-ab32-7161fcd53418"
        )
                .discountAmount(8684)
                .setDisabled(true)
                .setHidden(true)
                .setPublic(true)
                .code("PpOt9Y")
                .usageLimit(9916)
                .minAmount(7954)
                .storageId("59c54db3-d86d-42f3-b874-eb634e0f0273");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "6766f169-5df9-4e9b-8e09-a269a879dd33",
            "aAuGXWsNdhyWJyqrPAKmmZGZJN",
            "2022-07-04T11:47:15.000000Z",
            "2021-02-13T08:49:11.000000Z",
            "602867b4-6c6a-49ba-ab32-7161fcd53418"
        )
                .discountAmount(1542)
                .displayEndsAt("2022-07-16T04:09:00.000000Z")
                .setDisabled(true)
                .setHidden(false)
                .setPublic(false)
                .code("QEq")
                .usageLimit(4475)
                .minAmount(9266)
                .storageId("65bac18f-ed23-4441-9d55-29ec72878374");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test9() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "6766f169-5df9-4e9b-8e09-a269a879dd33",
            "aAuGXWsNdhyWJyqrPAKmmZGZJN",
            "2022-07-04T11:47:15.000000Z",
            "2021-02-13T08:49:11.000000Z",
            "602867b4-6c6a-49ba-ab32-7161fcd53418"
        )
                .discountAmount(9323)
                .displayStartsAt("2020-01-17T13:55:18.000000Z")
                .displayEndsAt("2023-11-10T17:58:13.000000Z")
                .setDisabled(false)
                .setHidden(true)
                .setPublic(false)
                .code("V8aSNO9")
                .usageLimit(2060)
                .minAmount(6855)
                .storageId("84f34919-7dd1-4521-95c0-d76e3459a144");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test10() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "6766f169-5df9-4e9b-8e09-a269a879dd33",
            "aAuGXWsNdhyWJyqrPAKmmZGZJN",
            "2022-07-04T11:47:15.000000Z",
            "2021-02-13T08:49:11.000000Z",
            "602867b4-6c6a-49ba-ab32-7161fcd53418"
        )
                .discountAmount(5875)
                .discountUpperLimit(1146)
                .displayStartsAt("2024-04-11T07:18:28.000000Z")
                .displayEndsAt("2020-05-25T08:09:45.000000Z")
                .setDisabled(false)
                .setHidden(false)
                .setPublic(true)
                .code("g8bbFQz")
                .usageLimit(4669)
                .minAmount(9680)
                .storageId("e9db5f89-f6e4-4c24-acd8-ef0e9fc4b1c4");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test11() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "6766f169-5df9-4e9b-8e09-a269a879dd33",
            "aAuGXWsNdhyWJyqrPAKmmZGZJN",
            "2022-07-04T11:47:15.000000Z",
            "2021-02-13T08:49:11.000000Z",
            "602867b4-6c6a-49ba-ab32-7161fcd53418"
        )
                .discountAmount(5467)
                .description("ujuzOkg0dnSdALdNv5r8wM328xFuBm1H3xUdHsESYPWyVyErNbO9OH6RQgeafcESSUHZ6h2XaPg728RkvVOUbcGA0kjIj9fnBbIK8dSJpAN6wIXIQ")
                .discountUpperLimit(9314)
                .displayStartsAt("2021-08-02T00:37:40.000000Z")
                .displayEndsAt("2023-08-06T16:53:53.000000Z")
                .setDisabled(false)
                .setHidden(true)
                .setPublic(false)
                .code("wXW1Rg")
                .usageLimit(7926)
                .minAmount(3472)
                .storageId("a29dc282-bb78-4a3f-aa10-4d1f86482a65");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test12() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "6766f169-5df9-4e9b-8e09-a269a879dd33",
            "aAuGXWsNdhyWJyqrPAKmmZGZJN",
            "2022-07-04T11:47:15.000000Z",
            "2021-02-13T08:49:11.000000Z",
            "602867b4-6c6a-49ba-ab32-7161fcd53418"
        )
                .discountAmount(275)
                .setShopSpecified(false)
                .availableShopIds(new String[]{"a59beb91-ad74-4971-a32f-73852727747d","b17580dc-5a30-4b82-ac56-6075137f9285","ba00cb56-1786-40a0-80e5-6affbd737376","54cdc9c2-c39a-4e70-be4b-dfa582324009","0c618721-ea5a-4046-b355-d1104fdba895","49af4f4a-3750-4373-862c-86005d97183d","e1191f43-1ea4-4a2a-90fc-a6e3edd01c88","bc43387f-096b-41a6-8f52-833f1775b26f","799bed86-3d27-4f43-99a1-9f7448225f12"});
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test13() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "6766f169-5df9-4e9b-8e09-a269a879dd33",
            "aAuGXWsNdhyWJyqrPAKmmZGZJN",
            "2022-07-04T11:47:15.000000Z",
            "2021-02-13T08:49:11.000000Z",
            "602867b4-6c6a-49ba-ab32-7161fcd53418"
        )
                .discountAmount(7000)
                .setShopSpecified(true)
                .availableShopIds(new String[]{"9c6798c1-7b71-4022-804a-f0edf4674374","e755e42b-0e26-4e26-b4c0-aedc280cf304","9011a98e-fc59-4063-9358-37c458406e89","21b812ef-6201-4098-85c3-8de765231577","3e34b9e0-3bac-4fa4-b9be-59a93e5b2f70","4d166fd1-c0ee-4883-a0fc-135129db1c55"})
                .storageId("a85d8b2b-9df3-41ee-9ed7-90942a5b84cf");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test14() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "6766f169-5df9-4e9b-8e09-a269a879dd33",
            "aAuGXWsNdhyWJyqrPAKmmZGZJN",
            "2022-07-04T11:47:15.000000Z",
            "2021-02-13T08:49:11.000000Z",
            "602867b4-6c6a-49ba-ab32-7161fcd53418"
        )
                .discountAmount(4058)
                .setShopSpecified(false)
                .availableShopIds(new String[]{"29d0c4ca-1538-4707-a152-21dcf67f4bdd","72f91f8e-2e47-4df7-9e18-e3fa1b313416","468e4e36-4c56-4e44-9ef1-c032000810a9"})
                .minAmount(1899)
                .storageId("78ee4ecc-13d6-49b7-ae15-05d55dcfc352");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test15() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "6766f169-5df9-4e9b-8e09-a269a879dd33",
            "aAuGXWsNdhyWJyqrPAKmmZGZJN",
            "2022-07-04T11:47:15.000000Z",
            "2021-02-13T08:49:11.000000Z",
            "602867b4-6c6a-49ba-ab32-7161fcd53418"
        )
                .discountAmount(2182)
                .setShopSpecified(false)
                .availableShopIds(new String[]{"aeb86f97-1cd9-4982-b3b1-f442a3277bd4","38ce07e2-54cb-4b6a-b994-d08a4f2c0b51","5a6c7a65-e9fc-41cd-a6c7-9f57b207b055","26ec1cb4-1db6-426c-8031-89c08c1b28e5","96ceea76-9032-470b-b351-aedbe0d22c35","66632850-0edf-4705-9bd4-9f8c07ca4aa1"})
                .usageLimit(8272)
                .minAmount(8679)
                .storageId("545687f4-0792-442e-b43d-6a34a7823606");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test16() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "6766f169-5df9-4e9b-8e09-a269a879dd33",
            "aAuGXWsNdhyWJyqrPAKmmZGZJN",
            "2022-07-04T11:47:15.000000Z",
            "2021-02-13T08:49:11.000000Z",
            "602867b4-6c6a-49ba-ab32-7161fcd53418"
        )
                .discountAmount(7489)
                .setShopSpecified(false)
                .availableShopIds(new String[]{"2b2a45aa-bd3c-4fad-b7dc-4722c47e733f","d8f0d850-a4c0-4f31-9a24-9da0d08b8117","8065e7a4-ac30-40ca-9694-5ce61e62503a","d20cfec6-32ba-4ddc-b952-b1aa466b6bd3"})
                .code("f0Q")
                .usageLimit(945)
                .minAmount(3824)
                .storageId("601055ed-8068-42d7-8881-e6cef7ce467b");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test17() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "6766f169-5df9-4e9b-8e09-a269a879dd33",
            "aAuGXWsNdhyWJyqrPAKmmZGZJN",
            "2022-07-04T11:47:15.000000Z",
            "2021-02-13T08:49:11.000000Z",
            "602867b4-6c6a-49ba-ab32-7161fcd53418"
        )
                .discountAmount(1822)
                .setShopSpecified(true)
                .availableShopIds(new String[]{"9e9a2465-dc02-48b7-87c5-bc056113af3a","2c35717b-616a-489d-9e08-cdc2d0b79cbc"})
                .setPublic(true)
                .code("kQNn9uWl9")
                .usageLimit(2067)
                .minAmount(8138)
                .storageId("3f23cb2d-b775-4aa2-811e-375ea0720e6e");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test18() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "6766f169-5df9-4e9b-8e09-a269a879dd33",
            "aAuGXWsNdhyWJyqrPAKmmZGZJN",
            "2022-07-04T11:47:15.000000Z",
            "2021-02-13T08:49:11.000000Z",
            "602867b4-6c6a-49ba-ab32-7161fcd53418"
        )
                .discountAmount(5150)
                .setShopSpecified(true)
                .availableShopIds(new String[]{"0b4f4421-9d00-4fe0-b966-0d7410a6e611","45b6b7dc-03f7-42ab-a77c-4a39f0fa509d","d3359973-3ada-4636-85cf-e4581214cf6d","0ea9a38e-2c1a-417a-aecd-89f37e7e3a4d","1c52da93-b583-4b56-8544-4be84462aadf","b76ea00d-ae62-4da1-babe-70dd7c36b1a7"})
                .setHidden(true)
                .setPublic(true)
                .code("vUl3UtK")
                .usageLimit(443)
                .minAmount(9691)
                .storageId("99f70450-3c88-4f92-b5a8-815441d23bcc");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test19() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "6766f169-5df9-4e9b-8e09-a269a879dd33",
            "aAuGXWsNdhyWJyqrPAKmmZGZJN",
            "2022-07-04T11:47:15.000000Z",
            "2021-02-13T08:49:11.000000Z",
            "602867b4-6c6a-49ba-ab32-7161fcd53418"
        )
                .discountAmount(7936)
                .setShopSpecified(true)
                .availableShopIds(new String[]{"bc9084e8-2abf-48ec-9bc0-ee3db3664d6c","442f821d-d401-46b0-87d0-0e9c724bb834","52dabad1-e9a9-4941-ab0a-37d10ff91bbd"})
                .setDisabled(false)
                .setHidden(false)
                .setPublic(false)
                .code("PrTAo5HhY")
                .usageLimit(7829)
                .minAmount(8706)
                .storageId("c4d8b70b-04ea-4e43-a17e-ca4747eda32b");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test20() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "6766f169-5df9-4e9b-8e09-a269a879dd33",
            "aAuGXWsNdhyWJyqrPAKmmZGZJN",
            "2022-07-04T11:47:15.000000Z",
            "2021-02-13T08:49:11.000000Z",
            "602867b4-6c6a-49ba-ab32-7161fcd53418"
        )
                .discountAmount(5469)
                .setShopSpecified(true)
                .availableShopIds(new String[]{"bfa7c7c0-3b9c-4b94-aa14-a4f5cb51b54a","283a90af-a42d-457c-aeae-8788128323c3","2ad38266-707b-4905-822c-b8cf0d9ee834","85fa7efb-b757-4631-838e-f8c95385e556","1912f30e-8996-46b2-9556-dee9e853a75a","753e7a56-e73c-4cc8-80d2-d6572b3b7305"})
                .displayEndsAt("2023-06-05T01:05:20.000000Z")
                .setDisabled(false)
                .setHidden(false)
                .setPublic(true)
                .code("j3cWX")
                .usageLimit(3634)
                .minAmount(3770)
                .storageId("f89234cc-76c8-4f00-8cdb-5b786f0b6a09");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test21() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "6766f169-5df9-4e9b-8e09-a269a879dd33",
            "aAuGXWsNdhyWJyqrPAKmmZGZJN",
            "2022-07-04T11:47:15.000000Z",
            "2021-02-13T08:49:11.000000Z",
            "602867b4-6c6a-49ba-ab32-7161fcd53418"
        )
                .discountAmount(7932)
                .setShopSpecified(false)
                .availableShopIds(new String[]{"b9a977d6-8c5d-4cc3-bed2-d0d889492ca4","d5818992-91a3-414a-b752-3752962d62b9","3b4a82f6-6be8-4729-8ec9-ab142d84ff3e","7c3f0883-25f5-4215-85a0-8e8bb1029db3"})
                .displayStartsAt("2020-06-06T14:51:56.000000Z")
                .displayEndsAt("2020-10-14T03:23:02.000000Z")
                .setDisabled(true)
                .setHidden(true)
                .setPublic(false)
                .code("kGd5KFM")
                .usageLimit(6689)
                .minAmount(5918)
                .storageId("3ff0cbea-6953-4c7b-be3e-4e25fc26bbc8");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test22() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "6766f169-5df9-4e9b-8e09-a269a879dd33",
            "aAuGXWsNdhyWJyqrPAKmmZGZJN",
            "2022-07-04T11:47:15.000000Z",
            "2021-02-13T08:49:11.000000Z",
            "602867b4-6c6a-49ba-ab32-7161fcd53418"
        )
                .discountAmount(9996)
                .setShopSpecified(false)
                .availableShopIds(new String[]{"ce67f98f-0785-42db-9210-8a21966fd081","0743d597-9212-467d-81b9-ff1b6fa09481"})
                .discountUpperLimit(8133)
                .displayStartsAt("2022-11-04T06:50:09.000000Z")
                .displayEndsAt("2020-12-08T05:10:13.000000Z")
                .setDisabled(true)
                .setHidden(true)
                .setPublic(true)
                .code("iSyzzCHj")
                .usageLimit(1238)
                .minAmount(6853)
                .storageId("20142e89-d545-40e7-b087-ecba52153bfc");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test23() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "6766f169-5df9-4e9b-8e09-a269a879dd33",
            "aAuGXWsNdhyWJyqrPAKmmZGZJN",
            "2022-07-04T11:47:15.000000Z",
            "2021-02-13T08:49:11.000000Z",
            "602867b4-6c6a-49ba-ab32-7161fcd53418"
        )
                .discountAmount(3312)
                .setShopSpecified(false)
                .availableShopIds(new String[]{"c9e7db59-433c-465b-bb44-154641e462a1","53201ac6-a0c4-4e02-988d-bb162d001ed9","2e50fd91-d7ad-4b31-b12d-9af5dcc54c78","8902bd4e-616b-4d95-ae53-82c05b93440b","e6d3d19f-7223-42d3-b12e-b3f679e4b5ed","52a56b1c-8821-4c1d-8328-e14cec90ca4f","a4ebd455-d6ec-41dd-a064-de201fd3fcbe","f4e4f526-801c-4363-b1b7-b07ab869d23c"})
                .description("rM7imjJVYnMFmZVKbnQskJ4SJWYdnxMjsH9rlpcWw1Vg5A3j")
                .discountUpperLimit(8101)
                .displayStartsAt("2024-04-06T13:04:31.000000Z")
                .displayEndsAt("2024-01-07T07:14:33.000000Z")
                .setDisabled(false)
                .setHidden(true)
                .setPublic(false)
                .code("VDn")
                .usageLimit(7260)
                .minAmount(6071)
                .storageId("466bd282-148a-470e-965f-c802f899a2c1");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test24() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "6766f169-5df9-4e9b-8e09-a269a879dd33",
            "aAuGXWsNdhyWJyqrPAKmmZGZJN",
            "2022-07-04T11:47:15.000000Z",
            "2021-02-13T08:49:11.000000Z",
            "602867b4-6c6a-49ba-ab32-7161fcd53418"
        )
                .discountPercentage(6905.0);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test25() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "6766f169-5df9-4e9b-8e09-a269a879dd33",
            "aAuGXWsNdhyWJyqrPAKmmZGZJN",
            "2022-07-04T11:47:15.000000Z",
            "2021-02-13T08:49:11.000000Z",
            "602867b4-6c6a-49ba-ab32-7161fcd53418"
        )
                .discountPercentage(3816.0)
                .storageId("025def26-9766-4731-960b-e5e1d03e4c32");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test26() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "6766f169-5df9-4e9b-8e09-a269a879dd33",
            "aAuGXWsNdhyWJyqrPAKmmZGZJN",
            "2022-07-04T11:47:15.000000Z",
            "2021-02-13T08:49:11.000000Z",
            "602867b4-6c6a-49ba-ab32-7161fcd53418"
        )
                .discountPercentage(1815.0)
                .minAmount(8361)
                .storageId("2fcab82a-92e9-4e91-9693-61b4e4962c8d");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test27() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "6766f169-5df9-4e9b-8e09-a269a879dd33",
            "aAuGXWsNdhyWJyqrPAKmmZGZJN",
            "2022-07-04T11:47:15.000000Z",
            "2021-02-13T08:49:11.000000Z",
            "602867b4-6c6a-49ba-ab32-7161fcd53418"
        )
                .discountPercentage(7640.0)
                .usageLimit(2402)
                .minAmount(9467)
                .storageId("0d909ab0-0836-47d9-8f13-f081575448b5");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test28() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "6766f169-5df9-4e9b-8e09-a269a879dd33",
            "aAuGXWsNdhyWJyqrPAKmmZGZJN",
            "2022-07-04T11:47:15.000000Z",
            "2021-02-13T08:49:11.000000Z",
            "602867b4-6c6a-49ba-ab32-7161fcd53418"
        )
                .discountPercentage(6535.0)
                .code("FN9bW")
                .usageLimit(7865)
                .minAmount(2539)
                .storageId("adbf89ad-7822-4513-b3c6-922a83c93cba");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test29() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "6766f169-5df9-4e9b-8e09-a269a879dd33",
            "aAuGXWsNdhyWJyqrPAKmmZGZJN",
            "2022-07-04T11:47:15.000000Z",
            "2021-02-13T08:49:11.000000Z",
            "602867b4-6c6a-49ba-ab32-7161fcd53418"
        )
                .discountPercentage(7691.0)
                .setPublic(true)
                .code("8sMw")
                .usageLimit(6242)
                .minAmount(9832)
                .storageId("2d4b08c0-8201-4831-9746-89a56d1f4194");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test30() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "6766f169-5df9-4e9b-8e09-a269a879dd33",
            "aAuGXWsNdhyWJyqrPAKmmZGZJN",
            "2022-07-04T11:47:15.000000Z",
            "2021-02-13T08:49:11.000000Z",
            "602867b4-6c6a-49ba-ab32-7161fcd53418"
        )
                .discountPercentage(9204.0)
                .setHidden(true)
                .setPublic(true)
                .code("EmCrF")
                .usageLimit(5037)
                .minAmount(4749)
                .storageId("143eb371-58ce-4392-b73f-b128c0ef59a9");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test31() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "6766f169-5df9-4e9b-8e09-a269a879dd33",
            "aAuGXWsNdhyWJyqrPAKmmZGZJN",
            "2022-07-04T11:47:15.000000Z",
            "2021-02-13T08:49:11.000000Z",
            "602867b4-6c6a-49ba-ab32-7161fcd53418"
        )
                .discountPercentage(3684.0)
                .setDisabled(true)
                .setHidden(true)
                .setPublic(false)
                .code("5Q")
                .usageLimit(5856)
                .minAmount(8045)
                .storageId("8c30ebc6-f94d-4a05-b6fb-e5ecc5ed5123");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test32() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "6766f169-5df9-4e9b-8e09-a269a879dd33",
            "aAuGXWsNdhyWJyqrPAKmmZGZJN",
            "2022-07-04T11:47:15.000000Z",
            "2021-02-13T08:49:11.000000Z",
            "602867b4-6c6a-49ba-ab32-7161fcd53418"
        )
                .discountPercentage(6297.0)
                .displayEndsAt("2022-04-29T07:55:42.000000Z")
                .setDisabled(true)
                .setHidden(true)
                .setPublic(true)
                .code("a2")
                .usageLimit(8588)
                .minAmount(1448)
                .storageId("0ad47ba4-5ea6-4e83-a76f-ea18a4c48b28");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test33() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "6766f169-5df9-4e9b-8e09-a269a879dd33",
            "aAuGXWsNdhyWJyqrPAKmmZGZJN",
            "2022-07-04T11:47:15.000000Z",
            "2021-02-13T08:49:11.000000Z",
            "602867b4-6c6a-49ba-ab32-7161fcd53418"
        )
                .discountPercentage(8908.0)
                .displayStartsAt("2023-12-22T04:20:55.000000Z")
                .displayEndsAt("2023-10-15T14:09:14.000000Z")
                .setDisabled(false)
                .setHidden(false)
                .setPublic(false)
                .code("E9OEvOU")
                .usageLimit(4169)
                .minAmount(7785)
                .storageId("3d98deae-d342-4b3e-b7e2-19bc6c04764a");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test34() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "6766f169-5df9-4e9b-8e09-a269a879dd33",
            "aAuGXWsNdhyWJyqrPAKmmZGZJN",
            "2022-07-04T11:47:15.000000Z",
            "2021-02-13T08:49:11.000000Z",
            "602867b4-6c6a-49ba-ab32-7161fcd53418"
        )
                .discountPercentage(5017.0)
                .discountUpperLimit(4268)
                .displayStartsAt("2023-04-20T09:30:47.000000Z")
                .displayEndsAt("2020-06-02T02:54:45.000000Z")
                .setDisabled(true)
                .setHidden(false)
                .setPublic(false)
                .code("fgOe9n")
                .usageLimit(1238)
                .minAmount(6254)
                .storageId("27c7e262-9c4f-46ae-8de6-bb5bcc92f031");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test35() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "6766f169-5df9-4e9b-8e09-a269a879dd33",
            "aAuGXWsNdhyWJyqrPAKmmZGZJN",
            "2022-07-04T11:47:15.000000Z",
            "2021-02-13T08:49:11.000000Z",
            "602867b4-6c6a-49ba-ab32-7161fcd53418"
        )
                .discountPercentage(1885.0)
                .description("ceXbMKgmiS2lNCj0coTfFCchnpKAXXDxQv4bOJ9FCs7r9SIiPLZxhYcpGO5FAV5Tmz4fnzfWLRafbjHHiTlinfVLWJIyGq0eGZ3LjtgQn48RP8")
                .discountUpperLimit(8336)
                .displayStartsAt("2020-01-06T07:23:01.000000Z")
                .displayEndsAt("2020-06-15T12:46:52.000000Z")
                .setDisabled(false)
                .setHidden(false)
                .setPublic(true)
                .code("kI4pFJl")
                .usageLimit(6655)
                .minAmount(3551)
                .storageId("126693af-cedc-4cb8-a1b4-05b925102d26");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test36() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "6766f169-5df9-4e9b-8e09-a269a879dd33",
            "aAuGXWsNdhyWJyqrPAKmmZGZJN",
            "2022-07-04T11:47:15.000000Z",
            "2021-02-13T08:49:11.000000Z",
            "602867b4-6c6a-49ba-ab32-7161fcd53418"
        )
                .discountPercentage(8325.0)
                .setShopSpecified(true)
                .availableShopIds(new String[]{"55e623d3-3008-4ae9-92d6-d0729014de2b"});
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test37() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "6766f169-5df9-4e9b-8e09-a269a879dd33",
            "aAuGXWsNdhyWJyqrPAKmmZGZJN",
            "2022-07-04T11:47:15.000000Z",
            "2021-02-13T08:49:11.000000Z",
            "602867b4-6c6a-49ba-ab32-7161fcd53418"
        )
                .discountPercentage(8900.0)
                .setShopSpecified(false)
                .availableShopIds(new String[]{"935a1f6d-fcca-4e9d-b59f-4b54854d1e50","09a8f22f-8f10-4e6b-8cf5-765e55b2e64e","9fc13405-bae7-4909-a5ee-32a37371a375","50f44395-9db1-43a2-b863-bddf5cace7be","902469db-15b0-454b-ae8f-e736833a1150","cc6ad596-fb7a-4dca-862c-4bd1ef36c413","2c0b50ed-ec2c-41b7-b768-2c0729ef987b","e907ae43-0118-41ae-9bb3-9b0cf54ffa40","ff729413-8ce2-4abd-be79-10d9b7b8c4a4","69cef47c-5a68-426e-9e40-a15db0919805"})
                .storageId("dbd238bf-74eb-4939-8c36-0a79ca2eedb5");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test38() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "6766f169-5df9-4e9b-8e09-a269a879dd33",
            "aAuGXWsNdhyWJyqrPAKmmZGZJN",
            "2022-07-04T11:47:15.000000Z",
            "2021-02-13T08:49:11.000000Z",
            "602867b4-6c6a-49ba-ab32-7161fcd53418"
        )
                .discountPercentage(2100.0)
                .setShopSpecified(true)
                .availableShopIds(new String[]{"298885eb-261f-4c15-a34e-76c868c83027","d9f60dd2-e9cd-4a5c-9818-c02e7433add1","08083083-b4d4-4a7a-9dd7-0d0c6491a8b1","94c1bb16-553d-44a5-a9c2-970faebdd969","baba755e-cdd5-4cfd-a0c9-4118da35531c","1c8d12a8-91fd-4535-ba5f-8f4ae394208f","f376cade-09af-443a-873a-e37f67fd241e","7d2c923f-e862-4e00-a8c7-4eefd1c02545"})
                .minAmount(7161)
                .storageId("3f29d096-da9e-4404-99cb-2a97108e0b05");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test39() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "6766f169-5df9-4e9b-8e09-a269a879dd33",
            "aAuGXWsNdhyWJyqrPAKmmZGZJN",
            "2022-07-04T11:47:15.000000Z",
            "2021-02-13T08:49:11.000000Z",
            "602867b4-6c6a-49ba-ab32-7161fcd53418"
        )
                .discountPercentage(2185.0)
                .setShopSpecified(false)
                .availableShopIds(new String[]{"c627f3ef-a930-4b04-97ad-45768dcfdd4e","67908976-c2f5-47e0-9d7c-091bd2633dda","971cdf32-d77a-4e4f-8e91-f12542046b8a","b92bbb9b-9cf9-4602-be6d-eebdb03f06e4","30f6517d-1f8f-4b00-960f-e29e7e20bd8c"})
                .usageLimit(7222)
                .minAmount(5012)
                .storageId("52ebbb80-abaf-4a81-a0a1-b89408e5a109");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test40() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "6766f169-5df9-4e9b-8e09-a269a879dd33",
            "aAuGXWsNdhyWJyqrPAKmmZGZJN",
            "2022-07-04T11:47:15.000000Z",
            "2021-02-13T08:49:11.000000Z",
            "602867b4-6c6a-49ba-ab32-7161fcd53418"
        )
                .discountPercentage(4730.0)
                .setShopSpecified(true)
                .availableShopIds(new String[]{"cc6bf7b6-f610-4710-b3dc-5a6c0f58fd7b","c625cb5f-9b9e-405b-8622-76f235ed48f9"})
                .code("8C4rDtJ")
                .usageLimit(5582)
                .minAmount(1855)
                .storageId("e2dbf0fa-66fc-4895-a345-c3465577b31d");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test41() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "6766f169-5df9-4e9b-8e09-a269a879dd33",
            "aAuGXWsNdhyWJyqrPAKmmZGZJN",
            "2022-07-04T11:47:15.000000Z",
            "2021-02-13T08:49:11.000000Z",
            "602867b4-6c6a-49ba-ab32-7161fcd53418"
        )
                .discountPercentage(2148.0)
                .setShopSpecified(true)
                .availableShopIds(new String[]{"4c0009ef-f296-4117-a2b4-98bc3219c2bb","4244be06-4eb2-4db7-8912-6025c4b5a3d3","cddfb65e-5b95-48bd-8205-bf79523b46f5","6a421a5e-e124-479e-ad38-97cd6539aa0f","1b818799-0fc9-4b72-a0d6-5f95c9d93629","cfcdafbc-a4f5-4be7-962e-d45ca9b93bc2","24ecb5a2-89a4-46a4-a7af-2166e0fda2d4"})
                .setPublic(false)
                .code("i")
                .usageLimit(3390)
                .minAmount(5939)
                .storageId("9c20b5ad-eb71-481c-ab70-91ab73d86e1e");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test42() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "6766f169-5df9-4e9b-8e09-a269a879dd33",
            "aAuGXWsNdhyWJyqrPAKmmZGZJN",
            "2022-07-04T11:47:15.000000Z",
            "2021-02-13T08:49:11.000000Z",
            "602867b4-6c6a-49ba-ab32-7161fcd53418"
        )
                .discountPercentage(344.0)
                .setShopSpecified(false)
                .availableShopIds(new String[]{"074885e7-e403-4413-9a5a-1dee6263345a","b8bd1f22-b4b3-4d15-a0cc-8f83d387101e","1139d74a-96cf-43f5-a7b3-7a8d99e69d69","880c921b-f277-46a3-a985-6ba8fa46601f"})
                .setHidden(true)
                .setPublic(true)
                .code("HdsS3")
                .usageLimit(3756)
                .minAmount(133)
                .storageId("83f44596-2a53-4d05-a8ea-7b8f91f114af");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test43() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "6766f169-5df9-4e9b-8e09-a269a879dd33",
            "aAuGXWsNdhyWJyqrPAKmmZGZJN",
            "2022-07-04T11:47:15.000000Z",
            "2021-02-13T08:49:11.000000Z",
            "602867b4-6c6a-49ba-ab32-7161fcd53418"
        )
                .discountPercentage(3857.0)
                .setShopSpecified(true)
                .availableShopIds(new String[]{"0b31ac34-f91f-4253-815c-3c3fdd13c1f2","39da7e0d-6db1-4667-8fab-81d32052d05c"})
                .setDisabled(false)
                .setHidden(true)
                .setPublic(false)
                .code("Pel")
                .usageLimit(7033)
                .minAmount(3063)
                .storageId("f12ef0a9-645b-4f71-ae27-6f6b27922871");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test44() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "6766f169-5df9-4e9b-8e09-a269a879dd33",
            "aAuGXWsNdhyWJyqrPAKmmZGZJN",
            "2022-07-04T11:47:15.000000Z",
            "2021-02-13T08:49:11.000000Z",
            "602867b4-6c6a-49ba-ab32-7161fcd53418"
        )
                .discountPercentage(7976.0)
                .setShopSpecified(false)
                .availableShopIds(new String[]{"ed415e4a-40c7-491c-86db-6b7b9047bc21","96da3455-78a4-4357-971f-58de46390022","52b95c63-588c-40df-82ae-d68f76c870f3","1cbc1fb7-844f-4a4b-b22b-876189a34d37","d48ccbdd-7dcc-490d-a1bd-c1d40e3b0e47","11a83669-d680-4d2d-8ae0-71a50b0f02d3","b8876de9-e6b2-44ee-9f56-5643e01671e1"})
                .displayEndsAt("2023-05-18T23:24:23.000000Z")
                .setDisabled(false)
                .setHidden(false)
                .setPublic(false)
                .code("Wf")
                .usageLimit(6811)
                .minAmount(8019)
                .storageId("08830937-d988-4741-b15c-657798bfddcc");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test45() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "6766f169-5df9-4e9b-8e09-a269a879dd33",
            "aAuGXWsNdhyWJyqrPAKmmZGZJN",
            "2022-07-04T11:47:15.000000Z",
            "2021-02-13T08:49:11.000000Z",
            "602867b4-6c6a-49ba-ab32-7161fcd53418"
        )
                .discountPercentage(492.0)
                .setShopSpecified(true)
                .availableShopIds(new String[]{"614a3316-a7e9-4715-a33e-02cfa30af7c2"})
                .displayStartsAt("2022-08-19T08:58:33.000000Z")
                .displayEndsAt("2022-03-25T12:11:45.000000Z")
                .setDisabled(true)
                .setHidden(true)
                .setPublic(false)
                .code("F")
                .usageLimit(4045)
                .minAmount(8409)
                .storageId("a3f6e75e-cad1-464c-911b-720b25f9c608");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test46() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "6766f169-5df9-4e9b-8e09-a269a879dd33",
            "aAuGXWsNdhyWJyqrPAKmmZGZJN",
            "2022-07-04T11:47:15.000000Z",
            "2021-02-13T08:49:11.000000Z",
            "602867b4-6c6a-49ba-ab32-7161fcd53418"
        )
                .discountPercentage(3147.0)
                .setShopSpecified(false)
                .availableShopIds(new String[]{"68d9266a-f65d-445f-a471-3588e7417dc8","520127b9-c760-48a5-8b87-53e0cee1e364","a2bd8df9-53e0-441a-a6e7-851a622658f3"})
                .discountUpperLimit(4934)
                .displayStartsAt("2020-05-16T10:47:43.000000Z")
                .displayEndsAt("2021-11-05T09:57:35.000000Z")
                .setDisabled(true)
                .setHidden(true)
                .setPublic(false)
                .code("89Abrha")
                .usageLimit(5397)
                .minAmount(389)
                .storageId("c28b0a7e-0bd7-4eff-921c-1acdbdd36389");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test47() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "6766f169-5df9-4e9b-8e09-a269a879dd33",
            "aAuGXWsNdhyWJyqrPAKmmZGZJN",
            "2022-07-04T11:47:15.000000Z",
            "2021-02-13T08:49:11.000000Z",
            "602867b4-6c6a-49ba-ab32-7161fcd53418"
        )
                .discountPercentage(6992.0)
                .setShopSpecified(true)
                .availableShopIds(new String[]{"55441377-1a40-4abf-8139-be29a27307aa","6b74cb42-7e16-4462-ab1e-fc578338f53d","1e068547-1edd-47bb-8c57-2578b6155354","8e7f264f-c614-400b-91dd-5aa803069f2d","92ee026e-c4bd-4ef1-8d5b-cda1faee8148"})
                .description("U20ukx1FDQpVqtvlq3pwtYNpqFJFhJ6H")
                .discountUpperLimit(3746)
                .displayStartsAt("2022-06-21T01:16:33.000000Z")
                .displayEndsAt("2020-06-13T02:31:21.000000Z")
                .setDisabled(false)
                .setHidden(false)
                .setPublic(false)
                .code("hAD4rp")
                .usageLimit(7287)
                .minAmount(5143)
                .storageId("505e7faa-8ce8-4cd7-931b-1c1116ecf546");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
