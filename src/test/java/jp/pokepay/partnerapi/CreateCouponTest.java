// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.CreateCoupon;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class CreateCouponTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "258a77ac-e814-480d-bd48-088b7e33d460",
            "fsMVPrc0Xwpzvt",
            "2021-10-10T02:30:30.000000+09:00",
            "2020-04-06T01:16:18.000000+09:00",
            "7e59b33b-6a83-4568-aef3-df7746a449c4"
        )
                .discountAmount(1953);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "258a77ac-e814-480d-bd48-088b7e33d460",
            "fsMVPrc0Xwpzvt",
            "2021-10-10T02:30:30.000000+09:00",
            "2020-04-06T01:16:18.000000+09:00",
            "7e59b33b-6a83-4568-aef3-df7746a449c4"
        )
                .discountAmount(3972)
                .storageId("b081dfbf-f4a9-4e78-8d3e-b10f5381796c");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "258a77ac-e814-480d-bd48-088b7e33d460",
            "fsMVPrc0Xwpzvt",
            "2021-10-10T02:30:30.000000+09:00",
            "2020-04-06T01:16:18.000000+09:00",
            "7e59b33b-6a83-4568-aef3-df7746a449c4"
        )
                .discountAmount(1889)
                .minAmount(4321)
                .storageId("2e184c2b-c3fa-4133-a318-e98bb041a370");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "258a77ac-e814-480d-bd48-088b7e33d460",
            "fsMVPrc0Xwpzvt",
            "2021-10-10T02:30:30.000000+09:00",
            "2020-04-06T01:16:18.000000+09:00",
            "7e59b33b-6a83-4568-aef3-df7746a449c4"
        )
                .discountAmount(8629)
                .usageLimit(610)
                .minAmount(3193)
                .storageId("02f40a84-c8b2-4336-9dd3-4e3d18d44889");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "258a77ac-e814-480d-bd48-088b7e33d460",
            "fsMVPrc0Xwpzvt",
            "2021-10-10T02:30:30.000000+09:00",
            "2020-04-06T01:16:18.000000+09:00",
            "7e59b33b-6a83-4568-aef3-df7746a449c4"
        )
                .discountAmount(9763)
                .code("DicYD2U")
                .usageLimit(8208)
                .minAmount(7531)
                .storageId("eb932f6f-a487-4fae-b113-49be5f234180");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "258a77ac-e814-480d-bd48-088b7e33d460",
            "fsMVPrc0Xwpzvt",
            "2021-10-10T02:30:30.000000+09:00",
            "2020-04-06T01:16:18.000000+09:00",
            "7e59b33b-6a83-4568-aef3-df7746a449c4"
        )
                .discountAmount(4050)
                .setPublic(true)
                .code("YKlOT47")
                .usageLimit(7860)
                .minAmount(4099)
                .storageId("8b1d2e5c-20b8-4da0-a763-04409f3130b8");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "258a77ac-e814-480d-bd48-088b7e33d460",
            "fsMVPrc0Xwpzvt",
            "2021-10-10T02:30:30.000000+09:00",
            "2020-04-06T01:16:18.000000+09:00",
            "7e59b33b-6a83-4568-aef3-df7746a449c4"
        )
                .discountAmount(7047)
                .setHidden(true)
                .setPublic(false)
                .code("ljT2dack")
                .usageLimit(6241)
                .minAmount(1286)
                .storageId("16234b48-d070-466f-afcf-1d8b4f677bf1");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "258a77ac-e814-480d-bd48-088b7e33d460",
            "fsMVPrc0Xwpzvt",
            "2021-10-10T02:30:30.000000+09:00",
            "2020-04-06T01:16:18.000000+09:00",
            "7e59b33b-6a83-4568-aef3-df7746a449c4"
        )
                .discountAmount(4888)
                .setDisabled(true)
                .setHidden(true)
                .setPublic(true)
                .code("j10ju")
                .usageLimit(8308)
                .minAmount(1776)
                .storageId("d072ebad-3adb-46fa-bfa3-1765bbc208a4");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "258a77ac-e814-480d-bd48-088b7e33d460",
            "fsMVPrc0Xwpzvt",
            "2021-10-10T02:30:30.000000+09:00",
            "2020-04-06T01:16:18.000000+09:00",
            "7e59b33b-6a83-4568-aef3-df7746a449c4"
        )
                .discountAmount(1662)
                .displayEndsAt("2022-03-07T00:55:13.000000+09:00")
                .setDisabled(false)
                .setHidden(false)
                .setPublic(false)
                .code("PI3Xzy1")
                .usageLimit(6010)
                .minAmount(5325)
                .storageId("9bc2a5be-3eae-47c4-be42-cd634475de5b");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test9() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "258a77ac-e814-480d-bd48-088b7e33d460",
            "fsMVPrc0Xwpzvt",
            "2021-10-10T02:30:30.000000+09:00",
            "2020-04-06T01:16:18.000000+09:00",
            "7e59b33b-6a83-4568-aef3-df7746a449c4"
        )
                .discountAmount(3520)
                .displayStartsAt("2023-02-25T14:54:09.000000+09:00")
                .displayEndsAt("2021-05-28T16:01:04.000000+09:00")
                .setDisabled(false)
                .setHidden(true)
                .setPublic(false)
                .code("KL8")
                .usageLimit(7449)
                .minAmount(4097)
                .storageId("9e29f9ee-f7ef-4ad3-b0af-08677a8df5b7");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test10() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "258a77ac-e814-480d-bd48-088b7e33d460",
            "fsMVPrc0Xwpzvt",
            "2021-10-10T02:30:30.000000+09:00",
            "2020-04-06T01:16:18.000000+09:00",
            "7e59b33b-6a83-4568-aef3-df7746a449c4"
        )
                .discountAmount(9502)
                .discountUpperLimit(2687)
                .displayStartsAt("2020-05-21T12:42:12.000000+09:00")
                .displayEndsAt("2022-02-07T07:27:35.000000+09:00")
                .setDisabled(true)
                .setHidden(true)
                .setPublic(true)
                .code("ik")
                .usageLimit(9966)
                .minAmount(8651)
                .storageId("9c9a74cd-e2c0-441e-baa8-29d3bd1b2e5c");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test11() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "258a77ac-e814-480d-bd48-088b7e33d460",
            "fsMVPrc0Xwpzvt",
            "2021-10-10T02:30:30.000000+09:00",
            "2020-04-06T01:16:18.000000+09:00",
            "7e59b33b-6a83-4568-aef3-df7746a449c4"
        )
                .discountAmount(6966)
                .description("SmYnmW7K")
                .discountUpperLimit(4248)
                .displayStartsAt("2021-04-07T11:22:18.000000+09:00")
                .displayEndsAt("2022-10-29T10:09:54.000000+09:00")
                .setDisabled(false)
                .setHidden(true)
                .setPublic(false)
                .code("nb")
                .usageLimit(9791)
                .minAmount(3826)
                .storageId("713a78b8-9e3f-47f5-bb5e-7198be347cbf");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test12() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "258a77ac-e814-480d-bd48-088b7e33d460",
            "fsMVPrc0Xwpzvt",
            "2021-10-10T02:30:30.000000+09:00",
            "2020-04-06T01:16:18.000000+09:00",
            "7e59b33b-6a83-4568-aef3-df7746a449c4"
        )
                .discountAmount(4483)
                .setShopSpecified(true)
                .availableShopIds(new String[]{"13c0edf1-9b54-4509-bf20-8a3f820d678f","0276f644-087b-45e7-8ea3-90097c2bce4d"});
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test13() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "258a77ac-e814-480d-bd48-088b7e33d460",
            "fsMVPrc0Xwpzvt",
            "2021-10-10T02:30:30.000000+09:00",
            "2020-04-06T01:16:18.000000+09:00",
            "7e59b33b-6a83-4568-aef3-df7746a449c4"
        )
                .discountAmount(18)
                .setShopSpecified(false)
                .availableShopIds(new String[]{"3679fb49-1766-4ed9-9029-cae55d319c04","73f2e444-e390-4666-a461-d6f36764c254"})
                .storageId("0336a9c0-1733-4cbf-9820-8cd64bc3dd36");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test14() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "258a77ac-e814-480d-bd48-088b7e33d460",
            "fsMVPrc0Xwpzvt",
            "2021-10-10T02:30:30.000000+09:00",
            "2020-04-06T01:16:18.000000+09:00",
            "7e59b33b-6a83-4568-aef3-df7746a449c4"
        )
                .discountAmount(1963)
                .setShopSpecified(false)
                .availableShopIds(new String[]{"3de683f2-433e-4f77-b9fe-4dd15d9be682","3cdd57c7-f95b-4a16-82ea-cae366fc0a2d","95d53c32-295b-44c0-9620-44f8e3531b17","c69e581f-58de-4143-89a4-f9aa60c22d33","cab487b1-1a03-4599-9c15-9f30b7d170c2","01a164f7-f0a3-4bb3-a7db-0a80ae73a864"})
                .minAmount(5862)
                .storageId("6b1c267d-0579-4f7a-85cc-cd6daa28643b");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test15() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "258a77ac-e814-480d-bd48-088b7e33d460",
            "fsMVPrc0Xwpzvt",
            "2021-10-10T02:30:30.000000+09:00",
            "2020-04-06T01:16:18.000000+09:00",
            "7e59b33b-6a83-4568-aef3-df7746a449c4"
        )
                .discountAmount(1344)
                .setShopSpecified(false)
                .availableShopIds(new String[]{"dfdcf1f4-afa6-4105-a2d5-f2d43b368661","d9b6e9e9-94cd-468d-8749-bc8740979f59","95fdaffb-1dc7-43bf-a475-5c664c47d604","3982f437-39a1-42bf-b2a2-f008ee94ea35","8b2c110f-7420-48a3-8307-77ecec8e0d06"})
                .usageLimit(8178)
                .minAmount(9981)
                .storageId("2469c561-c655-4520-94a6-c75a64b863de");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test16() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "258a77ac-e814-480d-bd48-088b7e33d460",
            "fsMVPrc0Xwpzvt",
            "2021-10-10T02:30:30.000000+09:00",
            "2020-04-06T01:16:18.000000+09:00",
            "7e59b33b-6a83-4568-aef3-df7746a449c4"
        )
                .discountAmount(5909)
                .setShopSpecified(true)
                .availableShopIds(new String[]{"8bb395b8-92a0-4de3-959a-8b484352b7ff","50d55a58-d54d-4362-9ef7-6a68c66426e3","5c667805-e9c4-4c95-bdaa-d2274ac0dbac","b1c22c08-8ecd-4773-ad3c-80a891260498"})
                .code("hFjw7p1k")
                .usageLimit(3010)
                .minAmount(9611)
                .storageId("4258c0c9-74d6-49b3-8b2f-c461327acd54");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test17() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "258a77ac-e814-480d-bd48-088b7e33d460",
            "fsMVPrc0Xwpzvt",
            "2021-10-10T02:30:30.000000+09:00",
            "2020-04-06T01:16:18.000000+09:00",
            "7e59b33b-6a83-4568-aef3-df7746a449c4"
        )
                .discountAmount(2293)
                .setShopSpecified(false)
                .availableShopIds(new String[]{"1685a431-017f-4b7f-b469-db2d649f7f20","fefc6569-2543-4f9d-8162-f474578158cb","8a98e3b4-ab7e-4018-b8e8-6674547ca7a8","70e38bcb-a7fe-49de-8549-868e5c54d158","1a2e5570-fbf4-4832-9b21-3b48d96872ba","a7f2e541-045d-4f6a-bdd5-3213f861cc9d","41fd2de3-5a4d-4aeb-bcf3-9963e5d065a7","155df514-bed7-492d-8f92-093fdcec7c90"})
                .setPublic(false)
                .code("5FTuPe2n")
                .usageLimit(2809)
                .minAmount(5628)
                .storageId("20b89732-69d3-46c1-b2f8-321e21fd833f");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test18() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "258a77ac-e814-480d-bd48-088b7e33d460",
            "fsMVPrc0Xwpzvt",
            "2021-10-10T02:30:30.000000+09:00",
            "2020-04-06T01:16:18.000000+09:00",
            "7e59b33b-6a83-4568-aef3-df7746a449c4"
        )
                .discountAmount(8005)
                .setShopSpecified(true)
                .availableShopIds(new String[]{"74c8a996-fd70-451d-9de4-f0a02a84a2d0","efdbeb72-c98a-4882-8d44-ac4f01490221","263d8ee8-5803-4f25-ac6d-858771570733","de72ef0b-0bd1-4b32-820f-c4720038b4a0","1b6031bd-579d-444d-85ad-c880424afb4a","cb7e09bc-929c-4886-b21b-efa371c500de","d3ff3bb6-e867-4fca-8518-4f64b3276dbb","a3fc50fb-6d84-43a0-9543-3a1463f8bf40","51f55684-7c4f-411a-abf5-6b407fde83f3","3881611c-87a9-418c-9c0f-63ca79340ac4"})
                .setHidden(false)
                .setPublic(false)
                .code("pQW5VNE")
                .usageLimit(3416)
                .minAmount(535)
                .storageId("74cbb827-7a5f-4adf-86ed-59c11cbcc4ce");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test19() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "258a77ac-e814-480d-bd48-088b7e33d460",
            "fsMVPrc0Xwpzvt",
            "2021-10-10T02:30:30.000000+09:00",
            "2020-04-06T01:16:18.000000+09:00",
            "7e59b33b-6a83-4568-aef3-df7746a449c4"
        )
                .discountAmount(5235)
                .setShopSpecified(false)
                .availableShopIds(new String[]{"6b750656-fd9a-4ba3-acb1-907ed33e379b","e2b17be4-266a-44ec-b4da-3cdfaf6c6834","f93b0275-3931-409e-9683-2243065c91a0","849aab17-8bf3-420e-9378-474dac552307","22b05f33-3a74-4be8-ae49-afe56d475d30","f3104bee-792f-4251-88fa-e2028dd2e7e2","610b446b-66af-48ac-8339-d0b8fc83d997"})
                .setDisabled(true)
                .setHidden(false)
                .setPublic(true)
                .code("Lnn2")
                .usageLimit(5776)
                .minAmount(997)
                .storageId("760ff26c-75de-490a-afae-5b8c530cea24");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test20() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "258a77ac-e814-480d-bd48-088b7e33d460",
            "fsMVPrc0Xwpzvt",
            "2021-10-10T02:30:30.000000+09:00",
            "2020-04-06T01:16:18.000000+09:00",
            "7e59b33b-6a83-4568-aef3-df7746a449c4"
        )
                .discountAmount(7776)
                .setShopSpecified(false)
                .availableShopIds(new String[]{"b5706bf7-2169-4cf2-b514-65cd2ba541f7","5ef7b427-8c77-47e5-8ea6-c13cd9a6ab56","372c790d-1a92-491b-b832-95ad812527cd","b9aa2a04-7956-426c-add8-e7ad67029839"})
                .displayEndsAt("2022-12-08T21:55:12.000000+09:00")
                .setDisabled(true)
                .setHidden(true)
                .setPublic(false)
                .code("wQY")
                .usageLimit(7058)
                .minAmount(2894)
                .storageId("da9078ba-c779-444e-af67-91214a0a1d14");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test21() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "258a77ac-e814-480d-bd48-088b7e33d460",
            "fsMVPrc0Xwpzvt",
            "2021-10-10T02:30:30.000000+09:00",
            "2020-04-06T01:16:18.000000+09:00",
            "7e59b33b-6a83-4568-aef3-df7746a449c4"
        )
                .discountAmount(8750)
                .setShopSpecified(false)
                .availableShopIds(new String[]{"05336d8c-5fc3-480f-9245-3584aaa8ceaf","e2f914bf-7cee-4226-be83-8756f4f6b001","57988ecc-6abf-434a-bd72-e65d0fdd27f4","0e4c2638-5ba3-42fe-9ae8-a76151c7626c","322ab8e0-b875-49a4-901e-15730b495621","ac8b1a67-edd2-4de5-8fbf-aa84311c84d1","099b0911-929c-441c-828a-b819300b0366","a7cc8876-4223-4163-9f74-c5516767ac59","b7bb2143-2522-45f7-bdc4-322a5b8f87c1","dc157749-048d-488d-970c-ff67245bafae"})
                .displayStartsAt("2023-08-26T02:47:31.000000+09:00")
                .displayEndsAt("2022-04-02T04:05:59.000000+09:00")
                .setDisabled(true)
                .setHidden(true)
                .setPublic(false)
                .code("EyL9Gcg")
                .usageLimit(9203)
                .minAmount(33)
                .storageId("3d3485e0-a8c5-47d3-a851-ce3ed6671fb9");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test22() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "258a77ac-e814-480d-bd48-088b7e33d460",
            "fsMVPrc0Xwpzvt",
            "2021-10-10T02:30:30.000000+09:00",
            "2020-04-06T01:16:18.000000+09:00",
            "7e59b33b-6a83-4568-aef3-df7746a449c4"
        )
                .discountAmount(9950)
                .setShopSpecified(true)
                .availableShopIds(new String[]{"d89a4e2b-a104-4abb-99d5-c6894bdc4da7"})
                .discountUpperLimit(8968)
                .displayStartsAt("2020-09-09T09:19:48.000000+09:00")
                .displayEndsAt("2022-05-27T11:54:26.000000+09:00")
                .setDisabled(false)
                .setHidden(false)
                .setPublic(true)
                .code("S")
                .usageLimit(9135)
                .minAmount(8751)
                .storageId("2169b2fb-c41e-4ab1-a1cf-131df0607882");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test23() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "258a77ac-e814-480d-bd48-088b7e33d460",
            "fsMVPrc0Xwpzvt",
            "2021-10-10T02:30:30.000000+09:00",
            "2020-04-06T01:16:18.000000+09:00",
            "7e59b33b-6a83-4568-aef3-df7746a449c4"
        )
                .discountAmount(2231)
                .setShopSpecified(true)
                .availableShopIds(new String[]{"85b6b284-1020-43cd-b83a-eadc45f0e56f","d818b7d5-7c9f-4baf-926f-0550fde3dc76","a09f42c7-9452-488e-a928-5d419dd8765d","055637c9-650b-4e74-adf0-7815fad5cf91","72878962-f109-4002-8ef1-e2a09ee60ff6","fc0bc3fa-f96a-4b2f-bb03-56894b46aa9d"})
                .description("gGsdOG76Bf68DGY9xh6j4aR9dAve99RlGxQHIF30XaWQmsAUoCF5XqjahqHjJHxEGrskev5mdHXYftf5mwCZqXmsvVqSMclL57EE4fCPDo01sLvv6PAMKo0GccnYr5lSQem92akY07dIchTdhF7irrhdu4KuiBPKHWgiTLu0F6BYbKNUsfuAWMKrQYk626XNnTyWhuwPeFSkdtmoo7A7Wfb6reepa")
                .discountUpperLimit(5821)
                .displayStartsAt("2020-12-17T00:20:02.000000+09:00")
                .displayEndsAt("2022-06-27T14:43:12.000000+09:00")
                .setDisabled(false)
                .setHidden(true)
                .setPublic(true)
                .code("QJHjRk")
                .usageLimit(1307)
                .minAmount(1394)
                .storageId("e820c0cf-02b2-4445-b6e4-53bc6bfd94a8");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test24() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "258a77ac-e814-480d-bd48-088b7e33d460",
            "fsMVPrc0Xwpzvt",
            "2021-10-10T02:30:30.000000+09:00",
            "2020-04-06T01:16:18.000000+09:00",
            "7e59b33b-6a83-4568-aef3-df7746a449c4"
        )
                .discountPercentage(3146.0);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test25() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "258a77ac-e814-480d-bd48-088b7e33d460",
            "fsMVPrc0Xwpzvt",
            "2021-10-10T02:30:30.000000+09:00",
            "2020-04-06T01:16:18.000000+09:00",
            "7e59b33b-6a83-4568-aef3-df7746a449c4"
        )
                .discountPercentage(7563.0)
                .storageId("b9de1c8d-2e9f-478c-aea1-2ca006f9fcee");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test26() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "258a77ac-e814-480d-bd48-088b7e33d460",
            "fsMVPrc0Xwpzvt",
            "2021-10-10T02:30:30.000000+09:00",
            "2020-04-06T01:16:18.000000+09:00",
            "7e59b33b-6a83-4568-aef3-df7746a449c4"
        )
                .discountPercentage(4392.0)
                .minAmount(9597)
                .storageId("f1b93cc2-c323-4824-b8a6-bb4a01bae242");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test27() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "258a77ac-e814-480d-bd48-088b7e33d460",
            "fsMVPrc0Xwpzvt",
            "2021-10-10T02:30:30.000000+09:00",
            "2020-04-06T01:16:18.000000+09:00",
            "7e59b33b-6a83-4568-aef3-df7746a449c4"
        )
                .discountPercentage(2516.0)
                .usageLimit(1813)
                .minAmount(413)
                .storageId("68a38fa8-323d-423e-a967-31743706ff7f");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test28() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "258a77ac-e814-480d-bd48-088b7e33d460",
            "fsMVPrc0Xwpzvt",
            "2021-10-10T02:30:30.000000+09:00",
            "2020-04-06T01:16:18.000000+09:00",
            "7e59b33b-6a83-4568-aef3-df7746a449c4"
        )
                .discountPercentage(9131.0)
                .code("n6gVyq")
                .usageLimit(1839)
                .minAmount(2231)
                .storageId("2f20e5c1-9d4c-43d9-8624-ef1acaf4ac57");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test29() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "258a77ac-e814-480d-bd48-088b7e33d460",
            "fsMVPrc0Xwpzvt",
            "2021-10-10T02:30:30.000000+09:00",
            "2020-04-06T01:16:18.000000+09:00",
            "7e59b33b-6a83-4568-aef3-df7746a449c4"
        )
                .discountPercentage(6552.0)
                .setPublic(false)
                .code("1HJp7RdN")
                .usageLimit(9271)
                .minAmount(1661)
                .storageId("0d62823c-c4d3-4d2b-877f-af780fd17750");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test30() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "258a77ac-e814-480d-bd48-088b7e33d460",
            "fsMVPrc0Xwpzvt",
            "2021-10-10T02:30:30.000000+09:00",
            "2020-04-06T01:16:18.000000+09:00",
            "7e59b33b-6a83-4568-aef3-df7746a449c4"
        )
                .discountPercentage(3328.0)
                .setHidden(true)
                .setPublic(false)
                .code("Ys70SBlU")
                .usageLimit(4597)
                .minAmount(9118)
                .storageId("1d8a6554-5fe2-4eaf-8c29-00fff30cc8ac");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test31() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "258a77ac-e814-480d-bd48-088b7e33d460",
            "fsMVPrc0Xwpzvt",
            "2021-10-10T02:30:30.000000+09:00",
            "2020-04-06T01:16:18.000000+09:00",
            "7e59b33b-6a83-4568-aef3-df7746a449c4"
        )
                .discountPercentage(7010.0)
                .setDisabled(false)
                .setHidden(false)
                .setPublic(false)
                .code("8S")
                .usageLimit(6657)
                .minAmount(9657)
                .storageId("c591e249-a56d-4034-bb2c-6eae62342634");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test32() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "258a77ac-e814-480d-bd48-088b7e33d460",
            "fsMVPrc0Xwpzvt",
            "2021-10-10T02:30:30.000000+09:00",
            "2020-04-06T01:16:18.000000+09:00",
            "7e59b33b-6a83-4568-aef3-df7746a449c4"
        )
                .discountPercentage(6823.0)
                .displayEndsAt("2022-02-25T20:42:31.000000+09:00")
                .setDisabled(true)
                .setHidden(false)
                .setPublic(true)
                .code("UdsoOthQf3")
                .usageLimit(5773)
                .minAmount(8239)
                .storageId("4626c211-9fc6-45a1-8036-04f3aa76e428");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test33() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "258a77ac-e814-480d-bd48-088b7e33d460",
            "fsMVPrc0Xwpzvt",
            "2021-10-10T02:30:30.000000+09:00",
            "2020-04-06T01:16:18.000000+09:00",
            "7e59b33b-6a83-4568-aef3-df7746a449c4"
        )
                .discountPercentage(5312.0)
                .displayStartsAt("2022-11-02T03:41:21.000000+09:00")
                .displayEndsAt("2021-04-13T18:58:38.000000+09:00")
                .setDisabled(true)
                .setHidden(false)
                .setPublic(true)
                .code("Bsc")
                .usageLimit(1066)
                .minAmount(4017)
                .storageId("aa39243d-fdc3-4b16-b67b-4309115e8e3f");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test34() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "258a77ac-e814-480d-bd48-088b7e33d460",
            "fsMVPrc0Xwpzvt",
            "2021-10-10T02:30:30.000000+09:00",
            "2020-04-06T01:16:18.000000+09:00",
            "7e59b33b-6a83-4568-aef3-df7746a449c4"
        )
                .discountPercentage(4883.0)
                .discountUpperLimit(6643)
                .displayStartsAt("2022-12-20T13:46:57.000000+09:00")
                .displayEndsAt("2020-10-22T17:46:06.000000+09:00")
                .setDisabled(false)
                .setHidden(false)
                .setPublic(false)
                .code("Mqhc29")
                .usageLimit(6701)
                .minAmount(3917)
                .storageId("33206a73-b376-4d84-84bf-eecff0faa512");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test35() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "258a77ac-e814-480d-bd48-088b7e33d460",
            "fsMVPrc0Xwpzvt",
            "2021-10-10T02:30:30.000000+09:00",
            "2020-04-06T01:16:18.000000+09:00",
            "7e59b33b-6a83-4568-aef3-df7746a449c4"
        )
                .discountPercentage(5377.0)
                .description("q9UwQd7VFgF6Y6O451zzq2kf3ImjWh9rdivhxQa9tIAvn1njpcbUNTdgRN5p5swMW8CLuqCgpief8pCI9uJKRI2xSNbyw3LeUZHBRBYKq0QzbxyJistaES2PSHnw5mMWtQca5kki57ZUUo2MUg82XWl")
                .discountUpperLimit(7916)
                .displayStartsAt("2021-03-27T23:56:55.000000+09:00")
                .displayEndsAt("2020-05-11T05:16:05.000000+09:00")
                .setDisabled(false)
                .setHidden(false)
                .setPublic(true)
                .code("cZxAe")
                .usageLimit(656)
                .minAmount(4257)
                .storageId("643f72c1-91a1-4c45-bdad-a0dee07e1adc");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test36() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "258a77ac-e814-480d-bd48-088b7e33d460",
            "fsMVPrc0Xwpzvt",
            "2021-10-10T02:30:30.000000+09:00",
            "2020-04-06T01:16:18.000000+09:00",
            "7e59b33b-6a83-4568-aef3-df7746a449c4"
        )
                .discountPercentage(8528.0)
                .setShopSpecified(false)
                .availableShopIds(new String[]{"aac7d3b7-6495-48d1-a9b0-126a040a6e88"});
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test37() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "258a77ac-e814-480d-bd48-088b7e33d460",
            "fsMVPrc0Xwpzvt",
            "2021-10-10T02:30:30.000000+09:00",
            "2020-04-06T01:16:18.000000+09:00",
            "7e59b33b-6a83-4568-aef3-df7746a449c4"
        )
                .discountPercentage(3322.0)
                .setShopSpecified(true)
                .availableShopIds(new String[]{"99fd9380-df80-4208-8661-c56a3afbc92c"})
                .storageId("d218f437-f58c-42ca-aad1-d9a319014f38");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test38() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "258a77ac-e814-480d-bd48-088b7e33d460",
            "fsMVPrc0Xwpzvt",
            "2021-10-10T02:30:30.000000+09:00",
            "2020-04-06T01:16:18.000000+09:00",
            "7e59b33b-6a83-4568-aef3-df7746a449c4"
        )
                .discountPercentage(6846.0)
                .setShopSpecified(true)
                .availableShopIds(new String[]{"e9854074-b2f7-477a-9ab3-7c623437d06e","ad8d69ae-091e-492c-8ba3-ba24431c7e83","49e148f8-8c89-4211-b774-cb9883d5ce71","e80ff9bb-b783-4e20-b551-9ea78fa6c971","4090e469-6e49-4982-9333-c72009e33e2f","641133cd-ec7e-4416-ac5d-fc6bd279a0fb","6ce5dbb4-f2f2-47d5-80c8-0132debb0bb2"})
                .minAmount(3918)
                .storageId("0d1598f6-d3b9-4772-9148-716bd2114549");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test39() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "258a77ac-e814-480d-bd48-088b7e33d460",
            "fsMVPrc0Xwpzvt",
            "2021-10-10T02:30:30.000000+09:00",
            "2020-04-06T01:16:18.000000+09:00",
            "7e59b33b-6a83-4568-aef3-df7746a449c4"
        )
                .discountPercentage(5778.0)
                .setShopSpecified(false)
                .availableShopIds(new String[]{"c0739cf9-e697-4d7a-acea-4a6946633eab","eff803cc-72ef-4942-a0f3-40322a12c409","33e9705f-71a4-480f-81ca-70cc8fc2a1c5","6c4ad3ff-3890-428d-938f-73f723f2b2ac","ad59fde0-92a8-4169-9c48-15f5ca68c5f5","1ecd634e-8669-4706-91b8-83799279eb7f","061afa17-415d-4799-aff2-c6e178952a0d","5a197326-5aea-4623-9f92-1d04a2d158f4","97605289-dc92-4fcd-be9d-5ef5f75193cc","7d15b4cc-2420-40c6-956e-59f3743bf9d5"})
                .usageLimit(2474)
                .minAmount(858)
                .storageId("b88b3967-383d-4fd2-b778-cce8a670f389");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test40() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "258a77ac-e814-480d-bd48-088b7e33d460",
            "fsMVPrc0Xwpzvt",
            "2021-10-10T02:30:30.000000+09:00",
            "2020-04-06T01:16:18.000000+09:00",
            "7e59b33b-6a83-4568-aef3-df7746a449c4"
        )
                .discountPercentage(1466.0)
                .setShopSpecified(false)
                .availableShopIds(new String[]{"1ec39a96-227a-41fc-9820-5142c18a551d"})
                .code("tvCnLcu")
                .usageLimit(9227)
                .minAmount(9817)
                .storageId("08b548db-6af9-4cb9-adb1-c387fd13130f");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test41() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "258a77ac-e814-480d-bd48-088b7e33d460",
            "fsMVPrc0Xwpzvt",
            "2021-10-10T02:30:30.000000+09:00",
            "2020-04-06T01:16:18.000000+09:00",
            "7e59b33b-6a83-4568-aef3-df7746a449c4"
        )
                .discountPercentage(6023.0)
                .setShopSpecified(true)
                .availableShopIds(new String[]{"e78bc3e5-06dd-4323-bb2b-ec1b049c0ad7"})
                .setPublic(true)
                .code("uCWK")
                .usageLimit(253)
                .minAmount(9833)
                .storageId("e12fa187-80fd-452a-a072-4a32674a0d0d");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test42() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "258a77ac-e814-480d-bd48-088b7e33d460",
            "fsMVPrc0Xwpzvt",
            "2021-10-10T02:30:30.000000+09:00",
            "2020-04-06T01:16:18.000000+09:00",
            "7e59b33b-6a83-4568-aef3-df7746a449c4"
        )
                .discountPercentage(5087.0)
                .setShopSpecified(true)
                .availableShopIds(new String[]{"5385779e-e295-464d-b539-f326a948821d","c9bb93ef-1a06-4db0-894e-670be613c311","a2fe5fbc-2a84-4973-92f2-2a5be795ee5f","a932574f-30d1-4dcc-a5d6-0149fce3c31d","92359721-b199-40d5-85f0-ce5263852c14","b270632e-1093-439b-a296-0ba6f0e1ee97"})
                .setHidden(false)
                .setPublic(false)
                .code("nFh")
                .usageLimit(8686)
                .minAmount(2243)
                .storageId("b28a7e7a-b13f-4e87-a612-47a2d54292ca");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test43() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "258a77ac-e814-480d-bd48-088b7e33d460",
            "fsMVPrc0Xwpzvt",
            "2021-10-10T02:30:30.000000+09:00",
            "2020-04-06T01:16:18.000000+09:00",
            "7e59b33b-6a83-4568-aef3-df7746a449c4"
        )
                .discountPercentage(7082.0)
                .setShopSpecified(false)
                .availableShopIds(new String[]{"590fc23b-d5db-48ee-a1b3-3c17874137d7","bd0da23c-5e02-4c95-a182-e81955e3dc34","e2cfa975-5fa4-451a-a84b-c59aa0357f29","64554d65-ac6d-4909-9d5b-df616e6c421f","3f38de4d-68d2-406d-9a79-13f594a7ce98","614e1967-04d0-4ab3-a46e-d50e2bb66831"})
                .setDisabled(false)
                .setHidden(false)
                .setPublic(true)
                .code("YnBy")
                .usageLimit(7846)
                .minAmount(285)
                .storageId("1821f12c-1eca-49ee-9cd7-a0057061b764");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test44() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "258a77ac-e814-480d-bd48-088b7e33d460",
            "fsMVPrc0Xwpzvt",
            "2021-10-10T02:30:30.000000+09:00",
            "2020-04-06T01:16:18.000000+09:00",
            "7e59b33b-6a83-4568-aef3-df7746a449c4"
        )
                .discountPercentage(8901.0)
                .setShopSpecified(true)
                .availableShopIds(new String[]{"bc242c3e-0d50-4174-b72c-1fc52cf5a2c2"})
                .displayEndsAt("2024-07-03T23:25:48.000000+09:00")
                .setDisabled(true)
                .setHidden(true)
                .setPublic(true)
                .code("mogOfOu")
                .usageLimit(7714)
                .minAmount(5490)
                .storageId("a9b4c406-98d3-4ceb-a9e3-89c877afe4c3");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test45() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "258a77ac-e814-480d-bd48-088b7e33d460",
            "fsMVPrc0Xwpzvt",
            "2021-10-10T02:30:30.000000+09:00",
            "2020-04-06T01:16:18.000000+09:00",
            "7e59b33b-6a83-4568-aef3-df7746a449c4"
        )
                .discountPercentage(9974.0)
                .setShopSpecified(false)
                .availableShopIds(new String[]{"1e9934be-b5b1-4337-8420-f9ec06019a04","6e4bd373-4ca1-40ca-8298-4b4319b25d6c","a9e72492-e9df-49a6-b395-65c1e5ad5bf3","6506b273-18b6-4730-8294-4f89c5b10095","a0e67649-0b49-42c7-8491-9d0ad82fe593","7958287e-af59-4344-aba3-0139ced9cd56","111238ad-4e52-4abf-8fe3-114015496038","2c86f472-acd7-43f7-8505-4e294feb2fbf","694fe2be-52fa-4c3b-bed2-41297b3b09cd"})
                .displayStartsAt("2021-08-16T03:58:35.000000+09:00")
                .displayEndsAt("2021-05-29T07:27:34.000000+09:00")
                .setDisabled(false)
                .setHidden(true)
                .setPublic(false)
                .code("ra")
                .usageLimit(4780)
                .minAmount(7485)
                .storageId("dd2a7815-546e-4624-bf2a-416419964a19");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test46() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "258a77ac-e814-480d-bd48-088b7e33d460",
            "fsMVPrc0Xwpzvt",
            "2021-10-10T02:30:30.000000+09:00",
            "2020-04-06T01:16:18.000000+09:00",
            "7e59b33b-6a83-4568-aef3-df7746a449c4"
        )
                .discountPercentage(1630.0)
                .setShopSpecified(false)
                .availableShopIds(new String[]{"db0153a1-481a-4ec4-a1c9-131aba08bcee","5da1be49-550c-4767-9516-a5fa057eba83","a05766f5-8015-44f0-a4dd-ff1d4f59e50f"})
                .discountUpperLimit(224)
                .displayStartsAt("2022-12-22T10:42:38.000000+09:00")
                .displayEndsAt("2023-02-08T05:16:45.000000+09:00")
                .setDisabled(true)
                .setHidden(true)
                .setPublic(true)
                .code("kaw3D")
                .usageLimit(6675)
                .minAmount(6537)
                .storageId("d5988a1c-754a-42d7-8909-fc753ad98968");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test47() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "258a77ac-e814-480d-bd48-088b7e33d460",
            "fsMVPrc0Xwpzvt",
            "2021-10-10T02:30:30.000000+09:00",
            "2020-04-06T01:16:18.000000+09:00",
            "7e59b33b-6a83-4568-aef3-df7746a449c4"
        )
                .discountPercentage(3666.0)
                .setShopSpecified(false)
                .availableShopIds(new String[]{"38621f40-78b5-42d8-8184-bc1d2115e6aa","0c4cdf51-c91c-4d5e-a627-bec8d85a595a","45fab283-3d40-4d28-8c21-47caedb486b6","b7ed44cb-2c15-4df4-aa56-bf33739eb0ba","0bed51ab-bf61-44a8-9da7-13b8e4adbf58","dfddf16f-dff9-46cd-90f6-f488c63424f6","637fe691-721e-43e8-aa38-306c4ecc6baf","bc21f159-e641-46e1-ab46-5fd7a44f630e","132c0b42-ce43-496a-b841-175f8cb4d0c6"})
                .description("3xhSJKlxPzGluLZP4tEWkUmIsf9AgUSj4f8IkFzJ9FUWP")
                .discountUpperLimit(960)
                .displayStartsAt("2023-09-20T01:43:39.000000+09:00")
                .displayEndsAt("2021-07-10T22:27:52.000000+09:00")
                .setDisabled(true)
                .setHidden(true)
                .setPublic(false)
                .code("v")
                .usageLimit(2783)
                .minAmount(1612)
                .storageId("5e065be8-e1a5-47fd-898b-aacf96982387");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
