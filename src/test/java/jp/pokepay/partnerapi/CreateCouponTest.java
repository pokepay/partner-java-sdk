// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.CreateCoupon;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class CreateCouponTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "df853a53-82ed-4368-a6dd-088de6921c5f",
            "0UH0JI6BkouKMmtE9QsOa8FFPnvr9T5txAbgitff73afwdrIFEw",
            "2023-07-07T11:05:56.000000+09:00",
            "2022-10-14T22:15:40.000000+09:00",
            "4fae7d63-9a18-4349-ab01-c1781b88ad9e"
        )
                .discountAmount(2602);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "df853a53-82ed-4368-a6dd-088de6921c5f",
            "0UH0JI6BkouKMmtE9QsOa8FFPnvr9T5txAbgitff73afwdrIFEw",
            "2023-07-07T11:05:56.000000+09:00",
            "2022-10-14T22:15:40.000000+09:00",
            "4fae7d63-9a18-4349-ab01-c1781b88ad9e"
        )
                .discountAmount(1600)
                .storageId("543304ff-7dff-42ff-8210-2571a825761e");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "df853a53-82ed-4368-a6dd-088de6921c5f",
            "0UH0JI6BkouKMmtE9QsOa8FFPnvr9T5txAbgitff73afwdrIFEw",
            "2023-07-07T11:05:56.000000+09:00",
            "2022-10-14T22:15:40.000000+09:00",
            "4fae7d63-9a18-4349-ab01-c1781b88ad9e"
        )
                .discountAmount(7937)
                .minAmount(9332)
                .storageId("5448165b-8a6d-4745-8a8e-fe8629f6be42");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "df853a53-82ed-4368-a6dd-088de6921c5f",
            "0UH0JI6BkouKMmtE9QsOa8FFPnvr9T5txAbgitff73afwdrIFEw",
            "2023-07-07T11:05:56.000000+09:00",
            "2022-10-14T22:15:40.000000+09:00",
            "4fae7d63-9a18-4349-ab01-c1781b88ad9e"
        )
                .discountAmount(3857)
                .usageLimit(339)
                .minAmount(9348)
                .storageId("bce9935c-2a2d-4c34-bf20-e441670d0612");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "df853a53-82ed-4368-a6dd-088de6921c5f",
            "0UH0JI6BkouKMmtE9QsOa8FFPnvr9T5txAbgitff73afwdrIFEw",
            "2023-07-07T11:05:56.000000+09:00",
            "2022-10-14T22:15:40.000000+09:00",
            "4fae7d63-9a18-4349-ab01-c1781b88ad9e"
        )
                .discountAmount(210)
                .code("wZAB6yx")
                .usageLimit(4534)
                .minAmount(3719)
                .storageId("4b8494d1-776f-4f77-ad09-9dcda9456e88");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "df853a53-82ed-4368-a6dd-088de6921c5f",
            "0UH0JI6BkouKMmtE9QsOa8FFPnvr9T5txAbgitff73afwdrIFEw",
            "2023-07-07T11:05:56.000000+09:00",
            "2022-10-14T22:15:40.000000+09:00",
            "4fae7d63-9a18-4349-ab01-c1781b88ad9e"
        )
                .discountAmount(6647)
                .setPublic(true)
                .code("QJy")
                .usageLimit(4940)
                .minAmount(7164)
                .storageId("c2c5a18a-ea7d-410e-b715-ee12601de8de");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "df853a53-82ed-4368-a6dd-088de6921c5f",
            "0UH0JI6BkouKMmtE9QsOa8FFPnvr9T5txAbgitff73afwdrIFEw",
            "2023-07-07T11:05:56.000000+09:00",
            "2022-10-14T22:15:40.000000+09:00",
            "4fae7d63-9a18-4349-ab01-c1781b88ad9e"
        )
                .discountAmount(2359)
                .setHidden(true)
                .setPublic(true)
                .code("s")
                .usageLimit(418)
                .minAmount(6931)
                .storageId("3b57b7ec-4bcd-465e-b91d-e4092d6059f3");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "df853a53-82ed-4368-a6dd-088de6921c5f",
            "0UH0JI6BkouKMmtE9QsOa8FFPnvr9T5txAbgitff73afwdrIFEw",
            "2023-07-07T11:05:56.000000+09:00",
            "2022-10-14T22:15:40.000000+09:00",
            "4fae7d63-9a18-4349-ab01-c1781b88ad9e"
        )
                .discountAmount(5710)
                .setDisabled(true)
                .setHidden(false)
                .setPublic(false)
                .code("MrEgImLgL")
                .usageLimit(7154)
                .minAmount(2723)
                .storageId("c000b253-ceb1-498b-8233-bcbcfc6c3a68");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "df853a53-82ed-4368-a6dd-088de6921c5f",
            "0UH0JI6BkouKMmtE9QsOa8FFPnvr9T5txAbgitff73afwdrIFEw",
            "2023-07-07T11:05:56.000000+09:00",
            "2022-10-14T22:15:40.000000+09:00",
            "4fae7d63-9a18-4349-ab01-c1781b88ad9e"
        )
                .discountAmount(8110)
                .displayEndsAt("2020-01-25T20:24:29.000000+09:00")
                .setDisabled(true)
                .setHidden(true)
                .setPublic(true)
                .code("EOarej1")
                .usageLimit(5360)
                .minAmount(7828)
                .storageId("5329f5f5-82e2-43e6-b6b4-dd38918b8941");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test9() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "df853a53-82ed-4368-a6dd-088de6921c5f",
            "0UH0JI6BkouKMmtE9QsOa8FFPnvr9T5txAbgitff73afwdrIFEw",
            "2023-07-07T11:05:56.000000+09:00",
            "2022-10-14T22:15:40.000000+09:00",
            "4fae7d63-9a18-4349-ab01-c1781b88ad9e"
        )
                .discountAmount(5793)
                .displayStartsAt("2020-05-17T14:41:47.000000+09:00")
                .displayEndsAt("2024-05-07T14:05:27.000000+09:00")
                .setDisabled(true)
                .setHidden(false)
                .setPublic(false)
                .code("nY")
                .usageLimit(984)
                .minAmount(1551)
                .storageId("22ef06c6-992f-4b24-9b51-2081aaa2ed7b");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test10() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "df853a53-82ed-4368-a6dd-088de6921c5f",
            "0UH0JI6BkouKMmtE9QsOa8FFPnvr9T5txAbgitff73afwdrIFEw",
            "2023-07-07T11:05:56.000000+09:00",
            "2022-10-14T22:15:40.000000+09:00",
            "4fae7d63-9a18-4349-ab01-c1781b88ad9e"
        )
                .discountAmount(6570)
                .discountUpperLimit(7693)
                .displayStartsAt("2023-07-15T03:07:46.000000+09:00")
                .displayEndsAt("2022-03-17T23:01:48.000000+09:00")
                .setDisabled(true)
                .setHidden(false)
                .setPublic(true)
                .code("CBaC")
                .usageLimit(4547)
                .minAmount(8019)
                .storageId("68c46779-2cb9-48c9-9fbf-6942ec610bf2");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test11() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "df853a53-82ed-4368-a6dd-088de6921c5f",
            "0UH0JI6BkouKMmtE9QsOa8FFPnvr9T5txAbgitff73afwdrIFEw",
            "2023-07-07T11:05:56.000000+09:00",
            "2022-10-14T22:15:40.000000+09:00",
            "4fae7d63-9a18-4349-ab01-c1781b88ad9e"
        )
                .discountAmount(9429)
                .description("loywfgD7bXgDa42CfNQCpDT5MlI6j0VWgpOmU14sdPV9QvYEniRUodLhQzWqoAHDcVhMcQL9bidQlT332GBAOrEMajhvADYx5bsbuSad7f0zsQNxYgRXUaZk4R4IbQnumS872M9sEDMPimq4VjHyqO1O")
                .discountUpperLimit(5695)
                .displayStartsAt("2023-01-14T08:59:43.000000+09:00")
                .displayEndsAt("2023-07-19T14:15:11.000000+09:00")
                .setDisabled(false)
                .setHidden(false)
                .setPublic(true)
                .code("w7qk2DIJM8")
                .usageLimit(6760)
                .minAmount(1360)
                .storageId("399405a9-7bb4-485e-8438-20775cba0c1c");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test12() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "df853a53-82ed-4368-a6dd-088de6921c5f",
            "0UH0JI6BkouKMmtE9QsOa8FFPnvr9T5txAbgitff73afwdrIFEw",
            "2023-07-07T11:05:56.000000+09:00",
            "2022-10-14T22:15:40.000000+09:00",
            "4fae7d63-9a18-4349-ab01-c1781b88ad9e"
        )
                .discountAmount(5201)
                .setShopSpecified(true)
                .availableShopIds(new String[]{"40f8ca55-b09f-4f89-9586-73f6f873c230","b0fc9d99-2649-4b7a-a7c0-ccf651ae6fbc","c4dc7161-30ef-4ab2-8da2-84f6d58bf29f","5b5048e5-aefe-4164-a61b-ba2b83b75fba","46a1280c-6518-4352-ab94-3efa85285235","6438a4d2-d602-409f-b2c0-833534097dfb","ba6c09de-8fda-43ac-a0c1-d29c131e25f7","620354b8-2feb-4a11-a940-a3ba5448f956","69bee6b9-7a9a-4b82-a5d0-4a6fc488f3bc"});
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test13() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "df853a53-82ed-4368-a6dd-088de6921c5f",
            "0UH0JI6BkouKMmtE9QsOa8FFPnvr9T5txAbgitff73afwdrIFEw",
            "2023-07-07T11:05:56.000000+09:00",
            "2022-10-14T22:15:40.000000+09:00",
            "4fae7d63-9a18-4349-ab01-c1781b88ad9e"
        )
                .discountAmount(5363)
                .setShopSpecified(false)
                .availableShopIds(new String[]{"25ff035e-6a69-4fae-a2e3-232a183693df","ab3577b8-5a1a-49dc-9bf0-a125197d0355","0972475b-f3d8-4b12-9d71-b5010fa7c4a6","8ce65b58-56e8-4313-a192-e7f13c77ab62","cac2f82e-a4ac-48d9-b62f-798241e9f3e2"})
                .storageId("8a589a72-8202-431b-a094-67e2de4bcff7");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test14() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "df853a53-82ed-4368-a6dd-088de6921c5f",
            "0UH0JI6BkouKMmtE9QsOa8FFPnvr9T5txAbgitff73afwdrIFEw",
            "2023-07-07T11:05:56.000000+09:00",
            "2022-10-14T22:15:40.000000+09:00",
            "4fae7d63-9a18-4349-ab01-c1781b88ad9e"
        )
                .discountAmount(7443)
                .setShopSpecified(false)
                .availableShopIds(new String[]{"a2b3e753-988c-4b08-86cd-e3b3f706e8e1","33ff1178-39af-4323-9e74-d354cebbe47b"})
                .minAmount(6469)
                .storageId("80021814-c6e4-4710-af9b-6f13be025137");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test15() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "df853a53-82ed-4368-a6dd-088de6921c5f",
            "0UH0JI6BkouKMmtE9QsOa8FFPnvr9T5txAbgitff73afwdrIFEw",
            "2023-07-07T11:05:56.000000+09:00",
            "2022-10-14T22:15:40.000000+09:00",
            "4fae7d63-9a18-4349-ab01-c1781b88ad9e"
        )
                .discountAmount(9498)
                .setShopSpecified(true)
                .availableShopIds(new String[]{"a58d6291-0a0e-4405-acbf-189af42521b2","1c241fd6-e252-418d-9a01-4e2ac7274a50","f7c8fc0d-5b4a-46f8-bb07-664e4e46dfa6","199a85a0-67e2-4d28-a6a5-41db18a3ee3e","4f0e90e1-a23f-4fc0-8766-8f17a4183f83","20f880e6-36e3-492d-a610-54906a100379","cb83c46d-8047-4c64-adc7-50889d39965e","edcfa36a-b858-4e32-a826-c80d1c5a11a3"})
                .usageLimit(4104)
                .minAmount(7741)
                .storageId("fc1e41c8-71ac-4a54-9c54-117c385cf019");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test16() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "df853a53-82ed-4368-a6dd-088de6921c5f",
            "0UH0JI6BkouKMmtE9QsOa8FFPnvr9T5txAbgitff73afwdrIFEw",
            "2023-07-07T11:05:56.000000+09:00",
            "2022-10-14T22:15:40.000000+09:00",
            "4fae7d63-9a18-4349-ab01-c1781b88ad9e"
        )
                .discountAmount(2341)
                .setShopSpecified(false)
                .availableShopIds(new String[]{"a8a080af-b474-411e-ba8c-94e70766fafb","f1eed141-0881-4fb9-b9eb-c00732b64ac2","43632b74-946b-4eaa-bfe4-27bfb8a73072","49868a60-da02-4b30-bc56-f3a30798f33f","5c2409c8-9fde-461f-86d2-dc08de608b0a","8253e3a0-3209-41fc-9da8-eff24eff25fe"})
                .code("rR0OfW")
                .usageLimit(6131)
                .minAmount(2759)
                .storageId("b95e38d8-5b99-4045-85ea-7f79c031abd4");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test17() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "df853a53-82ed-4368-a6dd-088de6921c5f",
            "0UH0JI6BkouKMmtE9QsOa8FFPnvr9T5txAbgitff73afwdrIFEw",
            "2023-07-07T11:05:56.000000+09:00",
            "2022-10-14T22:15:40.000000+09:00",
            "4fae7d63-9a18-4349-ab01-c1781b88ad9e"
        )
                .discountAmount(7435)
                .setShopSpecified(true)
                .availableShopIds(new String[]{"958ba6df-9a48-4626-aed2-99b920118e7f","58d8932e-21d5-4e96-b120-93e5104daa03","fe1b033c-c660-40b7-9e5d-1cfb35e3bcc6","21056481-3b1e-4ff4-88e2-0a79bda34699","f7481455-5f46-4875-bbba-0303345d6b01","68d87f3b-61ac-4734-b139-9e7155ca8274","223472de-b163-4a24-9f75-5b689724c6cd","0a701e06-6a0c-425d-b8cf-a5e2e6166002","3198119e-a57c-4529-a9e7-79d0dacedd3d","112e7124-17d4-463c-9d6a-bb0644d51d35"})
                .setPublic(false)
                .code("zyPqlvYlpQ")
                .usageLimit(1880)
                .minAmount(5674)
                .storageId("042135be-1eb6-4bf7-8b83-bc9c78b17adc");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test18() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "df853a53-82ed-4368-a6dd-088de6921c5f",
            "0UH0JI6BkouKMmtE9QsOa8FFPnvr9T5txAbgitff73afwdrIFEw",
            "2023-07-07T11:05:56.000000+09:00",
            "2022-10-14T22:15:40.000000+09:00",
            "4fae7d63-9a18-4349-ab01-c1781b88ad9e"
        )
                .discountAmount(5580)
                .setShopSpecified(true)
                .availableShopIds(new String[]{"6daf1d41-5760-4f0a-ad42-92ee9dd46aee","3f554a9b-f6fe-4b2e-90e5-e7b332c6930a","dc9e5a2c-6be7-4875-b6e7-899207c4960e"})
                .setHidden(false)
                .setPublic(true)
                .code("RyQKNL1h")
                .usageLimit(8094)
                .minAmount(464)
                .storageId("ad6d14b8-a0ec-4312-8635-4f3ae1afe8bd");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test19() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "df853a53-82ed-4368-a6dd-088de6921c5f",
            "0UH0JI6BkouKMmtE9QsOa8FFPnvr9T5txAbgitff73afwdrIFEw",
            "2023-07-07T11:05:56.000000+09:00",
            "2022-10-14T22:15:40.000000+09:00",
            "4fae7d63-9a18-4349-ab01-c1781b88ad9e"
        )
                .discountAmount(4113)
                .setShopSpecified(true)
                .availableShopIds(new String[]{"17b74daa-3aaf-403e-a4ce-faff05f8aa98","f849c43f-7e04-459b-973c-b7a7e83876c0","d8468c86-158c-43d6-acf9-a52c6731aed3"})
                .setDisabled(true)
                .setHidden(false)
                .setPublic(false)
                .code("BI5JSOB")
                .usageLimit(2934)
                .minAmount(4906)
                .storageId("c473f938-4f96-4520-a810-0119c688c5d5");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test20() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "df853a53-82ed-4368-a6dd-088de6921c5f",
            "0UH0JI6BkouKMmtE9QsOa8FFPnvr9T5txAbgitff73afwdrIFEw",
            "2023-07-07T11:05:56.000000+09:00",
            "2022-10-14T22:15:40.000000+09:00",
            "4fae7d63-9a18-4349-ab01-c1781b88ad9e"
        )
                .discountAmount(8613)
                .setShopSpecified(true)
                .availableShopIds(new String[]{"f1fa5a3f-391c-4b56-817b-76d31de9222f","5c743c02-9f2b-4025-97f2-2eeecdbee743","4f41e3e7-98cf-4e8a-9e2a-64e347d19abd","4e7d48c4-2d5b-4b99-aa31-0493fbcf7b06","3d01f11b-440a-488a-abf7-b72eeee19f53","65ca40ae-9c8f-43a6-8a22-d92c480f4e40","32d5fd27-8198-4fd4-bd93-29c228704f97"})
                .displayEndsAt("2021-12-31T14:54:11.000000+09:00")
                .setDisabled(false)
                .setHidden(false)
                .setPublic(true)
                .code("pZtA2Iwm6")
                .usageLimit(9060)
                .minAmount(5916)
                .storageId("e2512068-55ea-455d-bf08-d98aab5affcc");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test21() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "df853a53-82ed-4368-a6dd-088de6921c5f",
            "0UH0JI6BkouKMmtE9QsOa8FFPnvr9T5txAbgitff73afwdrIFEw",
            "2023-07-07T11:05:56.000000+09:00",
            "2022-10-14T22:15:40.000000+09:00",
            "4fae7d63-9a18-4349-ab01-c1781b88ad9e"
        )
                .discountAmount(4728)
                .setShopSpecified(false)
                .availableShopIds(new String[]{"e1934214-5614-4db3-a5a5-489f06f8c61d","f98c0751-eecf-4f12-acdc-15f0f4809891","1abfe6f9-9c94-4ad8-b137-095d9771d72a","dbf41f3b-fcef-42f8-b5e0-3a701d82d567","7a4571c2-b19c-4a4f-9a3c-a125d8702e80","6dec6524-2e71-46d8-b11e-b92b7a948848","0932c14e-a581-4ee2-b51a-efb00ff77b7e","aabc52e9-6aa2-46d8-b438-4fa9f0e373f5"})
                .displayStartsAt("2020-10-24T12:24:46.000000+09:00")
                .displayEndsAt("2020-02-02T02:36:25.000000+09:00")
                .setDisabled(false)
                .setHidden(true)
                .setPublic(true)
                .code("VABf7W")
                .usageLimit(9112)
                .minAmount(1908)
                .storageId("6e7e27e4-d921-45c0-b75f-c251ed1cd7eb");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test22() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "df853a53-82ed-4368-a6dd-088de6921c5f",
            "0UH0JI6BkouKMmtE9QsOa8FFPnvr9T5txAbgitff73afwdrIFEw",
            "2023-07-07T11:05:56.000000+09:00",
            "2022-10-14T22:15:40.000000+09:00",
            "4fae7d63-9a18-4349-ab01-c1781b88ad9e"
        )
                .discountAmount(5561)
                .setShopSpecified(false)
                .availableShopIds(new String[]{"03c785f5-4cc0-4362-906b-2b1cd2353c0e","7d432f52-d7bb-481e-bcec-79eb76f9c5b9","97f83993-0fa9-4f5b-b6a3-7c5c44de36ea","85e8fa50-8559-476e-99fa-f2345eda31ef","6548b746-4c5b-4450-a13c-2ba969ac8333","a7d7088b-ee6e-44c9-952d-d70a4e2b1160","67a3c2be-051e-4745-b419-59553bc08aaa","6491a7e7-8673-4fd4-958e-9308072aa9f0"})
                .discountUpperLimit(838)
                .displayStartsAt("2020-10-21T20:53:06.000000+09:00")
                .displayEndsAt("2020-10-03T13:54:59.000000+09:00")
                .setDisabled(false)
                .setHidden(true)
                .setPublic(true)
                .code("XPRctEb")
                .usageLimit(1343)
                .minAmount(9335)
                .storageId("123aa233-9e61-40a0-9159-bbb3fa54274b");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test23() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "df853a53-82ed-4368-a6dd-088de6921c5f",
            "0UH0JI6BkouKMmtE9QsOa8FFPnvr9T5txAbgitff73afwdrIFEw",
            "2023-07-07T11:05:56.000000+09:00",
            "2022-10-14T22:15:40.000000+09:00",
            "4fae7d63-9a18-4349-ab01-c1781b88ad9e"
        )
                .discountAmount(1961)
                .setShopSpecified(true)
                .availableShopIds(new String[]{"1e90ab48-3568-49e9-ad72-47c9a2bf4db7"})
                .description("G9uCzDFGiTeVcrhqec3KO9iUSJ0MFZk6zz5sKJCcf6LfuuSfF6LcRzwzBq5Ks2kc6nPY9WCj2ou7MPNR8SDV70zS6ARrulPTgqIcq3ZoPYSxNDOq7Ly4vHcNtKS5ER50cXpnk5c0cbxSrxLDmtom4en2aHz2QbpfRv06c6V8kIvjtYSR3raMXW61dT8FnEvOQREDYO9oRAZCCl")
                .discountUpperLimit(575)
                .displayStartsAt("2020-01-06T14:57:29.000000+09:00")
                .displayEndsAt("2021-03-11T03:35:44.000000+09:00")
                .setDisabled(false)
                .setHidden(true)
                .setPublic(false)
                .code("W5NKyT")
                .usageLimit(10000)
                .minAmount(3034)
                .storageId("9f08fd3f-a710-4355-b82b-f2a8a2105659");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test24() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "df853a53-82ed-4368-a6dd-088de6921c5f",
            "0UH0JI6BkouKMmtE9QsOa8FFPnvr9T5txAbgitff73afwdrIFEw",
            "2023-07-07T11:05:56.000000+09:00",
            "2022-10-14T22:15:40.000000+09:00",
            "4fae7d63-9a18-4349-ab01-c1781b88ad9e"
        )
                .discountPercentage(7146.0);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test25() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "df853a53-82ed-4368-a6dd-088de6921c5f",
            "0UH0JI6BkouKMmtE9QsOa8FFPnvr9T5txAbgitff73afwdrIFEw",
            "2023-07-07T11:05:56.000000+09:00",
            "2022-10-14T22:15:40.000000+09:00",
            "4fae7d63-9a18-4349-ab01-c1781b88ad9e"
        )
                .discountPercentage(6265.0)
                .storageId("6227ff53-d7e3-44ca-8862-650c0cb7b8c7");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test26() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "df853a53-82ed-4368-a6dd-088de6921c5f",
            "0UH0JI6BkouKMmtE9QsOa8FFPnvr9T5txAbgitff73afwdrIFEw",
            "2023-07-07T11:05:56.000000+09:00",
            "2022-10-14T22:15:40.000000+09:00",
            "4fae7d63-9a18-4349-ab01-c1781b88ad9e"
        )
                .discountPercentage(4361.0)
                .minAmount(7440)
                .storageId("2c4249de-7afb-46ad-b1e3-c74c0ba7cc4d");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test27() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "df853a53-82ed-4368-a6dd-088de6921c5f",
            "0UH0JI6BkouKMmtE9QsOa8FFPnvr9T5txAbgitff73afwdrIFEw",
            "2023-07-07T11:05:56.000000+09:00",
            "2022-10-14T22:15:40.000000+09:00",
            "4fae7d63-9a18-4349-ab01-c1781b88ad9e"
        )
                .discountPercentage(280.0)
                .usageLimit(5637)
                .minAmount(5531)
                .storageId("d5a6fa4a-d056-490f-9e64-b69f6a7cb67f");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test28() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "df853a53-82ed-4368-a6dd-088de6921c5f",
            "0UH0JI6BkouKMmtE9QsOa8FFPnvr9T5txAbgitff73afwdrIFEw",
            "2023-07-07T11:05:56.000000+09:00",
            "2022-10-14T22:15:40.000000+09:00",
            "4fae7d63-9a18-4349-ab01-c1781b88ad9e"
        )
                .discountPercentage(1453.0)
                .code("hWwMn10vh")
                .usageLimit(4932)
                .minAmount(8061)
                .storageId("0c571e86-1b27-418e-b1db-7fa951f04156");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test29() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "df853a53-82ed-4368-a6dd-088de6921c5f",
            "0UH0JI6BkouKMmtE9QsOa8FFPnvr9T5txAbgitff73afwdrIFEw",
            "2023-07-07T11:05:56.000000+09:00",
            "2022-10-14T22:15:40.000000+09:00",
            "4fae7d63-9a18-4349-ab01-c1781b88ad9e"
        )
                .discountPercentage(4771.0)
                .setPublic(false)
                .code("meSzvcavW")
                .usageLimit(8572)
                .minAmount(7025)
                .storageId("35da6a4a-f8c9-4ed4-a801-4bb9ec39f266");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test30() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "df853a53-82ed-4368-a6dd-088de6921c5f",
            "0UH0JI6BkouKMmtE9QsOa8FFPnvr9T5txAbgitff73afwdrIFEw",
            "2023-07-07T11:05:56.000000+09:00",
            "2022-10-14T22:15:40.000000+09:00",
            "4fae7d63-9a18-4349-ab01-c1781b88ad9e"
        )
                .discountPercentage(6961.0)
                .setHidden(true)
                .setPublic(false)
                .code("mrvRXRC8")
                .usageLimit(8747)
                .minAmount(2828)
                .storageId("e21b792c-30e6-456e-a241-2777f2dd88c6");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test31() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "df853a53-82ed-4368-a6dd-088de6921c5f",
            "0UH0JI6BkouKMmtE9QsOa8FFPnvr9T5txAbgitff73afwdrIFEw",
            "2023-07-07T11:05:56.000000+09:00",
            "2022-10-14T22:15:40.000000+09:00",
            "4fae7d63-9a18-4349-ab01-c1781b88ad9e"
        )
                .discountPercentage(7965.0)
                .setDisabled(false)
                .setHidden(true)
                .setPublic(true)
                .code("gIm6S5")
                .usageLimit(2326)
                .minAmount(9167)
                .storageId("a77ba57e-2d73-44db-8409-3b3853d86247");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test32() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "df853a53-82ed-4368-a6dd-088de6921c5f",
            "0UH0JI6BkouKMmtE9QsOa8FFPnvr9T5txAbgitff73afwdrIFEw",
            "2023-07-07T11:05:56.000000+09:00",
            "2022-10-14T22:15:40.000000+09:00",
            "4fae7d63-9a18-4349-ab01-c1781b88ad9e"
        )
                .discountPercentage(1726.0)
                .displayEndsAt("2023-11-29T02:05:02.000000+09:00")
                .setDisabled(false)
                .setHidden(false)
                .setPublic(true)
                .code("d5nN0lvmkl")
                .usageLimit(3022)
                .minAmount(2435)
                .storageId("4ed51adc-5cbd-4480-a8bb-94348f665d20");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test33() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "df853a53-82ed-4368-a6dd-088de6921c5f",
            "0UH0JI6BkouKMmtE9QsOa8FFPnvr9T5txAbgitff73afwdrIFEw",
            "2023-07-07T11:05:56.000000+09:00",
            "2022-10-14T22:15:40.000000+09:00",
            "4fae7d63-9a18-4349-ab01-c1781b88ad9e"
        )
                .discountPercentage(8088.0)
                .displayStartsAt("2024-06-12T12:15:07.000000+09:00")
                .displayEndsAt("2021-07-26T05:26:54.000000+09:00")
                .setDisabled(true)
                .setHidden(false)
                .setPublic(true)
                .code("X9E35cBbb")
                .usageLimit(516)
                .minAmount(2008)
                .storageId("86ea2797-f58c-40a8-ace2-e4233f796e27");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test34() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "df853a53-82ed-4368-a6dd-088de6921c5f",
            "0UH0JI6BkouKMmtE9QsOa8FFPnvr9T5txAbgitff73afwdrIFEw",
            "2023-07-07T11:05:56.000000+09:00",
            "2022-10-14T22:15:40.000000+09:00",
            "4fae7d63-9a18-4349-ab01-c1781b88ad9e"
        )
                .discountPercentage(4288.0)
                .discountUpperLimit(3424)
                .displayStartsAt("2024-07-15T12:13:51.000000+09:00")
                .displayEndsAt("2022-06-29T01:20:11.000000+09:00")
                .setDisabled(true)
                .setHidden(false)
                .setPublic(true)
                .code("va8VFN2")
                .usageLimit(9446)
                .minAmount(4699)
                .storageId("e29f800d-8dce-4cb1-a6d3-3e7bf2f92537");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test35() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "df853a53-82ed-4368-a6dd-088de6921c5f",
            "0UH0JI6BkouKMmtE9QsOa8FFPnvr9T5txAbgitff73afwdrIFEw",
            "2023-07-07T11:05:56.000000+09:00",
            "2022-10-14T22:15:40.000000+09:00",
            "4fae7d63-9a18-4349-ab01-c1781b88ad9e"
        )
                .discountPercentage(8954.0)
                .description("krWlcVjqKm7oGocOPqVPzLPumiihpdPrv3Ah3N6uK0csvW20QNnQ2OT")
                .discountUpperLimit(2581)
                .displayStartsAt("2023-12-05T10:16:37.000000+09:00")
                .displayEndsAt("2024-03-22T20:16:58.000000+09:00")
                .setDisabled(true)
                .setHidden(true)
                .setPublic(false)
                .code("ZA")
                .usageLimit(7166)
                .minAmount(1739)
                .storageId("3d26f421-42ae-47cb-a3b7-df6b62f1c069");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test36() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "df853a53-82ed-4368-a6dd-088de6921c5f",
            "0UH0JI6BkouKMmtE9QsOa8FFPnvr9T5txAbgitff73afwdrIFEw",
            "2023-07-07T11:05:56.000000+09:00",
            "2022-10-14T22:15:40.000000+09:00",
            "4fae7d63-9a18-4349-ab01-c1781b88ad9e"
        )
                .discountPercentage(7479.0)
                .setShopSpecified(true)
                .availableShopIds(new String[]{"59fca61a-7044-4ea1-aa42-d08b5baaddb7","6e98d48e-c92d-4a55-9b95-0f7ca7d7d8b5","c71acca5-3b34-4187-b03e-01cc40288b5b","e72217e5-7943-4f6e-b89c-bf94e9682da2","4b68903e-e9ca-47c1-9c15-1fd93b1d7a55"});
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test37() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "df853a53-82ed-4368-a6dd-088de6921c5f",
            "0UH0JI6BkouKMmtE9QsOa8FFPnvr9T5txAbgitff73afwdrIFEw",
            "2023-07-07T11:05:56.000000+09:00",
            "2022-10-14T22:15:40.000000+09:00",
            "4fae7d63-9a18-4349-ab01-c1781b88ad9e"
        )
                .discountPercentage(6959.0)
                .setShopSpecified(false)
                .availableShopIds(new String[]{"16d3d907-385d-4ad1-a10c-ae5711c8b202","ea2e1b68-331b-442d-b381-b6d33122b06e","c964eacc-709a-49e4-9eed-ec59b416f285","83c53aca-0d42-4662-9bfa-45a3a430247e","3ec7b744-a5cf-4754-a509-6d4d297012ba"})
                .storageId("12d191b9-52c2-4339-8ce6-25c8fc122985");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test38() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "df853a53-82ed-4368-a6dd-088de6921c5f",
            "0UH0JI6BkouKMmtE9QsOa8FFPnvr9T5txAbgitff73afwdrIFEw",
            "2023-07-07T11:05:56.000000+09:00",
            "2022-10-14T22:15:40.000000+09:00",
            "4fae7d63-9a18-4349-ab01-c1781b88ad9e"
        )
                .discountPercentage(5458.0)
                .setShopSpecified(false)
                .availableShopIds(new String[]{"95fd9bda-949f-4ae1-b467-c156a5a9310f","85ed9ac7-ed1c-49ac-9348-73c5cb3ad339"})
                .minAmount(307)
                .storageId("311de15d-cff8-4174-acb3-ad4c0367b121");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test39() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "df853a53-82ed-4368-a6dd-088de6921c5f",
            "0UH0JI6BkouKMmtE9QsOa8FFPnvr9T5txAbgitff73afwdrIFEw",
            "2023-07-07T11:05:56.000000+09:00",
            "2022-10-14T22:15:40.000000+09:00",
            "4fae7d63-9a18-4349-ab01-c1781b88ad9e"
        )
                .discountPercentage(6564.0)
                .setShopSpecified(true)
                .availableShopIds(new String[]{"41d0f5cb-d15e-492a-a881-f9081e81c9ad","4082d8f8-4658-4e5c-9379-1fd6e4303853","f069f5e7-4a3d-458e-ab48-3764dd7df333","567bfcac-a146-407e-9278-de23299d57e9","6d05d8a8-f896-4302-a6bb-613b2d3bd58f","8324005e-2c40-4b07-afdf-5aa7a83cedef","fb7a8e9f-84c3-49ce-aab3-816b591518ce","67d3c633-4bad-422c-ae54-a5e7d270b453","67c67b5d-37b4-47c2-be8a-58648f1b1dc2"})
                .usageLimit(8708)
                .minAmount(728)
                .storageId("1c407ea3-4c02-4e43-9228-8bebfeadcef4");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test40() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "df853a53-82ed-4368-a6dd-088de6921c5f",
            "0UH0JI6BkouKMmtE9QsOa8FFPnvr9T5txAbgitff73afwdrIFEw",
            "2023-07-07T11:05:56.000000+09:00",
            "2022-10-14T22:15:40.000000+09:00",
            "4fae7d63-9a18-4349-ab01-c1781b88ad9e"
        )
                .discountPercentage(5172.0)
                .setShopSpecified(true)
                .availableShopIds(new String[]{"e9f99aa9-5690-43d8-ba82-dea112edad1a","6f7677f9-dc3a-4b87-a472-449601959ddb","da541c64-6925-4c1b-b105-e3356d4266e2","834b8785-9915-40ea-b9ca-3c34c574cc56","42987221-cb1f-4a19-a084-e5f663208971","08bae154-1fdd-46c0-8f9f-3a55cbbcf134","b42a8cb0-11ba-4885-9386-8c0c0536b13b","e97114e9-a7f0-488b-a379-a62123ddaaf9","d14ba89c-d553-4b14-ae0a-3aafb92a2562"})
                .code("P")
                .usageLimit(5705)
                .minAmount(6654)
                .storageId("2cd1645a-2c69-434a-b567-ec8d84bfd9d2");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test41() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "df853a53-82ed-4368-a6dd-088de6921c5f",
            "0UH0JI6BkouKMmtE9QsOa8FFPnvr9T5txAbgitff73afwdrIFEw",
            "2023-07-07T11:05:56.000000+09:00",
            "2022-10-14T22:15:40.000000+09:00",
            "4fae7d63-9a18-4349-ab01-c1781b88ad9e"
        )
                .discountPercentage(1731.0)
                .setShopSpecified(true)
                .availableShopIds(new String[]{"4157bdaa-7eee-49aa-8894-5d7bb7fcbc98","3ecd1842-29e7-4796-b0a1-9ad7660fa88a","87aaff6a-2ea0-420d-8257-96c7935fe84b","063c545e-64a1-4a7f-9935-229280286558","2bad0c1e-3e9c-4e7f-a489-109886e57c11"})
                .setPublic(true)
                .code("xkttcTAT")
                .usageLimit(5934)
                .minAmount(4208)
                .storageId("c63911af-ab41-4723-8ee8-00f266c05cdd");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test42() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "df853a53-82ed-4368-a6dd-088de6921c5f",
            "0UH0JI6BkouKMmtE9QsOa8FFPnvr9T5txAbgitff73afwdrIFEw",
            "2023-07-07T11:05:56.000000+09:00",
            "2022-10-14T22:15:40.000000+09:00",
            "4fae7d63-9a18-4349-ab01-c1781b88ad9e"
        )
                .discountPercentage(767.0)
                .setShopSpecified(true)
                .availableShopIds(new String[]{"c25e8209-5d07-4161-96c5-00a9d880aa0c","d27813cf-0424-4e9b-be01-bdadbfa1be8a","9d587566-c433-459c-ae3d-0a82bdcc203b","c726937a-daaa-480e-95c6-ec9299e3230e","51c47e71-784e-44c3-84f8-3ecdb5d73a2f","30aa1b49-0709-4743-a5c0-41dc3e6ed530","e5e06255-31d5-4fa1-97f7-067f34470457","c614b23e-e463-49fb-aefb-88d1882009b8","72d2d0f1-ed81-4411-aa94-9fdc40c24b9e","3aaaa255-a79b-49be-a7a6-b4e283d3c873"})
                .setHidden(false)
                .setPublic(true)
                .code("63")
                .usageLimit(3752)
                .minAmount(323)
                .storageId("12428cb3-3e26-4a0a-ad7f-3fac3c178f52");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test43() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "df853a53-82ed-4368-a6dd-088de6921c5f",
            "0UH0JI6BkouKMmtE9QsOa8FFPnvr9T5txAbgitff73afwdrIFEw",
            "2023-07-07T11:05:56.000000+09:00",
            "2022-10-14T22:15:40.000000+09:00",
            "4fae7d63-9a18-4349-ab01-c1781b88ad9e"
        )
                .discountPercentage(6038.0)
                .setShopSpecified(false)
                .availableShopIds(new String[]{"a9ed79e8-099f-4fe8-a85c-941e4248fa00","829f9487-13bc-4555-8a76-fbf3caa10004","d6846bb4-0829-43d2-89a2-b344fa77af99"})
                .setDisabled(false)
                .setHidden(true)
                .setPublic(false)
                .code("jpTPY")
                .usageLimit(3270)
                .minAmount(930)
                .storageId("cab6905b-200f-455e-8057-33bebb495d40");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test44() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "df853a53-82ed-4368-a6dd-088de6921c5f",
            "0UH0JI6BkouKMmtE9QsOa8FFPnvr9T5txAbgitff73afwdrIFEw",
            "2023-07-07T11:05:56.000000+09:00",
            "2022-10-14T22:15:40.000000+09:00",
            "4fae7d63-9a18-4349-ab01-c1781b88ad9e"
        )
                .discountPercentage(7302.0)
                .setShopSpecified(true)
                .availableShopIds(new String[]{"3fee5d45-7791-4e1b-b2fb-0b152f447755","4d3af1c7-2b57-4b00-8394-abe1560bdb33","74c46dd3-cbfa-4b93-9b32-ec5eb75a122a","721b5263-0f3a-4059-8a62-cb5cccfc6600","19363863-2152-44ee-8a1b-dc92e88dd946","d547be06-e902-44df-9a53-0bbc1f8521be","fd3b3238-d447-4815-bbd1-71648f104968","7a06bfac-f0f3-4ed6-a665-48ce05032834","abc86873-6f30-43a2-8785-9783c6d8c431"})
                .displayEndsAt("2021-06-21T18:32:35.000000+09:00")
                .setDisabled(false)
                .setHidden(true)
                .setPublic(true)
                .code("TQXLhgSfAZ")
                .usageLimit(6641)
                .minAmount(3197)
                .storageId("5d7d7c29-cdb2-49a5-a188-3ea0a3a8c9cf");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test45() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "df853a53-82ed-4368-a6dd-088de6921c5f",
            "0UH0JI6BkouKMmtE9QsOa8FFPnvr9T5txAbgitff73afwdrIFEw",
            "2023-07-07T11:05:56.000000+09:00",
            "2022-10-14T22:15:40.000000+09:00",
            "4fae7d63-9a18-4349-ab01-c1781b88ad9e"
        )
                .discountPercentage(4951.0)
                .setShopSpecified(false)
                .availableShopIds(new String[]{"cdea1a95-b7fa-4b3b-9f17-23258050087b","c3f920e9-5fd8-4a3e-be46-7bf03b3038d5","86342579-010d-42e9-a018-33d145b01627","b4bef906-c45d-41b1-8670-016ee5b9765e"})
                .displayStartsAt("2023-06-25T08:39:21.000000+09:00")
                .displayEndsAt("2023-11-19T04:33:55.000000+09:00")
                .setDisabled(true)
                .setHidden(true)
                .setPublic(false)
                .code("iRv2F0W")
                .usageLimit(788)
                .minAmount(483)
                .storageId("fdcd124a-2a34-411f-aed9-e76ad098360b");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test46() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "df853a53-82ed-4368-a6dd-088de6921c5f",
            "0UH0JI6BkouKMmtE9QsOa8FFPnvr9T5txAbgitff73afwdrIFEw",
            "2023-07-07T11:05:56.000000+09:00",
            "2022-10-14T22:15:40.000000+09:00",
            "4fae7d63-9a18-4349-ab01-c1781b88ad9e"
        )
                .discountPercentage(3598.0)
                .setShopSpecified(false)
                .availableShopIds(new String[]{"5960a793-1f32-403b-90a5-c4d7d3d16bb9","26593b07-b58d-44a5-b027-3bec7c218a3a","6b3064f7-7759-4f68-b5b1-8495dce5c8a8","1f16c264-3fc2-4219-91f7-0a77cefaeb0c","c41e2bad-d0ac-4c6d-9239-849c316924ef","05d7d3b5-a5c9-4d10-9cfd-39be3ce1a0d9","bbf19932-1347-4ef5-9da5-e7ad6117aac9","6b7ccb80-8016-4e89-a182-89d7603920d5","1cbab52a-e2c1-46b1-b08b-8ede576e2085","659bf0ef-5c9d-49a5-88c8-6dccbfd2f618"})
                .discountUpperLimit(3872)
                .displayStartsAt("2021-06-12T15:06:35.000000+09:00")
                .displayEndsAt("2023-09-10T16:52:01.000000+09:00")
                .setDisabled(true)
                .setHidden(false)
                .setPublic(false)
                .code("R")
                .usageLimit(822)
                .minAmount(5353)
                .storageId("cfa27471-d9ca-484d-b105-4dcfac1a1103");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test47() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "df853a53-82ed-4368-a6dd-088de6921c5f",
            "0UH0JI6BkouKMmtE9QsOa8FFPnvr9T5txAbgitff73afwdrIFEw",
            "2023-07-07T11:05:56.000000+09:00",
            "2022-10-14T22:15:40.000000+09:00",
            "4fae7d63-9a18-4349-ab01-c1781b88ad9e"
        )
                .discountPercentage(1940.0)
                .setShopSpecified(false)
                .availableShopIds(new String[]{"2d4efa61-e6a7-490c-9996-aa3bd9fbbf9a","7a3543ac-51b4-4551-abde-6d7458858454","691c1bf2-29fe-45ac-8f0b-3b51b4919729","6b5b11f2-ac80-4079-8ad3-040a117dbcdc"})
                .description("SzgT6dbTIbyxbePpZIGEXmN2BHeeJ2Qj6l5xKsNsamtXoar170wXqIHS5QIutbJUlHIWs2lgQcofl4rrrGl18Q84sTypCcBeoAKQzVLKizKrnJGnGHf1yIX24WHD")
                .discountUpperLimit(7413)
                .displayStartsAt("2022-08-01T10:06:16.000000+09:00")
                .displayEndsAt("2023-11-30T15:05:28.000000+09:00")
                .setDisabled(false)
                .setHidden(true)
                .setPublic(true)
                .code("KRxUfi7k")
                .usageLimit(8504)
                .minAmount(8340)
                .storageId("49b8ccf2-b5fd-4082-afd7-276785c434fc");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
