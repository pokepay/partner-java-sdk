// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.CreateCoupon;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class CreateCouponTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "d0accfc5-478d-4d08-9556-0b24fd7faab5",
            "GeQafu1ECKEb6ZRqmMp1xOAS54pcT8ah7rQsReEm0g0GmSARcy4pRSgROHMyzfYqtWzkhRkNsAGF2RxonaBfSSgczDxGrRw6RbKuvE5m2VDsITot0fsd",
            "2020-04-29T18:31:30.000000+09:00",
            "2016-11-11T03:43:22.000000+09:00",
            "9f3f6244-8892-4cde-8599-4753f10f08df"
        )
                .discountAmount(759);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "d0accfc5-478d-4d08-9556-0b24fd7faab5",
            "GeQafu1ECKEb6ZRqmMp1xOAS54pcT8ah7rQsReEm0g0GmSARcy4pRSgROHMyzfYqtWzkhRkNsAGF2RxonaBfSSgczDxGrRw6RbKuvE5m2VDsITot0fsd",
            "2020-04-29T18:31:30.000000+09:00",
            "2016-11-11T03:43:22.000000+09:00",
            "9f3f6244-8892-4cde-8599-4753f10f08df"
        )
                .discountAmount(1997)
                .storageId("ce96a804-5c97-47f4-8ac4-e771ec598636");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "d0accfc5-478d-4d08-9556-0b24fd7faab5",
            "GeQafu1ECKEb6ZRqmMp1xOAS54pcT8ah7rQsReEm0g0GmSARcy4pRSgROHMyzfYqtWzkhRkNsAGF2RxonaBfSSgczDxGrRw6RbKuvE5m2VDsITot0fsd",
            "2020-04-29T18:31:30.000000+09:00",
            "2016-11-11T03:43:22.000000+09:00",
            "9f3f6244-8892-4cde-8599-4753f10f08df"
        )
                .discountAmount(5219)
                .minAmount(5752)
                .storageId("9d71ee32-8901-4e46-a8b2-6ced2ab1b232");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "d0accfc5-478d-4d08-9556-0b24fd7faab5",
            "GeQafu1ECKEb6ZRqmMp1xOAS54pcT8ah7rQsReEm0g0GmSARcy4pRSgROHMyzfYqtWzkhRkNsAGF2RxonaBfSSgczDxGrRw6RbKuvE5m2VDsITot0fsd",
            "2020-04-29T18:31:30.000000+09:00",
            "2016-11-11T03:43:22.000000+09:00",
            "9f3f6244-8892-4cde-8599-4753f10f08df"
        )
                .discountAmount(6920)
                .usageLimit(6074)
                .minAmount(3841)
                .storageId("a1970fc3-433d-420c-ad95-5987c81b9b54");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "d0accfc5-478d-4d08-9556-0b24fd7faab5",
            "GeQafu1ECKEb6ZRqmMp1xOAS54pcT8ah7rQsReEm0g0GmSARcy4pRSgROHMyzfYqtWzkhRkNsAGF2RxonaBfSSgczDxGrRw6RbKuvE5m2VDsITot0fsd",
            "2020-04-29T18:31:30.000000+09:00",
            "2016-11-11T03:43:22.000000+09:00",
            "9f3f6244-8892-4cde-8599-4753f10f08df"
        )
                .discountAmount(6531)
                .code("FZjjR")
                .usageLimit(7675)
                .minAmount(5275)
                .storageId("0a0f1af2-3617-4a50-b5a8-93337aadfeb0");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "d0accfc5-478d-4d08-9556-0b24fd7faab5",
            "GeQafu1ECKEb6ZRqmMp1xOAS54pcT8ah7rQsReEm0g0GmSARcy4pRSgROHMyzfYqtWzkhRkNsAGF2RxonaBfSSgczDxGrRw6RbKuvE5m2VDsITot0fsd",
            "2020-04-29T18:31:30.000000+09:00",
            "2016-11-11T03:43:22.000000+09:00",
            "9f3f6244-8892-4cde-8599-4753f10f08df"
        )
                .discountAmount(1629)
                .setPublic(false)
                .code("FINnu4HgF8")
                .usageLimit(9839)
                .minAmount(7337)
                .storageId("01ec0d1f-a0f8-4e16-a5d9-fff54481c18c");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "d0accfc5-478d-4d08-9556-0b24fd7faab5",
            "GeQafu1ECKEb6ZRqmMp1xOAS54pcT8ah7rQsReEm0g0GmSARcy4pRSgROHMyzfYqtWzkhRkNsAGF2RxonaBfSSgczDxGrRw6RbKuvE5m2VDsITot0fsd",
            "2020-04-29T18:31:30.000000+09:00",
            "2016-11-11T03:43:22.000000+09:00",
            "9f3f6244-8892-4cde-8599-4753f10f08df"
        )
                .discountAmount(1214)
                .setHidden(false)
                .setPublic(true)
                .code("84e8l")
                .usageLimit(8939)
                .minAmount(187)
                .storageId("63d89404-c742-43f0-8da1-3bc245c6ec23");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "d0accfc5-478d-4d08-9556-0b24fd7faab5",
            "GeQafu1ECKEb6ZRqmMp1xOAS54pcT8ah7rQsReEm0g0GmSARcy4pRSgROHMyzfYqtWzkhRkNsAGF2RxonaBfSSgczDxGrRw6RbKuvE5m2VDsITot0fsd",
            "2020-04-29T18:31:30.000000+09:00",
            "2016-11-11T03:43:22.000000+09:00",
            "9f3f6244-8892-4cde-8599-4753f10f08df"
        )
                .discountAmount(3648)
                .setDisabled(false)
                .setHidden(true)
                .setPublic(true)
                .code("W")
                .usageLimit(7759)
                .minAmount(4137)
                .storageId("eaff20f2-c9c5-4b95-8983-c53231173369");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "d0accfc5-478d-4d08-9556-0b24fd7faab5",
            "GeQafu1ECKEb6ZRqmMp1xOAS54pcT8ah7rQsReEm0g0GmSARcy4pRSgROHMyzfYqtWzkhRkNsAGF2RxonaBfSSgczDxGrRw6RbKuvE5m2VDsITot0fsd",
            "2020-04-29T18:31:30.000000+09:00",
            "2016-11-11T03:43:22.000000+09:00",
            "9f3f6244-8892-4cde-8599-4753f10f08df"
        )
                .discountAmount(3324)
                .displayEndsAt("2018-06-02T04:05:08.000000+09:00")
                .setDisabled(true)
                .setHidden(false)
                .setPublic(true)
                .code("x9iFI")
                .usageLimit(6430)
                .minAmount(6616)
                .storageId("415742c8-5ac8-4ce2-bc24-f33990e40857");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test9() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "d0accfc5-478d-4d08-9556-0b24fd7faab5",
            "GeQafu1ECKEb6ZRqmMp1xOAS54pcT8ah7rQsReEm0g0GmSARcy4pRSgROHMyzfYqtWzkhRkNsAGF2RxonaBfSSgczDxGrRw6RbKuvE5m2VDsITot0fsd",
            "2020-04-29T18:31:30.000000+09:00",
            "2016-11-11T03:43:22.000000+09:00",
            "9f3f6244-8892-4cde-8599-4753f10f08df"
        )
                .discountAmount(313)
                .displayStartsAt("2016-11-08T05:45:55.000000+09:00")
                .displayEndsAt("2025-05-24T19:15:11.000000+09:00")
                .setDisabled(true)
                .setHidden(false)
                .setPublic(false)
                .code("x9g")
                .usageLimit(8639)
                .minAmount(9209)
                .storageId("9dca4e7d-6fcf-4a95-a23b-9753a599c850");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test10() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "d0accfc5-478d-4d08-9556-0b24fd7faab5",
            "GeQafu1ECKEb6ZRqmMp1xOAS54pcT8ah7rQsReEm0g0GmSARcy4pRSgROHMyzfYqtWzkhRkNsAGF2RxonaBfSSgczDxGrRw6RbKuvE5m2VDsITot0fsd",
            "2020-04-29T18:31:30.000000+09:00",
            "2016-11-11T03:43:22.000000+09:00",
            "9f3f6244-8892-4cde-8599-4753f10f08df"
        )
                .discountAmount(3462)
                .discountUpperLimit(642)
                .displayStartsAt("2017-03-06T14:39:28.000000+09:00")
                .displayEndsAt("2016-07-17T15:40:51.000000+09:00")
                .setDisabled(false)
                .setHidden(true)
                .setPublic(true)
                .code("D")
                .usageLimit(2443)
                .minAmount(566)
                .storageId("8b38c031-5b4f-41f5-9a81-58834e383d53");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test11() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "d0accfc5-478d-4d08-9556-0b24fd7faab5",
            "GeQafu1ECKEb6ZRqmMp1xOAS54pcT8ah7rQsReEm0g0GmSARcy4pRSgROHMyzfYqtWzkhRkNsAGF2RxonaBfSSgczDxGrRw6RbKuvE5m2VDsITot0fsd",
            "2020-04-29T18:31:30.000000+09:00",
            "2016-11-11T03:43:22.000000+09:00",
            "9f3f6244-8892-4cde-8599-4753f10f08df"
        )
                .discountAmount(1251)
                .description("NVzFHkbvwLHPS")
                .discountUpperLimit(2480)
                .displayStartsAt("2018-03-12T00:44:37.000000+09:00")
                .displayEndsAt("2016-01-04T07:08:46.000000+09:00")
                .setDisabled(false)
                .setHidden(false)
                .setPublic(true)
                .code("g8Am")
                .usageLimit(670)
                .minAmount(4375)
                .storageId("c3f90e54-3c17-43ab-ac8f-a2eba143716e");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test12() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "d0accfc5-478d-4d08-9556-0b24fd7faab5",
            "GeQafu1ECKEb6ZRqmMp1xOAS54pcT8ah7rQsReEm0g0GmSARcy4pRSgROHMyzfYqtWzkhRkNsAGF2RxonaBfSSgczDxGrRw6RbKuvE5m2VDsITot0fsd",
            "2020-04-29T18:31:30.000000+09:00",
            "2016-11-11T03:43:22.000000+09:00",
            "9f3f6244-8892-4cde-8599-4753f10f08df"
        )
                .discountAmount(1683)
                .setShopSpecified(false)
                .availableShopIds(new String[]{"df3b4773-b1d0-4bfb-9eaf-b62b9f0ffefd","92298df3-1a0f-4bc4-87e3-b4d5bbcd65b4","945967a6-ba73-4eb6-818b-c13367de26c1","1d1fdde0-8bbf-43af-9595-532572abd50d","29d089c8-862f-4119-a2c5-c5a9eaf7b56c","42d1f1f0-cdac-43bc-8dfd-cdb75b891b44","892c92bc-f20d-44a7-b7a3-6b204b989e96"});
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test13() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "d0accfc5-478d-4d08-9556-0b24fd7faab5",
            "GeQafu1ECKEb6ZRqmMp1xOAS54pcT8ah7rQsReEm0g0GmSARcy4pRSgROHMyzfYqtWzkhRkNsAGF2RxonaBfSSgczDxGrRw6RbKuvE5m2VDsITot0fsd",
            "2020-04-29T18:31:30.000000+09:00",
            "2016-11-11T03:43:22.000000+09:00",
            "9f3f6244-8892-4cde-8599-4753f10f08df"
        )
                .discountAmount(4174)
                .setShopSpecified(false)
                .availableShopIds(new String[]{"bd64dd1d-765d-4f0c-86ae-d172d05fd8be","0962b7ec-981b-4f4c-acc0-ba1b0d487f12","d7063aad-cd8f-4016-a3a6-38288b1149b1","f1eb607e-56ed-4742-a535-a0552ac21d05","11d8f397-9507-45f6-834b-7d0b50becccd","a2c97540-a73a-486d-8ced-0154131d876f","ba36dd7e-2eed-425d-b54f-47b10763cca3","bd32920a-c32f-4e61-9ee6-118a4304d5db"})
                .storageId("ccb33e46-512c-47f0-8504-ecab1812779b");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test14() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "d0accfc5-478d-4d08-9556-0b24fd7faab5",
            "GeQafu1ECKEb6ZRqmMp1xOAS54pcT8ah7rQsReEm0g0GmSARcy4pRSgROHMyzfYqtWzkhRkNsAGF2RxonaBfSSgczDxGrRw6RbKuvE5m2VDsITot0fsd",
            "2020-04-29T18:31:30.000000+09:00",
            "2016-11-11T03:43:22.000000+09:00",
            "9f3f6244-8892-4cde-8599-4753f10f08df"
        )
                .discountAmount(5353)
                .setShopSpecified(true)
                .availableShopIds(new String[]{"cfe3c422-066e-4ab7-b41e-8dae3dded209","f1f7ce1a-69c8-420c-943e-f8e8bdf20138","d0255bd2-e18a-46d6-bc8c-e736a3fbff89"})
                .minAmount(9324)
                .storageId("bc7f2c2b-3bd9-4842-b7e3-2181e24c8b96");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test15() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "d0accfc5-478d-4d08-9556-0b24fd7faab5",
            "GeQafu1ECKEb6ZRqmMp1xOAS54pcT8ah7rQsReEm0g0GmSARcy4pRSgROHMyzfYqtWzkhRkNsAGF2RxonaBfSSgczDxGrRw6RbKuvE5m2VDsITot0fsd",
            "2020-04-29T18:31:30.000000+09:00",
            "2016-11-11T03:43:22.000000+09:00",
            "9f3f6244-8892-4cde-8599-4753f10f08df"
        )
                .discountAmount(9110)
                .setShopSpecified(true)
                .availableShopIds(new String[]{"21491a86-8dd3-4932-bf50-8d8a6fd96e1b","52b8c38f-6f80-4149-be5d-c09ccb138d1f","cd5eeefa-0c36-4e63-9d39-2f5417eddb21"})
                .usageLimit(9428)
                .minAmount(3640)
                .storageId("ce6687fc-2a99-4e4c-bbbf-ba158b7dff87");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test16() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "d0accfc5-478d-4d08-9556-0b24fd7faab5",
            "GeQafu1ECKEb6ZRqmMp1xOAS54pcT8ah7rQsReEm0g0GmSARcy4pRSgROHMyzfYqtWzkhRkNsAGF2RxonaBfSSgczDxGrRw6RbKuvE5m2VDsITot0fsd",
            "2020-04-29T18:31:30.000000+09:00",
            "2016-11-11T03:43:22.000000+09:00",
            "9f3f6244-8892-4cde-8599-4753f10f08df"
        )
                .discountAmount(3299)
                .setShopSpecified(false)
                .availableShopIds(new String[]{"7afdb632-632c-4927-9264-3e2b6593cac4","1e5a0d19-e2fe-4b69-aa39-9405549d6586","410c76c2-95c8-45d4-b875-a79a591e92ea","1ac66d13-fa9c-44ec-801e-813f7f905465","ea26928c-04e8-4e02-91fd-598476cef49c","e4784003-7f2a-446d-9677-8c6f7e1ab623","f35bb754-a742-4286-97d0-c38c05cfbb07","a6062415-9b2e-4aec-9e19-47cf3d66845e","c9ae43d5-776c-447d-b9ca-7ea150b0cc8b"})
                .code("hwlk2")
                .usageLimit(621)
                .minAmount(4094)
                .storageId("c8962790-29d1-4b0e-976b-65613e958e15");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test17() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "d0accfc5-478d-4d08-9556-0b24fd7faab5",
            "GeQafu1ECKEb6ZRqmMp1xOAS54pcT8ah7rQsReEm0g0GmSARcy4pRSgROHMyzfYqtWzkhRkNsAGF2RxonaBfSSgczDxGrRw6RbKuvE5m2VDsITot0fsd",
            "2020-04-29T18:31:30.000000+09:00",
            "2016-11-11T03:43:22.000000+09:00",
            "9f3f6244-8892-4cde-8599-4753f10f08df"
        )
                .discountAmount(3395)
                .setShopSpecified(false)
                .availableShopIds(new String[]{"8fb2bb24-e42c-43c3-ab53-e0e552d73631","2f0f56f7-c710-4ce9-b629-8ef7888030e3","6fb27fe0-1ca6-4ade-a854-28c28f250b4e","ec57ab59-f56f-458d-ac82-ad26b6be329f","eab9c844-82d9-4fab-82e3-cde1afe03d79","a2f9abb0-feb7-45b6-b47e-fce259b6d6af","e1bad23e-34bd-4058-8913-0c377daf5528","d8242fc6-d7b5-4e87-871b-1f4fc01c3e0d"})
                .setPublic(false)
                .code("CKZc7E")
                .usageLimit(8447)
                .minAmount(5411)
                .storageId("42737c3b-517e-46a5-bfe4-995f0e44fdcf");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test18() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "d0accfc5-478d-4d08-9556-0b24fd7faab5",
            "GeQafu1ECKEb6ZRqmMp1xOAS54pcT8ah7rQsReEm0g0GmSARcy4pRSgROHMyzfYqtWzkhRkNsAGF2RxonaBfSSgczDxGrRw6RbKuvE5m2VDsITot0fsd",
            "2020-04-29T18:31:30.000000+09:00",
            "2016-11-11T03:43:22.000000+09:00",
            "9f3f6244-8892-4cde-8599-4753f10f08df"
        )
                .discountAmount(460)
                .setShopSpecified(true)
                .availableShopIds(new String[]{"5ffcf747-a05e-43d2-85a5-d70eab2cdd47","e8a54ab5-c3b3-4088-a730-63ff5d658d05"})
                .setHidden(false)
                .setPublic(true)
                .code("M")
                .usageLimit(3701)
                .minAmount(3708)
                .storageId("5ef8db88-306a-4274-b0fc-d65dd05d814e");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test19() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "d0accfc5-478d-4d08-9556-0b24fd7faab5",
            "GeQafu1ECKEb6ZRqmMp1xOAS54pcT8ah7rQsReEm0g0GmSARcy4pRSgROHMyzfYqtWzkhRkNsAGF2RxonaBfSSgczDxGrRw6RbKuvE5m2VDsITot0fsd",
            "2020-04-29T18:31:30.000000+09:00",
            "2016-11-11T03:43:22.000000+09:00",
            "9f3f6244-8892-4cde-8599-4753f10f08df"
        )
                .discountAmount(3304)
                .setShopSpecified(true)
                .availableShopIds(new String[]{"9963279f-f17a-4334-940c-20976ec5a796","ebc1f755-7fd8-4411-b260-e78c6a510bba","ea7b8924-fd76-4d75-ab22-3cee87c5516d","6afa2db0-b04d-4ca1-a951-7417b6bcfd06","9bcd4483-9ae4-4afb-9e69-5f3f46910b84","b6d087a2-cca0-47e7-911e-152dccc07b85","c9bbcef3-ecb7-4d5f-9a67-6646eac7a270","7986c026-56e5-4dec-9409-d7205cffb671","201b56c7-744a-4d2d-92d1-5a4a064d3415","4ce1a2cf-e92a-4715-8d4f-d32b86d518ff"})
                .setDisabled(true)
                .setHidden(false)
                .setPublic(true)
                .code("bt")
                .usageLimit(4209)
                .minAmount(1287)
                .storageId("acafedd1-6646-4edd-aa7e-57fad8d2871a");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test20() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "d0accfc5-478d-4d08-9556-0b24fd7faab5",
            "GeQafu1ECKEb6ZRqmMp1xOAS54pcT8ah7rQsReEm0g0GmSARcy4pRSgROHMyzfYqtWzkhRkNsAGF2RxonaBfSSgczDxGrRw6RbKuvE5m2VDsITot0fsd",
            "2020-04-29T18:31:30.000000+09:00",
            "2016-11-11T03:43:22.000000+09:00",
            "9f3f6244-8892-4cde-8599-4753f10f08df"
        )
                .discountAmount(8976)
                .setShopSpecified(true)
                .availableShopIds(new String[]{"775dceca-bc45-493d-a5f4-bcca6ce2af21","3e6e2b42-4d1c-45f2-95bb-c3a1f8aa1c49","fdce1718-cab8-4192-8d34-0fb2c7faa408","65037b33-7fb0-41bb-8419-250e81b6af5c","9822b3d6-8fc1-47f5-97c4-5e0672e60cfb","7fd23890-7a08-4b0e-991b-b4a888c85be5"})
                .displayEndsAt("2024-12-31T07:20:05.000000+09:00")
                .setDisabled(true)
                .setHidden(false)
                .setPublic(true)
                .code("0")
                .usageLimit(5124)
                .minAmount(851)
                .storageId("5d1ee1b6-131f-4d55-9e0e-abb6e7c994cf");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test21() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "d0accfc5-478d-4d08-9556-0b24fd7faab5",
            "GeQafu1ECKEb6ZRqmMp1xOAS54pcT8ah7rQsReEm0g0GmSARcy4pRSgROHMyzfYqtWzkhRkNsAGF2RxonaBfSSgczDxGrRw6RbKuvE5m2VDsITot0fsd",
            "2020-04-29T18:31:30.000000+09:00",
            "2016-11-11T03:43:22.000000+09:00",
            "9f3f6244-8892-4cde-8599-4753f10f08df"
        )
                .discountAmount(3020)
                .setShopSpecified(false)
                .availableShopIds(new String[]{"731e9e07-fd5a-4d32-a51f-6fdfe6692682","2fc63cc4-4a7e-47e5-ac8a-f76a1c155c65","3d28b937-5e8d-429f-9e7f-8383e304fc65","9040e878-965a-4156-b79c-9c0d13136358","cde28dc7-32b6-4c2c-b22a-dd8d06b00204","03b8327b-d28b-41a3-9da2-25c5e1a1eae6","b2e5a5b7-7de0-4370-8449-74484a901006"})
                .displayStartsAt("2017-06-05T18:10:26.000000+09:00")
                .displayEndsAt("2015-12-20T22:17:00.000000+09:00")
                .setDisabled(false)
                .setHidden(true)
                .setPublic(true)
                .code("jO4ZU")
                .usageLimit(4694)
                .minAmount(9083)
                .storageId("db645211-a34b-4517-8057-676f1ba7745e");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test22() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "d0accfc5-478d-4d08-9556-0b24fd7faab5",
            "GeQafu1ECKEb6ZRqmMp1xOAS54pcT8ah7rQsReEm0g0GmSARcy4pRSgROHMyzfYqtWzkhRkNsAGF2RxonaBfSSgczDxGrRw6RbKuvE5m2VDsITot0fsd",
            "2020-04-29T18:31:30.000000+09:00",
            "2016-11-11T03:43:22.000000+09:00",
            "9f3f6244-8892-4cde-8599-4753f10f08df"
        )
                .discountAmount(7912)
                .setShopSpecified(true)
                .availableShopIds(new String[]{"702dd9eb-e4fe-4593-b3a5-c01f16798ef7","3b29501b-3cc0-4531-9591-ac0050f15010","ecb9bd0a-7756-4581-89b3-11e1efa132bf"})
                .discountUpperLimit(9421)
                .displayStartsAt("2023-01-29T15:08:37.000000+09:00")
                .displayEndsAt("2021-02-13T07:01:58.000000+09:00")
                .setDisabled(false)
                .setHidden(false)
                .setPublic(false)
                .code("u5wp3GEegO")
                .usageLimit(4837)
                .minAmount(9859)
                .storageId("7d3c61d4-c587-4468-83f8-39eca55ee7c1");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test23() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "d0accfc5-478d-4d08-9556-0b24fd7faab5",
            "GeQafu1ECKEb6ZRqmMp1xOAS54pcT8ah7rQsReEm0g0GmSARcy4pRSgROHMyzfYqtWzkhRkNsAGF2RxonaBfSSgczDxGrRw6RbKuvE5m2VDsITot0fsd",
            "2020-04-29T18:31:30.000000+09:00",
            "2016-11-11T03:43:22.000000+09:00",
            "9f3f6244-8892-4cde-8599-4753f10f08df"
        )
                .discountAmount(3102)
                .setShopSpecified(true)
                .availableShopIds(new String[]{"f376dcff-c6d2-4d4d-ae13-1e09a45e25fc","945fe8e9-0b24-4358-aa1c-2ede6dc3a5fa","0d9af542-9196-45c7-ad15-263d792ae567"})
                .description("gzSx7tN5l69Dfd1WC0FJIOw7y2v9scTN1mkrgiun98WaBfrOfiMxGpLqcHx4YsE64Vqvr6DAwMH6LHyQEGcEqnwjLmcAAd6bnasfIbCKUt1tzZnq5heZroz6MH0DY2rEJcc9PJbz91qILbYJ3kwh9LO8ptZlTlawL92XpikcanvTnUSqVUXFpGEmHsajJEvAK8NM0Sgna4rmuYVEcs0J")
                .discountUpperLimit(6543)
                .displayStartsAt("2025-01-19T16:17:24.000000+09:00")
                .displayEndsAt("2022-12-21T10:31:45.000000+09:00")
                .setDisabled(false)
                .setHidden(false)
                .setPublic(true)
                .code("dIJ")
                .usageLimit(3982)
                .minAmount(8432)
                .storageId("e035c40e-1922-484f-81f2-6e72ff06878e");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test24() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "d0accfc5-478d-4d08-9556-0b24fd7faab5",
            "GeQafu1ECKEb6ZRqmMp1xOAS54pcT8ah7rQsReEm0g0GmSARcy4pRSgROHMyzfYqtWzkhRkNsAGF2RxonaBfSSgczDxGrRw6RbKuvE5m2VDsITot0fsd",
            "2020-04-29T18:31:30.000000+09:00",
            "2016-11-11T03:43:22.000000+09:00",
            "9f3f6244-8892-4cde-8599-4753f10f08df"
        )
                .discountPercentage(7361.0);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test25() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "d0accfc5-478d-4d08-9556-0b24fd7faab5",
            "GeQafu1ECKEb6ZRqmMp1xOAS54pcT8ah7rQsReEm0g0GmSARcy4pRSgROHMyzfYqtWzkhRkNsAGF2RxonaBfSSgczDxGrRw6RbKuvE5m2VDsITot0fsd",
            "2020-04-29T18:31:30.000000+09:00",
            "2016-11-11T03:43:22.000000+09:00",
            "9f3f6244-8892-4cde-8599-4753f10f08df"
        )
                .discountPercentage(1282.0)
                .storageId("8c98d266-7f8f-4adc-8ab1-42847d9bd2d0");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test26() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "d0accfc5-478d-4d08-9556-0b24fd7faab5",
            "GeQafu1ECKEb6ZRqmMp1xOAS54pcT8ah7rQsReEm0g0GmSARcy4pRSgROHMyzfYqtWzkhRkNsAGF2RxonaBfSSgczDxGrRw6RbKuvE5m2VDsITot0fsd",
            "2020-04-29T18:31:30.000000+09:00",
            "2016-11-11T03:43:22.000000+09:00",
            "9f3f6244-8892-4cde-8599-4753f10f08df"
        )
                .discountPercentage(5664.0)
                .minAmount(4481)
                .storageId("17cf4b15-4baf-411b-b787-d02037523411");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test27() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "d0accfc5-478d-4d08-9556-0b24fd7faab5",
            "GeQafu1ECKEb6ZRqmMp1xOAS54pcT8ah7rQsReEm0g0GmSARcy4pRSgROHMyzfYqtWzkhRkNsAGF2RxonaBfSSgczDxGrRw6RbKuvE5m2VDsITot0fsd",
            "2020-04-29T18:31:30.000000+09:00",
            "2016-11-11T03:43:22.000000+09:00",
            "9f3f6244-8892-4cde-8599-4753f10f08df"
        )
                .discountPercentage(1447.0)
                .usageLimit(1693)
                .minAmount(8820)
                .storageId("14f09256-dbbb-4481-a7ea-8beb0f5f53eb");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test28() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "d0accfc5-478d-4d08-9556-0b24fd7faab5",
            "GeQafu1ECKEb6ZRqmMp1xOAS54pcT8ah7rQsReEm0g0GmSARcy4pRSgROHMyzfYqtWzkhRkNsAGF2RxonaBfSSgczDxGrRw6RbKuvE5m2VDsITot0fsd",
            "2020-04-29T18:31:30.000000+09:00",
            "2016-11-11T03:43:22.000000+09:00",
            "9f3f6244-8892-4cde-8599-4753f10f08df"
        )
                .discountPercentage(2403.0)
                .code("4qSQYQF03")
                .usageLimit(5154)
                .minAmount(9879)
                .storageId("524091fa-90b9-4e75-ba16-45e60cfa0ecd");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test29() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "d0accfc5-478d-4d08-9556-0b24fd7faab5",
            "GeQafu1ECKEb6ZRqmMp1xOAS54pcT8ah7rQsReEm0g0GmSARcy4pRSgROHMyzfYqtWzkhRkNsAGF2RxonaBfSSgczDxGrRw6RbKuvE5m2VDsITot0fsd",
            "2020-04-29T18:31:30.000000+09:00",
            "2016-11-11T03:43:22.000000+09:00",
            "9f3f6244-8892-4cde-8599-4753f10f08df"
        )
                .discountPercentage(5367.0)
                .setPublic(true)
                .code("XLPPM4h")
                .usageLimit(4927)
                .minAmount(9191)
                .storageId("8c5725aa-e980-4a33-8aad-65a438b2f87d");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test30() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "d0accfc5-478d-4d08-9556-0b24fd7faab5",
            "GeQafu1ECKEb6ZRqmMp1xOAS54pcT8ah7rQsReEm0g0GmSARcy4pRSgROHMyzfYqtWzkhRkNsAGF2RxonaBfSSgczDxGrRw6RbKuvE5m2VDsITot0fsd",
            "2020-04-29T18:31:30.000000+09:00",
            "2016-11-11T03:43:22.000000+09:00",
            "9f3f6244-8892-4cde-8599-4753f10f08df"
        )
                .discountPercentage(7972.0)
                .setHidden(true)
                .setPublic(false)
                .code("mz9WBpNW")
                .usageLimit(6770)
                .minAmount(5632)
                .storageId("6af25b4f-2960-4a3e-b534-bb7e596557cf");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test31() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "d0accfc5-478d-4d08-9556-0b24fd7faab5",
            "GeQafu1ECKEb6ZRqmMp1xOAS54pcT8ah7rQsReEm0g0GmSARcy4pRSgROHMyzfYqtWzkhRkNsAGF2RxonaBfSSgczDxGrRw6RbKuvE5m2VDsITot0fsd",
            "2020-04-29T18:31:30.000000+09:00",
            "2016-11-11T03:43:22.000000+09:00",
            "9f3f6244-8892-4cde-8599-4753f10f08df"
        )
                .discountPercentage(9031.0)
                .setDisabled(false)
                .setHidden(true)
                .setPublic(false)
                .code("rhceSellW")
                .usageLimit(6015)
                .minAmount(1458)
                .storageId("ee689198-64de-4b27-b867-366904e08801");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test32() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "d0accfc5-478d-4d08-9556-0b24fd7faab5",
            "GeQafu1ECKEb6ZRqmMp1xOAS54pcT8ah7rQsReEm0g0GmSARcy4pRSgROHMyzfYqtWzkhRkNsAGF2RxonaBfSSgczDxGrRw6RbKuvE5m2VDsITot0fsd",
            "2020-04-29T18:31:30.000000+09:00",
            "2016-11-11T03:43:22.000000+09:00",
            "9f3f6244-8892-4cde-8599-4753f10f08df"
        )
                .discountPercentage(7356.0)
                .displayEndsAt("2023-04-03T13:20:40.000000+09:00")
                .setDisabled(true)
                .setHidden(false)
                .setPublic(false)
                .code("yR34X5")
                .usageLimit(3474)
                .minAmount(679)
                .storageId("aa855a7a-edcb-4c1d-a100-99b98b64c56a");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test33() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "d0accfc5-478d-4d08-9556-0b24fd7faab5",
            "GeQafu1ECKEb6ZRqmMp1xOAS54pcT8ah7rQsReEm0g0GmSARcy4pRSgROHMyzfYqtWzkhRkNsAGF2RxonaBfSSgczDxGrRw6RbKuvE5m2VDsITot0fsd",
            "2020-04-29T18:31:30.000000+09:00",
            "2016-11-11T03:43:22.000000+09:00",
            "9f3f6244-8892-4cde-8599-4753f10f08df"
        )
                .discountPercentage(2998.0)
                .displayStartsAt("2021-01-02T12:51:42.000000+09:00")
                .displayEndsAt("2025-03-28T13:07:18.000000+09:00")
                .setDisabled(false)
                .setHidden(false)
                .setPublic(false)
                .code("NXz")
                .usageLimit(5237)
                .minAmount(8981)
                .storageId("ae42f821-692a-4fda-b5dc-7402a542aa01");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test34() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "d0accfc5-478d-4d08-9556-0b24fd7faab5",
            "GeQafu1ECKEb6ZRqmMp1xOAS54pcT8ah7rQsReEm0g0GmSARcy4pRSgROHMyzfYqtWzkhRkNsAGF2RxonaBfSSgczDxGrRw6RbKuvE5m2VDsITot0fsd",
            "2020-04-29T18:31:30.000000+09:00",
            "2016-11-11T03:43:22.000000+09:00",
            "9f3f6244-8892-4cde-8599-4753f10f08df"
        )
                .discountPercentage(1915.0)
                .discountUpperLimit(6654)
                .displayStartsAt("2020-03-21T14:05:39.000000+09:00")
                .displayEndsAt("2017-03-18T07:52:50.000000+09:00")
                .setDisabled(false)
                .setHidden(true)
                .setPublic(true)
                .code("PJDqANb")
                .usageLimit(8800)
                .minAmount(4277)
                .storageId("a5ed7112-4d93-4350-9316-03fd53d95f0c");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test35() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "d0accfc5-478d-4d08-9556-0b24fd7faab5",
            "GeQafu1ECKEb6ZRqmMp1xOAS54pcT8ah7rQsReEm0g0GmSARcy4pRSgROHMyzfYqtWzkhRkNsAGF2RxonaBfSSgczDxGrRw6RbKuvE5m2VDsITot0fsd",
            "2020-04-29T18:31:30.000000+09:00",
            "2016-11-11T03:43:22.000000+09:00",
            "9f3f6244-8892-4cde-8599-4753f10f08df"
        )
                .discountPercentage(1459.0)
                .description("hfUSPmx2vk77LdQzUCTlQfdTd5gC0g5b54ltZ9826CglVLmXtr8XJgU1e6yRLpSz5KBYK9PxKEIUzyKZRzfageDgdztQE4hyNyRLoLYoYc0XRK97QIkNnN4kG")
                .discountUpperLimit(4644)
                .displayStartsAt("2022-03-03T07:27:52.000000+09:00")
                .displayEndsAt("2016-03-13T02:55:53.000000+09:00")
                .setDisabled(true)
                .setHidden(false)
                .setPublic(true)
                .code("qO")
                .usageLimit(8296)
                .minAmount(1041)
                .storageId("0b058de2-ccc8-42c5-a464-b9fe16c561c6");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test36() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "d0accfc5-478d-4d08-9556-0b24fd7faab5",
            "GeQafu1ECKEb6ZRqmMp1xOAS54pcT8ah7rQsReEm0g0GmSARcy4pRSgROHMyzfYqtWzkhRkNsAGF2RxonaBfSSgczDxGrRw6RbKuvE5m2VDsITot0fsd",
            "2020-04-29T18:31:30.000000+09:00",
            "2016-11-11T03:43:22.000000+09:00",
            "9f3f6244-8892-4cde-8599-4753f10f08df"
        )
                .discountPercentage(6750.0)
                .setShopSpecified(true)
                .availableShopIds(new String[]{"7f9e7de8-affc-4247-bef9-5b0e668ba6be","5b34b5cb-2209-48a2-b662-d4f3ecd90288","2c675523-06a0-4be3-b207-2785136a8855","b0e9f9ca-2416-4fd1-afe7-89e5eef6b142","533fc2f8-fb07-464c-bdca-9f8114a9e47c"});
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test37() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "d0accfc5-478d-4d08-9556-0b24fd7faab5",
            "GeQafu1ECKEb6ZRqmMp1xOAS54pcT8ah7rQsReEm0g0GmSARcy4pRSgROHMyzfYqtWzkhRkNsAGF2RxonaBfSSgczDxGrRw6RbKuvE5m2VDsITot0fsd",
            "2020-04-29T18:31:30.000000+09:00",
            "2016-11-11T03:43:22.000000+09:00",
            "9f3f6244-8892-4cde-8599-4753f10f08df"
        )
                .discountPercentage(7988.0)
                .setShopSpecified(true)
                .availableShopIds(new String[]{"ba903c23-8099-4175-8e64-ab6017ab743f","f4dd5cfb-66bd-45c4-8a74-2522830dba1d","a6ff15a4-edb9-49f9-93bd-e4e2c7c48522","351a17ab-277d-429e-be72-6acc3ddbe42e","79d7ddab-f1c0-4bf8-b699-7c0e9e9934e9","2a6b9fb1-3ba8-4e4c-adb0-f5a2491d90de","24de74d7-5e85-4c44-bc53-c91143a0dfc0","82bc0e64-fab4-44d4-a295-9607074d15e4","a97c05e4-9b0e-4774-8da4-a34302ed8a05","4ec17f7a-80a7-41fd-8415-b802b955290a"})
                .storageId("d7653782-71e5-4595-9d10-35693f274082");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test38() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "d0accfc5-478d-4d08-9556-0b24fd7faab5",
            "GeQafu1ECKEb6ZRqmMp1xOAS54pcT8ah7rQsReEm0g0GmSARcy4pRSgROHMyzfYqtWzkhRkNsAGF2RxonaBfSSgczDxGrRw6RbKuvE5m2VDsITot0fsd",
            "2020-04-29T18:31:30.000000+09:00",
            "2016-11-11T03:43:22.000000+09:00",
            "9f3f6244-8892-4cde-8599-4753f10f08df"
        )
                .discountPercentage(8715.0)
                .setShopSpecified(true)
                .availableShopIds(new String[]{"1f62e3aa-45bc-42c0-ac39-b1ba75e2f675","56c6e1ce-c3a9-436c-9938-d7dc908e9484","d2eef7b9-ca11-43e9-9efa-6ba0a0ebde46","d5a7a1fe-f442-4047-955f-8ef2e9c9c2b9"})
                .minAmount(2446)
                .storageId("c1560f15-8a1b-4f41-a9a1-2c5860a47321");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test39() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "d0accfc5-478d-4d08-9556-0b24fd7faab5",
            "GeQafu1ECKEb6ZRqmMp1xOAS54pcT8ah7rQsReEm0g0GmSARcy4pRSgROHMyzfYqtWzkhRkNsAGF2RxonaBfSSgczDxGrRw6RbKuvE5m2VDsITot0fsd",
            "2020-04-29T18:31:30.000000+09:00",
            "2016-11-11T03:43:22.000000+09:00",
            "9f3f6244-8892-4cde-8599-4753f10f08df"
        )
                .discountPercentage(1051.0)
                .setShopSpecified(true)
                .availableShopIds(new String[]{"9122808b-d40a-435f-83fa-c7b955e06968","567cb84b-0017-44eb-9a59-252378024cf9","305600a2-831a-47b3-a9f7-3480c6212cb0","92b3d68c-6fdc-4005-8211-071ca6606a9f","a751b101-1bc0-44b7-9858-9e59e4d4d8d8","de92a25f-413f-4ef4-9719-29b0f82686c4"})
                .usageLimit(2783)
                .minAmount(8571)
                .storageId("2e80fa6d-87d2-466d-a30e-4179570fb147");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test40() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "d0accfc5-478d-4d08-9556-0b24fd7faab5",
            "GeQafu1ECKEb6ZRqmMp1xOAS54pcT8ah7rQsReEm0g0GmSARcy4pRSgROHMyzfYqtWzkhRkNsAGF2RxonaBfSSgczDxGrRw6RbKuvE5m2VDsITot0fsd",
            "2020-04-29T18:31:30.000000+09:00",
            "2016-11-11T03:43:22.000000+09:00",
            "9f3f6244-8892-4cde-8599-4753f10f08df"
        )
                .discountPercentage(1126.0)
                .setShopSpecified(false)
                .availableShopIds(new String[]{"aab36bb2-4205-4be6-9232-c0bf6492f427","c7fa4d97-fd2c-40a4-9e1f-03bd546bf37e","8c000082-c16c-4b5a-ab09-ffd7b13b3795","b1eb55c7-05a8-497d-83cc-1bd91cc6e30d","07501ec1-80a5-4644-af81-444bf4cd464a","70fae69b-ee17-41ed-b78a-ad63682a1c15","baec910d-9ccb-46e1-8616-ccc2bae6ce7c","5e2c9457-7882-421c-8c75-33274aa3d9e9","3c736a1e-be10-4c46-8ad5-23c36da967ea"})
                .code("nYx")
                .usageLimit(2781)
                .minAmount(6066)
                .storageId("08f52d91-2908-45d2-b656-cff47db74351");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test41() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "d0accfc5-478d-4d08-9556-0b24fd7faab5",
            "GeQafu1ECKEb6ZRqmMp1xOAS54pcT8ah7rQsReEm0g0GmSARcy4pRSgROHMyzfYqtWzkhRkNsAGF2RxonaBfSSgczDxGrRw6RbKuvE5m2VDsITot0fsd",
            "2020-04-29T18:31:30.000000+09:00",
            "2016-11-11T03:43:22.000000+09:00",
            "9f3f6244-8892-4cde-8599-4753f10f08df"
        )
                .discountPercentage(2287.0)
                .setShopSpecified(false)
                .availableShopIds(new String[]{"34bb187b-a5c7-4868-955f-ebd0012e0ba0","99c5899c-4500-4a45-9345-a7576ea1008b","83f7d0f0-b79a-4603-b9d8-dfa6733c4fc3","27f73ed2-a9ec-4bb2-8a74-e7c7c946f02b","27c3fd7e-9277-4993-bbd1-1fed6ca5eafa","f2401580-678c-40d2-92bb-7a332a5651c3","9902b0f8-6bb7-4db3-826d-2b06f432e070","d5cb3c53-d329-4006-88a7-b413acd7a7dc"})
                .setPublic(false)
                .code("wfmSKu7G")
                .usageLimit(1473)
                .minAmount(4213)
                .storageId("581d200c-42a9-4b41-a1de-c47de683f55d");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test42() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "d0accfc5-478d-4d08-9556-0b24fd7faab5",
            "GeQafu1ECKEb6ZRqmMp1xOAS54pcT8ah7rQsReEm0g0GmSARcy4pRSgROHMyzfYqtWzkhRkNsAGF2RxonaBfSSgczDxGrRw6RbKuvE5m2VDsITot0fsd",
            "2020-04-29T18:31:30.000000+09:00",
            "2016-11-11T03:43:22.000000+09:00",
            "9f3f6244-8892-4cde-8599-4753f10f08df"
        )
                .discountPercentage(8506.0)
                .setShopSpecified(false)
                .availableShopIds(new String[]{"fff057c7-d3a6-484e-916d-c27985259009","cf5f4635-eb2f-400a-af7f-806e52d20d54","beda2cd4-974a-47c9-8d73-9679c6c3a0ae","cb908219-3238-4229-b208-a2d2e289a29a","3bd7d6e2-62a1-477b-a045-84ba4dde54b8","993aa9c3-79d9-47de-9997-bb9e71813e0b","0af95a17-36b7-4c95-9b6b-1b2c82b18a3d","676a1e01-ab70-4e5c-949c-9e999bf99486"})
                .setHidden(true)
                .setPublic(false)
                .code("2GAs5TI")
                .usageLimit(3192)
                .minAmount(5161)
                .storageId("6e74eb69-5a9f-446f-a694-03573a2d1ca6");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test43() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "d0accfc5-478d-4d08-9556-0b24fd7faab5",
            "GeQafu1ECKEb6ZRqmMp1xOAS54pcT8ah7rQsReEm0g0GmSARcy4pRSgROHMyzfYqtWzkhRkNsAGF2RxonaBfSSgczDxGrRw6RbKuvE5m2VDsITot0fsd",
            "2020-04-29T18:31:30.000000+09:00",
            "2016-11-11T03:43:22.000000+09:00",
            "9f3f6244-8892-4cde-8599-4753f10f08df"
        )
                .discountPercentage(493.0)
                .setShopSpecified(false)
                .availableShopIds(new String[]{"2fc365d2-b1a6-4f78-93e3-4666944bac20","721afe0b-137f-40b6-985b-aaf457da961d","160d56cb-fbda-43b4-a9ee-b82e2269275d","5daf69a8-b048-4286-b61e-1432de801896","24f4541f-bbcc-4dbe-83a1-2ce9b47171d6","c86087e1-b8fe-4265-b632-87502de1e8ef","2993b7eb-f01c-421d-a4f5-e977d7271488"})
                .setDisabled(true)
                .setHidden(true)
                .setPublic(true)
                .code("Nrv0lg")
                .usageLimit(1986)
                .minAmount(9282)
                .storageId("f39c4be7-c454-49f0-9af3-ef1a8c21c3aa");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test44() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "d0accfc5-478d-4d08-9556-0b24fd7faab5",
            "GeQafu1ECKEb6ZRqmMp1xOAS54pcT8ah7rQsReEm0g0GmSARcy4pRSgROHMyzfYqtWzkhRkNsAGF2RxonaBfSSgczDxGrRw6RbKuvE5m2VDsITot0fsd",
            "2020-04-29T18:31:30.000000+09:00",
            "2016-11-11T03:43:22.000000+09:00",
            "9f3f6244-8892-4cde-8599-4753f10f08df"
        )
                .discountPercentage(7507.0)
                .setShopSpecified(false)
                .availableShopIds(new String[]{"462626f9-820f-4b7f-87f3-f29f337a62dc","f77b3186-fa5c-4c1c-95c8-51dffb354cec","7d769018-a229-437c-a8a5-3df77d5e300b"})
                .displayEndsAt("2016-03-30T07:48:25.000000+09:00")
                .setDisabled(false)
                .setHidden(false)
                .setPublic(false)
                .code("r8IOp3toDl")
                .usageLimit(7152)
                .minAmount(9409)
                .storageId("ee8bc708-6123-49a0-9b8f-11b5ba7a0291");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test45() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "d0accfc5-478d-4d08-9556-0b24fd7faab5",
            "GeQafu1ECKEb6ZRqmMp1xOAS54pcT8ah7rQsReEm0g0GmSARcy4pRSgROHMyzfYqtWzkhRkNsAGF2RxonaBfSSgczDxGrRw6RbKuvE5m2VDsITot0fsd",
            "2020-04-29T18:31:30.000000+09:00",
            "2016-11-11T03:43:22.000000+09:00",
            "9f3f6244-8892-4cde-8599-4753f10f08df"
        )
                .discountPercentage(9551.0)
                .setShopSpecified(false)
                .availableShopIds(new String[]{"add00900-2348-4387-b31b-cfadb512fa28","307e37cd-92a1-4ab5-a57c-4bd073d16e6c","b0611113-bae0-4796-9c69-bbc7f7326b65","682b9053-3c5f-4c41-9be4-3fa9cb4c7e46","5e40319d-fb61-4c67-9261-0f6880201952","37e51c34-89f3-4c75-b1e7-0c78f6cfb457","b337b691-bd73-4fb2-8467-d15c43478136","d5f0e04d-7fb9-41af-bf57-0652ab5008b0"})
                .displayStartsAt("2022-06-03T02:10:26.000000+09:00")
                .displayEndsAt("2019-08-14T05:30:15.000000+09:00")
                .setDisabled(false)
                .setHidden(true)
                .setPublic(true)
                .code("S3Zd")
                .usageLimit(6664)
                .minAmount(3069)
                .storageId("341f315a-ad07-4b13-8fc3-76cae33cec0b");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test46() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "d0accfc5-478d-4d08-9556-0b24fd7faab5",
            "GeQafu1ECKEb6ZRqmMp1xOAS54pcT8ah7rQsReEm0g0GmSARcy4pRSgROHMyzfYqtWzkhRkNsAGF2RxonaBfSSgczDxGrRw6RbKuvE5m2VDsITot0fsd",
            "2020-04-29T18:31:30.000000+09:00",
            "2016-11-11T03:43:22.000000+09:00",
            "9f3f6244-8892-4cde-8599-4753f10f08df"
        )
                .discountPercentage(4645.0)
                .setShopSpecified(true)
                .availableShopIds(new String[]{"9c25a2b6-7b5e-4fd3-af75-688ae1dcba55","e424d7b6-4c45-4449-84b5-c2fddec4c972","336b2eb3-bdfb-4f5a-bd9e-79bd2a34a65d","fedfeb79-5ec1-442b-9522-e00db583303f","65459a7d-82ab-4ae5-8491-e4b0dc0c636c","5ec62555-1691-4ade-a437-4651f43b4d96","ee44cc0b-dc70-45a8-aa17-edfeef03149b","f572cded-8e8b-4542-951c-9fa8b65b716a"})
                .discountUpperLimit(1246)
                .displayStartsAt("2024-10-15T01:38:43.000000+09:00")
                .displayEndsAt("2025-01-03T12:01:14.000000+09:00")
                .setDisabled(true)
                .setHidden(false)
                .setPublic(false)
                .code("bP81rqmC5e")
                .usageLimit(1765)
                .minAmount(688)
                .storageId("0001ddb1-e1df-4a26-afa9-93b8b726d189");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test47() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "d0accfc5-478d-4d08-9556-0b24fd7faab5",
            "GeQafu1ECKEb6ZRqmMp1xOAS54pcT8ah7rQsReEm0g0GmSARcy4pRSgROHMyzfYqtWzkhRkNsAGF2RxonaBfSSgczDxGrRw6RbKuvE5m2VDsITot0fsd",
            "2020-04-29T18:31:30.000000+09:00",
            "2016-11-11T03:43:22.000000+09:00",
            "9f3f6244-8892-4cde-8599-4753f10f08df"
        )
                .discountPercentage(2606.0)
                .setShopSpecified(true)
                .availableShopIds(new String[]{"39a5b1d8-c8b2-4b6d-aede-e00e9fefaced","f8b95b90-4d9d-40e7-b5fd-e70c1c50244b"})
                .description("PlB9w4aHDS2KXEDI3VDcDgWRhsG480z5PzqwYAJbfmgZlIg2k4j88nrQzzXKfxry080VSX4RH9k0OKPcCVTuK1P1fHHgcWu1SOht8egeUdAuMg4bgqAzGrehbC7OndP9Z3OHpVoFCzet")
                .discountUpperLimit(4720)
                .displayStartsAt("2024-04-20T00:49:44.000000+09:00")
                .displayEndsAt("2022-07-02T16:14:59.000000+09:00")
                .setDisabled(true)
                .setHidden(true)
                .setPublic(true)
                .code("j8u25e35X")
                .usageLimit(6250)
                .minAmount(3065)
                .storageId("31e75431-f766-4bd7-a254-3d94cc720a60");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
