// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.CreateCoupon;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class CreateCouponTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "8731546a-b728-467b-af65-90afbe4a3f5f",
            "xJuMn163CM5jo6MifXK261Lbb7hNJXbc0fK5oNqC3X9lj624Ot4iYRniFv2RC9oFtsV78gvcPzw1xZGGf0YNBmB5StSUwtYtNAPGue6x4uyMsgZaOx8HPwbIoglTV7",
            "2023-05-01T07:00:16.000000+09:00",
            "2020-07-25T01:06:48.000000+09:00",
            "f2e6c966-d4cc-439a-a9f6-0af6b8ec294c"
        )
                .discountAmount(1845);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "8731546a-b728-467b-af65-90afbe4a3f5f",
            "xJuMn163CM5jo6MifXK261Lbb7hNJXbc0fK5oNqC3X9lj624Ot4iYRniFv2RC9oFtsV78gvcPzw1xZGGf0YNBmB5StSUwtYtNAPGue6x4uyMsgZaOx8HPwbIoglTV7",
            "2023-05-01T07:00:16.000000+09:00",
            "2020-07-25T01:06:48.000000+09:00",
            "f2e6c966-d4cc-439a-a9f6-0af6b8ec294c"
        )
                .discountAmount(9551)
                .storageId("07f62ff7-fd8e-4f26-920a-a69f0cab5db5");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "8731546a-b728-467b-af65-90afbe4a3f5f",
            "xJuMn163CM5jo6MifXK261Lbb7hNJXbc0fK5oNqC3X9lj624Ot4iYRniFv2RC9oFtsV78gvcPzw1xZGGf0YNBmB5StSUwtYtNAPGue6x4uyMsgZaOx8HPwbIoglTV7",
            "2023-05-01T07:00:16.000000+09:00",
            "2020-07-25T01:06:48.000000+09:00",
            "f2e6c966-d4cc-439a-a9f6-0af6b8ec294c"
        )
                .discountAmount(6684)
                .minAmount(5977)
                .storageId("b64609ba-8842-4ab8-86cc-d71b21b9548a");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "8731546a-b728-467b-af65-90afbe4a3f5f",
            "xJuMn163CM5jo6MifXK261Lbb7hNJXbc0fK5oNqC3X9lj624Ot4iYRniFv2RC9oFtsV78gvcPzw1xZGGf0YNBmB5StSUwtYtNAPGue6x4uyMsgZaOx8HPwbIoglTV7",
            "2023-05-01T07:00:16.000000+09:00",
            "2020-07-25T01:06:48.000000+09:00",
            "f2e6c966-d4cc-439a-a9f6-0af6b8ec294c"
        )
                .discountAmount(5181)
                .usageLimit(5486)
                .minAmount(5706)
                .storageId("057b2578-ced8-4ed3-8975-97c6c1de0364");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "8731546a-b728-467b-af65-90afbe4a3f5f",
            "xJuMn163CM5jo6MifXK261Lbb7hNJXbc0fK5oNqC3X9lj624Ot4iYRniFv2RC9oFtsV78gvcPzw1xZGGf0YNBmB5StSUwtYtNAPGue6x4uyMsgZaOx8HPwbIoglTV7",
            "2023-05-01T07:00:16.000000+09:00",
            "2020-07-25T01:06:48.000000+09:00",
            "f2e6c966-d4cc-439a-a9f6-0af6b8ec294c"
        )
                .discountAmount(5259)
                .code("qQ")
                .usageLimit(104)
                .minAmount(8917)
                .storageId("7b6f60be-c643-41bf-9c60-ffc9a36793e6");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "8731546a-b728-467b-af65-90afbe4a3f5f",
            "xJuMn163CM5jo6MifXK261Lbb7hNJXbc0fK5oNqC3X9lj624Ot4iYRniFv2RC9oFtsV78gvcPzw1xZGGf0YNBmB5StSUwtYtNAPGue6x4uyMsgZaOx8HPwbIoglTV7",
            "2023-05-01T07:00:16.000000+09:00",
            "2020-07-25T01:06:48.000000+09:00",
            "f2e6c966-d4cc-439a-a9f6-0af6b8ec294c"
        )
                .discountAmount(4801)
                .setPublic(false)
                .code("ympS1mE6UA")
                .usageLimit(655)
                .minAmount(5434)
                .storageId("33a78ad7-44c6-4c49-ba59-c00ed41c34db");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "8731546a-b728-467b-af65-90afbe4a3f5f",
            "xJuMn163CM5jo6MifXK261Lbb7hNJXbc0fK5oNqC3X9lj624Ot4iYRniFv2RC9oFtsV78gvcPzw1xZGGf0YNBmB5StSUwtYtNAPGue6x4uyMsgZaOx8HPwbIoglTV7",
            "2023-05-01T07:00:16.000000+09:00",
            "2020-07-25T01:06:48.000000+09:00",
            "f2e6c966-d4cc-439a-a9f6-0af6b8ec294c"
        )
                .discountAmount(7823)
                .setHidden(true)
                .setPublic(false)
                .code("eiR")
                .usageLimit(6537)
                .minAmount(4809)
                .storageId("99ffd0b0-b92d-4920-9e01-3f0718061200");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "8731546a-b728-467b-af65-90afbe4a3f5f",
            "xJuMn163CM5jo6MifXK261Lbb7hNJXbc0fK5oNqC3X9lj624Ot4iYRniFv2RC9oFtsV78gvcPzw1xZGGf0YNBmB5StSUwtYtNAPGue6x4uyMsgZaOx8HPwbIoglTV7",
            "2023-05-01T07:00:16.000000+09:00",
            "2020-07-25T01:06:48.000000+09:00",
            "f2e6c966-d4cc-439a-a9f6-0af6b8ec294c"
        )
                .discountAmount(1646)
                .setDisabled(false)
                .setHidden(true)
                .setPublic(true)
                .code("P7exCvm")
                .usageLimit(7668)
                .minAmount(1964)
                .storageId("191aeca7-b822-44af-98df-b95d6643f584");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "8731546a-b728-467b-af65-90afbe4a3f5f",
            "xJuMn163CM5jo6MifXK261Lbb7hNJXbc0fK5oNqC3X9lj624Ot4iYRniFv2RC9oFtsV78gvcPzw1xZGGf0YNBmB5StSUwtYtNAPGue6x4uyMsgZaOx8HPwbIoglTV7",
            "2023-05-01T07:00:16.000000+09:00",
            "2020-07-25T01:06:48.000000+09:00",
            "f2e6c966-d4cc-439a-a9f6-0af6b8ec294c"
        )
                .discountAmount(6784)
                .displayEndsAt("2023-12-01T08:31:22.000000+09:00")
                .setDisabled(true)
                .setHidden(true)
                .setPublic(false)
                .code("Di")
                .usageLimit(1623)
                .minAmount(8854)
                .storageId("a84b5cb3-16cb-493d-bf03-c405762efe54");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test9() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "8731546a-b728-467b-af65-90afbe4a3f5f",
            "xJuMn163CM5jo6MifXK261Lbb7hNJXbc0fK5oNqC3X9lj624Ot4iYRniFv2RC9oFtsV78gvcPzw1xZGGf0YNBmB5StSUwtYtNAPGue6x4uyMsgZaOx8HPwbIoglTV7",
            "2023-05-01T07:00:16.000000+09:00",
            "2020-07-25T01:06:48.000000+09:00",
            "f2e6c966-d4cc-439a-a9f6-0af6b8ec294c"
        )
                .discountAmount(6005)
                .displayStartsAt("2024-08-07T15:40:35.000000+09:00")
                .displayEndsAt("2021-08-26T19:12:13.000000+09:00")
                .setDisabled(false)
                .setHidden(false)
                .setPublic(true)
                .code("Ky2PecqO0v")
                .usageLimit(5984)
                .minAmount(4507)
                .storageId("8471dd02-4217-4e84-aa62-37c95926d7b3");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test10() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "8731546a-b728-467b-af65-90afbe4a3f5f",
            "xJuMn163CM5jo6MifXK261Lbb7hNJXbc0fK5oNqC3X9lj624Ot4iYRniFv2RC9oFtsV78gvcPzw1xZGGf0YNBmB5StSUwtYtNAPGue6x4uyMsgZaOx8HPwbIoglTV7",
            "2023-05-01T07:00:16.000000+09:00",
            "2020-07-25T01:06:48.000000+09:00",
            "f2e6c966-d4cc-439a-a9f6-0af6b8ec294c"
        )
                .discountAmount(1465)
                .discountUpperLimit(2741)
                .displayStartsAt("2020-04-16T00:23:39.000000+09:00")
                .displayEndsAt("2021-09-22T09:51:22.000000+09:00")
                .setDisabled(false)
                .setHidden(false)
                .setPublic(true)
                .code("bv")
                .usageLimit(1318)
                .minAmount(5067)
                .storageId("1e8cd504-3df7-4d52-ad59-2bb880028200");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test11() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "8731546a-b728-467b-af65-90afbe4a3f5f",
            "xJuMn163CM5jo6MifXK261Lbb7hNJXbc0fK5oNqC3X9lj624Ot4iYRniFv2RC9oFtsV78gvcPzw1xZGGf0YNBmB5StSUwtYtNAPGue6x4uyMsgZaOx8HPwbIoglTV7",
            "2023-05-01T07:00:16.000000+09:00",
            "2020-07-25T01:06:48.000000+09:00",
            "f2e6c966-d4cc-439a-a9f6-0af6b8ec294c"
        )
                .discountAmount(3607)
                .description("ZgcBNbTV2l7eKI3YE2p0dsoSkEwNvMyEyHVtzvrL5m8XPEGX1t5YS9KIAAoQSpjT4ZJ9xNjnZKHbloEqtUXdcMXMawXXjz18dKmfSmOaeL2sJm7CBxZHUGqHBwtQEWeToRuhXkT0TMlFV1uwezvkF0JkFaSX1RuNafy8yMFgjvPr4pKApiztyQPPWd8iTovt")
                .discountUpperLimit(4404)
                .displayStartsAt("2020-08-14T15:59:12.000000+09:00")
                .displayEndsAt("2024-02-22T13:18:36.000000+09:00")
                .setDisabled(true)
                .setHidden(true)
                .setPublic(false)
                .code("1epiPlAth5")
                .usageLimit(4882)
                .minAmount(1277)
                .storageId("6bb383bb-9989-47ee-a44f-078835aa8ce5");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test12() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "8731546a-b728-467b-af65-90afbe4a3f5f",
            "xJuMn163CM5jo6MifXK261Lbb7hNJXbc0fK5oNqC3X9lj624Ot4iYRniFv2RC9oFtsV78gvcPzw1xZGGf0YNBmB5StSUwtYtNAPGue6x4uyMsgZaOx8HPwbIoglTV7",
            "2023-05-01T07:00:16.000000+09:00",
            "2020-07-25T01:06:48.000000+09:00",
            "f2e6c966-d4cc-439a-a9f6-0af6b8ec294c"
        )
                .discountAmount(7213)
                .setShopSpecified(false)
                .availableShopIds(new String[]{"2e570bb8-6da0-4153-a8c5-5be0d99e7121"});
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test13() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "8731546a-b728-467b-af65-90afbe4a3f5f",
            "xJuMn163CM5jo6MifXK261Lbb7hNJXbc0fK5oNqC3X9lj624Ot4iYRniFv2RC9oFtsV78gvcPzw1xZGGf0YNBmB5StSUwtYtNAPGue6x4uyMsgZaOx8HPwbIoglTV7",
            "2023-05-01T07:00:16.000000+09:00",
            "2020-07-25T01:06:48.000000+09:00",
            "f2e6c966-d4cc-439a-a9f6-0af6b8ec294c"
        )
                .discountAmount(7170)
                .setShopSpecified(false)
                .availableShopIds(new String[]{"603a6e25-0578-4af1-8834-4b1712e60ee6"})
                .storageId("4dd1dd1d-f15f-4f9c-8efc-17f3eafa6522");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test14() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "8731546a-b728-467b-af65-90afbe4a3f5f",
            "xJuMn163CM5jo6MifXK261Lbb7hNJXbc0fK5oNqC3X9lj624Ot4iYRniFv2RC9oFtsV78gvcPzw1xZGGf0YNBmB5StSUwtYtNAPGue6x4uyMsgZaOx8HPwbIoglTV7",
            "2023-05-01T07:00:16.000000+09:00",
            "2020-07-25T01:06:48.000000+09:00",
            "f2e6c966-d4cc-439a-a9f6-0af6b8ec294c"
        )
                .discountAmount(4631)
                .setShopSpecified(true)
                .availableShopIds(new String[]{"439c74c8-0ef1-4768-b0a9-474e17b79119","e1756356-f840-4c20-a52f-fa5577265c64","1001a6e1-dba4-47d0-9480-44e43b7cd193","42b86e5b-3830-4af4-81e8-cb49e9e2b23d","430acda7-f8e7-4844-afad-04874d78cfcd","2b9637c1-63d6-4c2c-a052-de58f790fac5"})
                .minAmount(7326)
                .storageId("6ee9271e-a8ff-4b6f-b40d-f40c2c216892");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test15() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "8731546a-b728-467b-af65-90afbe4a3f5f",
            "xJuMn163CM5jo6MifXK261Lbb7hNJXbc0fK5oNqC3X9lj624Ot4iYRniFv2RC9oFtsV78gvcPzw1xZGGf0YNBmB5StSUwtYtNAPGue6x4uyMsgZaOx8HPwbIoglTV7",
            "2023-05-01T07:00:16.000000+09:00",
            "2020-07-25T01:06:48.000000+09:00",
            "f2e6c966-d4cc-439a-a9f6-0af6b8ec294c"
        )
                .discountAmount(8780)
                .setShopSpecified(false)
                .availableShopIds(new String[]{"18b4aeff-252e-4b5a-bebf-2b9264d81e5f","0d68fdc8-5d12-493e-bde3-1c84faf7e29f"})
                .usageLimit(1509)
                .minAmount(8762)
                .storageId("3a5f62f1-8575-47fd-8393-0b6fce54b504");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test16() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "8731546a-b728-467b-af65-90afbe4a3f5f",
            "xJuMn163CM5jo6MifXK261Lbb7hNJXbc0fK5oNqC3X9lj624Ot4iYRniFv2RC9oFtsV78gvcPzw1xZGGf0YNBmB5StSUwtYtNAPGue6x4uyMsgZaOx8HPwbIoglTV7",
            "2023-05-01T07:00:16.000000+09:00",
            "2020-07-25T01:06:48.000000+09:00",
            "f2e6c966-d4cc-439a-a9f6-0af6b8ec294c"
        )
                .discountAmount(8059)
                .setShopSpecified(true)
                .availableShopIds(new String[]{"e45579c5-5d97-4052-80b7-73dad5485988","945d9b2d-5170-4c63-85ef-358d05addb55","152ad13b-7464-40d1-84a5-af47c457b00e","0b1da107-753c-43e1-b72b-4bf90cc6e6ba","7f1684f9-0b0e-419d-b0c3-32edd9a3ff3b","bc0dc714-f1d0-4550-a36c-3b7eae920f39","f5864d2b-b488-43ad-b8fb-4b48116adfa5","6ed9be88-8812-4d54-a855-69abba665646","d8c09f36-d32b-465c-84ec-373636c34ce2"})
                .code("ml")
                .usageLimit(6601)
                .minAmount(3724)
                .storageId("b77fe28e-59c4-457d-8f48-2f857ab76507");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test17() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "8731546a-b728-467b-af65-90afbe4a3f5f",
            "xJuMn163CM5jo6MifXK261Lbb7hNJXbc0fK5oNqC3X9lj624Ot4iYRniFv2RC9oFtsV78gvcPzw1xZGGf0YNBmB5StSUwtYtNAPGue6x4uyMsgZaOx8HPwbIoglTV7",
            "2023-05-01T07:00:16.000000+09:00",
            "2020-07-25T01:06:48.000000+09:00",
            "f2e6c966-d4cc-439a-a9f6-0af6b8ec294c"
        )
                .discountAmount(7959)
                .setShopSpecified(true)
                .availableShopIds(new String[]{"6d07bc4b-f131-4ab0-91cc-2d58e102bf3d","4ed6d3d1-b9fa-48ed-a422-9893eba1d556","a0fff644-603b-4d0f-85df-dfa0cea118cb","53f7af20-0532-4c9e-a013-e3bd6b4905ea","b203e17a-0888-49c2-b139-72d21495a22e","6f401546-6534-4f5c-9a34-a9ce42e8c2d9","43e1be22-def3-4501-9fa5-937024ea2f38","6cc1e071-195e-4eda-afd8-f54b291a4a16","2cfe16f0-594a-49fb-9b90-1533c827017f","041070e9-1a52-4185-af45-9891fc49800c"})
                .setPublic(true)
                .code("b1xI2daf9Y")
                .usageLimit(1411)
                .minAmount(4649)
                .storageId("3accfbb7-c1fb-4292-9bcb-7be141de8196");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test18() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "8731546a-b728-467b-af65-90afbe4a3f5f",
            "xJuMn163CM5jo6MifXK261Lbb7hNJXbc0fK5oNqC3X9lj624Ot4iYRniFv2RC9oFtsV78gvcPzw1xZGGf0YNBmB5StSUwtYtNAPGue6x4uyMsgZaOx8HPwbIoglTV7",
            "2023-05-01T07:00:16.000000+09:00",
            "2020-07-25T01:06:48.000000+09:00",
            "f2e6c966-d4cc-439a-a9f6-0af6b8ec294c"
        )
                .discountAmount(6582)
                .setShopSpecified(true)
                .availableShopIds(new String[]{"e6dd1f34-e56c-40a2-8c86-d2cad3c599ba","86c3a97b-8694-43df-9c14-04a30a45e66d"})
                .setHidden(true)
                .setPublic(true)
                .code("5K5")
                .usageLimit(4076)
                .minAmount(8773)
                .storageId("1410ebcd-9f1f-4d12-9df2-6acdee05198c");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test19() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "8731546a-b728-467b-af65-90afbe4a3f5f",
            "xJuMn163CM5jo6MifXK261Lbb7hNJXbc0fK5oNqC3X9lj624Ot4iYRniFv2RC9oFtsV78gvcPzw1xZGGf0YNBmB5StSUwtYtNAPGue6x4uyMsgZaOx8HPwbIoglTV7",
            "2023-05-01T07:00:16.000000+09:00",
            "2020-07-25T01:06:48.000000+09:00",
            "f2e6c966-d4cc-439a-a9f6-0af6b8ec294c"
        )
                .discountAmount(3582)
                .setShopSpecified(true)
                .availableShopIds(new String[]{"ec3ce3b2-0242-485e-8577-179bf53dd424","568e58cd-bd9b-4ee9-acd6-8c7be5c0ae42","2c65c7d4-3d84-4a1a-bfc5-a492fd30deed","ffe8db9f-c395-4f95-9f41-d44f735ba01c","9f66cefa-24a2-4282-a4b7-40d8a30070fc","15ce5640-a3f2-4ea6-83e9-503c6f399c6b","a8e4b97e-8a3c-4288-8c00-9e8d8759234c","e0d9b4f2-2951-4f34-9660-d98d56fa551e","34bd6ae6-015c-4c82-ab05-b4695351cff6"})
                .setDisabled(true)
                .setHidden(false)
                .setPublic(true)
                .code("9ySnrxWPd")
                .usageLimit(9459)
                .minAmount(2578)
                .storageId("04b4b59a-15f1-42ae-a3c9-87475b1b7e8a");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test20() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "8731546a-b728-467b-af65-90afbe4a3f5f",
            "xJuMn163CM5jo6MifXK261Lbb7hNJXbc0fK5oNqC3X9lj624Ot4iYRniFv2RC9oFtsV78gvcPzw1xZGGf0YNBmB5StSUwtYtNAPGue6x4uyMsgZaOx8HPwbIoglTV7",
            "2023-05-01T07:00:16.000000+09:00",
            "2020-07-25T01:06:48.000000+09:00",
            "f2e6c966-d4cc-439a-a9f6-0af6b8ec294c"
        )
                .discountAmount(796)
                .setShopSpecified(false)
                .availableShopIds(new String[]{"52ada43c-1f92-4cbe-9153-f801aa75abcc","05350d9a-d4d3-4b1c-8ba1-4d607512e44f","e37f6d31-ee29-400c-a8dd-dbdeb6a5f352","09a22a16-7261-4166-ab7a-ad92ade3547d","b5b25f74-4aa9-4e17-beb4-72b62af80292","42e31611-7c7e-46b6-9815-5d2facb0d78d"})
                .displayEndsAt("2021-07-11T04:26:45.000000+09:00")
                .setDisabled(true)
                .setHidden(false)
                .setPublic(false)
                .code("mto")
                .usageLimit(2887)
                .minAmount(515)
                .storageId("82a450bf-81a9-4ea4-80f8-336df797e01a");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test21() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "8731546a-b728-467b-af65-90afbe4a3f5f",
            "xJuMn163CM5jo6MifXK261Lbb7hNJXbc0fK5oNqC3X9lj624Ot4iYRniFv2RC9oFtsV78gvcPzw1xZGGf0YNBmB5StSUwtYtNAPGue6x4uyMsgZaOx8HPwbIoglTV7",
            "2023-05-01T07:00:16.000000+09:00",
            "2020-07-25T01:06:48.000000+09:00",
            "f2e6c966-d4cc-439a-a9f6-0af6b8ec294c"
        )
                .discountAmount(1179)
                .setShopSpecified(true)
                .availableShopIds(new String[]{"12b1e84f-28f4-4c2a-8e0d-2cac0c7813cb","d78173f7-7c38-46ec-9fef-2fec334882db","0601fc3e-45e5-44be-9a77-45a8c3a19a92","663b0fc5-ccd8-4fae-8fb8-0e2228cfeb76","c6fa540c-1249-43c7-81e0-f893cdb196db"})
                .displayStartsAt("2023-03-22T22:08:03.000000+09:00")
                .displayEndsAt("2021-04-13T13:12:22.000000+09:00")
                .setDisabled(false)
                .setHidden(false)
                .setPublic(true)
                .code("vhjjeC")
                .usageLimit(3740)
                .minAmount(9824)
                .storageId("a8a39473-06cd-4979-ae7a-f67dc3ecc33a");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test22() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "8731546a-b728-467b-af65-90afbe4a3f5f",
            "xJuMn163CM5jo6MifXK261Lbb7hNJXbc0fK5oNqC3X9lj624Ot4iYRniFv2RC9oFtsV78gvcPzw1xZGGf0YNBmB5StSUwtYtNAPGue6x4uyMsgZaOx8HPwbIoglTV7",
            "2023-05-01T07:00:16.000000+09:00",
            "2020-07-25T01:06:48.000000+09:00",
            "f2e6c966-d4cc-439a-a9f6-0af6b8ec294c"
        )
                .discountAmount(7895)
                .setShopSpecified(false)
                .availableShopIds(new String[]{"9671b3b1-54c5-428d-8b7b-287b9214faf4","2a5dcc90-19a6-4940-8ee8-54617b5a7eae","7227b370-bb62-457f-8802-428076c09eaf","2d8ad77b-70d6-4d4c-9e91-2efc8a72f930","63d8e15f-8b56-4df2-9c44-828e4892ce4f","5fd56721-92b6-4eb2-9b38-fea1a243e6e0","50f382d4-a273-4211-a46a-f5684163e4f2","d7225fc5-43ff-4140-a559-6d78d0761b94","5cf6ebec-f1a4-4f0e-a8a1-4868e4a171bf","98b7f788-f3c9-416a-9ac3-69f1929e00a8"})
                .discountUpperLimit(5903)
                .displayStartsAt("2024-04-08T22:40:45.000000+09:00")
                .displayEndsAt("2020-02-14T16:17:27.000000+09:00")
                .setDisabled(false)
                .setHidden(true)
                .setPublic(true)
                .code("l")
                .usageLimit(4174)
                .minAmount(4878)
                .storageId("431d6d6a-9a3a-4890-ab6d-c65414d55bd0");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test23() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "8731546a-b728-467b-af65-90afbe4a3f5f",
            "xJuMn163CM5jo6MifXK261Lbb7hNJXbc0fK5oNqC3X9lj624Ot4iYRniFv2RC9oFtsV78gvcPzw1xZGGf0YNBmB5StSUwtYtNAPGue6x4uyMsgZaOx8HPwbIoglTV7",
            "2023-05-01T07:00:16.000000+09:00",
            "2020-07-25T01:06:48.000000+09:00",
            "f2e6c966-d4cc-439a-a9f6-0af6b8ec294c"
        )
                .discountAmount(8984)
                .setShopSpecified(false)
                .availableShopIds(new String[]{"0708c175-60e8-4660-8385-b14153f52592","2fe20248-c51a-4312-a1dc-8733700ba9ed","e0f767af-aad1-44a4-adb7-dd9fc4bddb62","a6d60648-3ba1-44c7-8fe7-fd40e4af71c3","42636c68-5c90-4224-8934-d390ef7da6ca","de118d0d-7046-4c65-9994-508eb295b26f","9b50f971-a405-4c0e-88bf-5a59692655f7","873a49af-726f-4802-a6c6-c6f2cbc485bf"})
                .description("z8LYTRjl63Bd1wK3ooBFrXzktBmA6qs2HawqG98m6Cl3DAtzSHfGD88DtYVjV2cHLUfugSAQQYgzaox0TbTs0UCdR4amKeltgDZU5P0ric1qfv4FNj3QVshPkyAUEEm2WJ2HXE7P3opB7d")
                .discountUpperLimit(6053)
                .displayStartsAt("2021-09-23T00:36:59.000000+09:00")
                .displayEndsAt("2021-01-20T18:47:16.000000+09:00")
                .setDisabled(true)
                .setHidden(false)
                .setPublic(false)
                .code("nrq")
                .usageLimit(5015)
                .minAmount(3608)
                .storageId("2de28161-2d66-426c-8ccf-6875aaf13229");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test24() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "8731546a-b728-467b-af65-90afbe4a3f5f",
            "xJuMn163CM5jo6MifXK261Lbb7hNJXbc0fK5oNqC3X9lj624Ot4iYRniFv2RC9oFtsV78gvcPzw1xZGGf0YNBmB5StSUwtYtNAPGue6x4uyMsgZaOx8HPwbIoglTV7",
            "2023-05-01T07:00:16.000000+09:00",
            "2020-07-25T01:06:48.000000+09:00",
            "f2e6c966-d4cc-439a-a9f6-0af6b8ec294c"
        )
                .discountPercentage(5190.0);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test25() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "8731546a-b728-467b-af65-90afbe4a3f5f",
            "xJuMn163CM5jo6MifXK261Lbb7hNJXbc0fK5oNqC3X9lj624Ot4iYRniFv2RC9oFtsV78gvcPzw1xZGGf0YNBmB5StSUwtYtNAPGue6x4uyMsgZaOx8HPwbIoglTV7",
            "2023-05-01T07:00:16.000000+09:00",
            "2020-07-25T01:06:48.000000+09:00",
            "f2e6c966-d4cc-439a-a9f6-0af6b8ec294c"
        )
                .discountPercentage(7452.0)
                .storageId("2db14f98-d726-49e4-a7d9-ae9dec99a3dd");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test26() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "8731546a-b728-467b-af65-90afbe4a3f5f",
            "xJuMn163CM5jo6MifXK261Lbb7hNJXbc0fK5oNqC3X9lj624Ot4iYRniFv2RC9oFtsV78gvcPzw1xZGGf0YNBmB5StSUwtYtNAPGue6x4uyMsgZaOx8HPwbIoglTV7",
            "2023-05-01T07:00:16.000000+09:00",
            "2020-07-25T01:06:48.000000+09:00",
            "f2e6c966-d4cc-439a-a9f6-0af6b8ec294c"
        )
                .discountPercentage(1706.0)
                .minAmount(5963)
                .storageId("3b83ffe0-fc04-4804-bb4c-87158dc17ee6");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test27() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "8731546a-b728-467b-af65-90afbe4a3f5f",
            "xJuMn163CM5jo6MifXK261Lbb7hNJXbc0fK5oNqC3X9lj624Ot4iYRniFv2RC9oFtsV78gvcPzw1xZGGf0YNBmB5StSUwtYtNAPGue6x4uyMsgZaOx8HPwbIoglTV7",
            "2023-05-01T07:00:16.000000+09:00",
            "2020-07-25T01:06:48.000000+09:00",
            "f2e6c966-d4cc-439a-a9f6-0af6b8ec294c"
        )
                .discountPercentage(7224.0)
                .usageLimit(7620)
                .minAmount(9153)
                .storageId("930b9c27-ba88-4e6a-be48-43c5b1b85765");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test28() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "8731546a-b728-467b-af65-90afbe4a3f5f",
            "xJuMn163CM5jo6MifXK261Lbb7hNJXbc0fK5oNqC3X9lj624Ot4iYRniFv2RC9oFtsV78gvcPzw1xZGGf0YNBmB5StSUwtYtNAPGue6x4uyMsgZaOx8HPwbIoglTV7",
            "2023-05-01T07:00:16.000000+09:00",
            "2020-07-25T01:06:48.000000+09:00",
            "f2e6c966-d4cc-439a-a9f6-0af6b8ec294c"
        )
                .discountPercentage(5845.0)
                .code("1jx")
                .usageLimit(7675)
                .minAmount(4724)
                .storageId("af3f0fa8-2edd-4af3-b27a-da7e80aa7e05");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test29() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "8731546a-b728-467b-af65-90afbe4a3f5f",
            "xJuMn163CM5jo6MifXK261Lbb7hNJXbc0fK5oNqC3X9lj624Ot4iYRniFv2RC9oFtsV78gvcPzw1xZGGf0YNBmB5StSUwtYtNAPGue6x4uyMsgZaOx8HPwbIoglTV7",
            "2023-05-01T07:00:16.000000+09:00",
            "2020-07-25T01:06:48.000000+09:00",
            "f2e6c966-d4cc-439a-a9f6-0af6b8ec294c"
        )
                .discountPercentage(6663.0)
                .setPublic(true)
                .code("Q")
                .usageLimit(9936)
                .minAmount(2983)
                .storageId("c04c79cb-10a5-42b5-843a-bdd476c314f0");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test30() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "8731546a-b728-467b-af65-90afbe4a3f5f",
            "xJuMn163CM5jo6MifXK261Lbb7hNJXbc0fK5oNqC3X9lj624Ot4iYRniFv2RC9oFtsV78gvcPzw1xZGGf0YNBmB5StSUwtYtNAPGue6x4uyMsgZaOx8HPwbIoglTV7",
            "2023-05-01T07:00:16.000000+09:00",
            "2020-07-25T01:06:48.000000+09:00",
            "f2e6c966-d4cc-439a-a9f6-0af6b8ec294c"
        )
                .discountPercentage(5548.0)
                .setHidden(true)
                .setPublic(false)
                .code("94zdQwDTvS")
                .usageLimit(4252)
                .minAmount(6724)
                .storageId("0a84d76f-6df8-4fe1-8356-49ec77d06b44");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test31() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "8731546a-b728-467b-af65-90afbe4a3f5f",
            "xJuMn163CM5jo6MifXK261Lbb7hNJXbc0fK5oNqC3X9lj624Ot4iYRniFv2RC9oFtsV78gvcPzw1xZGGf0YNBmB5StSUwtYtNAPGue6x4uyMsgZaOx8HPwbIoglTV7",
            "2023-05-01T07:00:16.000000+09:00",
            "2020-07-25T01:06:48.000000+09:00",
            "f2e6c966-d4cc-439a-a9f6-0af6b8ec294c"
        )
                .discountPercentage(2699.0)
                .setDisabled(false)
                .setHidden(true)
                .setPublic(true)
                .code("6ZR3")
                .usageLimit(7256)
                .minAmount(2600)
                .storageId("6073b02b-d38f-481d-a671-07777c8bc260");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test32() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "8731546a-b728-467b-af65-90afbe4a3f5f",
            "xJuMn163CM5jo6MifXK261Lbb7hNJXbc0fK5oNqC3X9lj624Ot4iYRniFv2RC9oFtsV78gvcPzw1xZGGf0YNBmB5StSUwtYtNAPGue6x4uyMsgZaOx8HPwbIoglTV7",
            "2023-05-01T07:00:16.000000+09:00",
            "2020-07-25T01:06:48.000000+09:00",
            "f2e6c966-d4cc-439a-a9f6-0af6b8ec294c"
        )
                .discountPercentage(8865.0)
                .displayEndsAt("2022-10-31T16:22:53.000000+09:00")
                .setDisabled(true)
                .setHidden(false)
                .setPublic(true)
                .code("cIbUl8Wi")
                .usageLimit(1044)
                .minAmount(9355)
                .storageId("86427c12-4278-43b4-a3de-3c2c530abe65");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test33() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "8731546a-b728-467b-af65-90afbe4a3f5f",
            "xJuMn163CM5jo6MifXK261Lbb7hNJXbc0fK5oNqC3X9lj624Ot4iYRniFv2RC9oFtsV78gvcPzw1xZGGf0YNBmB5StSUwtYtNAPGue6x4uyMsgZaOx8HPwbIoglTV7",
            "2023-05-01T07:00:16.000000+09:00",
            "2020-07-25T01:06:48.000000+09:00",
            "f2e6c966-d4cc-439a-a9f6-0af6b8ec294c"
        )
                .discountPercentage(7839.0)
                .displayStartsAt("2021-06-25T22:03:52.000000+09:00")
                .displayEndsAt("2024-06-06T17:24:30.000000+09:00")
                .setDisabled(true)
                .setHidden(false)
                .setPublic(true)
                .code("1rrM8")
                .usageLimit(9511)
                .minAmount(3246)
                .storageId("028eb834-2b83-4936-86ee-c76259e017b4");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test34() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "8731546a-b728-467b-af65-90afbe4a3f5f",
            "xJuMn163CM5jo6MifXK261Lbb7hNJXbc0fK5oNqC3X9lj624Ot4iYRniFv2RC9oFtsV78gvcPzw1xZGGf0YNBmB5StSUwtYtNAPGue6x4uyMsgZaOx8HPwbIoglTV7",
            "2023-05-01T07:00:16.000000+09:00",
            "2020-07-25T01:06:48.000000+09:00",
            "f2e6c966-d4cc-439a-a9f6-0af6b8ec294c"
        )
                .discountPercentage(2744.0)
                .discountUpperLimit(8964)
                .displayStartsAt("2023-07-08T04:48:06.000000+09:00")
                .displayEndsAt("2020-09-10T04:47:49.000000+09:00")
                .setDisabled(true)
                .setHidden(false)
                .setPublic(false)
                .code("zVyJ")
                .usageLimit(6897)
                .minAmount(659)
                .storageId("28294bbd-66f2-492c-b718-62f471843ce7");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test35() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "8731546a-b728-467b-af65-90afbe4a3f5f",
            "xJuMn163CM5jo6MifXK261Lbb7hNJXbc0fK5oNqC3X9lj624Ot4iYRniFv2RC9oFtsV78gvcPzw1xZGGf0YNBmB5StSUwtYtNAPGue6x4uyMsgZaOx8HPwbIoglTV7",
            "2023-05-01T07:00:16.000000+09:00",
            "2020-07-25T01:06:48.000000+09:00",
            "f2e6c966-d4cc-439a-a9f6-0af6b8ec294c"
        )
                .discountPercentage(8026.0)
                .description("L08FCYp5jFH1rqlG05NGEyKvAgzm92uCf3eE9H5Fs74ANAXSxPyUVJ51ivEGdvqO6tt6JM1kdB3e0iplzGtpfhJ0U4vgPYY2G6OQM5rmGoreTlml3AIfSGkxxNbPRdSHbFruepkmjvvQvZHZpgjFwlFeWwywzT9LWnsda7klcjTF8SaUinVWyXBmPmnjibaOM7zUYFm47nSZW3oBcrmGyrv5rM3Y0VC8X0poRjTn3MItviiTrrrnDqd4")
                .discountUpperLimit(6379)
                .displayStartsAt("2022-10-31T14:05:13.000000+09:00")
                .displayEndsAt("2022-04-22T09:23:23.000000+09:00")
                .setDisabled(true)
                .setHidden(true)
                .setPublic(false)
                .code("SGews")
                .usageLimit(1189)
                .minAmount(6574)
                .storageId("4b373222-45bf-49a2-a4a6-95020983842d");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test36() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "8731546a-b728-467b-af65-90afbe4a3f5f",
            "xJuMn163CM5jo6MifXK261Lbb7hNJXbc0fK5oNqC3X9lj624Ot4iYRniFv2RC9oFtsV78gvcPzw1xZGGf0YNBmB5StSUwtYtNAPGue6x4uyMsgZaOx8HPwbIoglTV7",
            "2023-05-01T07:00:16.000000+09:00",
            "2020-07-25T01:06:48.000000+09:00",
            "f2e6c966-d4cc-439a-a9f6-0af6b8ec294c"
        )
                .discountPercentage(7947.0)
                .setShopSpecified(false)
                .availableShopIds(new String[]{"f4acff76-053b-48a8-8da2-e0cd09bf9ed6","feb34f1c-9f56-4d91-a730-08fd5d0596af"});
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test37() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "8731546a-b728-467b-af65-90afbe4a3f5f",
            "xJuMn163CM5jo6MifXK261Lbb7hNJXbc0fK5oNqC3X9lj624Ot4iYRniFv2RC9oFtsV78gvcPzw1xZGGf0YNBmB5StSUwtYtNAPGue6x4uyMsgZaOx8HPwbIoglTV7",
            "2023-05-01T07:00:16.000000+09:00",
            "2020-07-25T01:06:48.000000+09:00",
            "f2e6c966-d4cc-439a-a9f6-0af6b8ec294c"
        )
                .discountPercentage(252.0)
                .setShopSpecified(false)
                .availableShopIds(new String[]{"9f650524-655a-4c67-b739-c5569e2f9a79","10728abf-74d2-41c9-90bd-c7fa363f190e"})
                .storageId("667654c1-1a6c-42f2-b419-8829735fb9af");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test38() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "8731546a-b728-467b-af65-90afbe4a3f5f",
            "xJuMn163CM5jo6MifXK261Lbb7hNJXbc0fK5oNqC3X9lj624Ot4iYRniFv2RC9oFtsV78gvcPzw1xZGGf0YNBmB5StSUwtYtNAPGue6x4uyMsgZaOx8HPwbIoglTV7",
            "2023-05-01T07:00:16.000000+09:00",
            "2020-07-25T01:06:48.000000+09:00",
            "f2e6c966-d4cc-439a-a9f6-0af6b8ec294c"
        )
                .discountPercentage(3520.0)
                .setShopSpecified(true)
                .availableShopIds(new String[]{"39ba89f2-23cb-419f-abad-259931723ec6","8bc059f9-20f7-4d88-8154-9ba00ca347e2","69bfbbee-0c90-414d-a9fa-2780f4d02a29","5b72994c-de8d-4c43-84d2-e1b91cd9ab8e","2f32e5eb-537a-440f-bacb-476bb5e750bc","f47b30ee-d4ff-46fa-a5f4-3ff4ffe1cfb0","744d264f-02d4-48d4-a7c3-cc28d210ef8c","4560e185-e1fc-4e36-b09e-58be41cb1cf4","85710f77-8e42-4a4a-ad3b-ff9e1a23a3fa","eda2ea79-65dd-4371-901a-e0e340aa0ae9"})
                .minAmount(3363)
                .storageId("5f33692c-5c39-4c95-8b05-b2ee5333bd1b");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test39() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "8731546a-b728-467b-af65-90afbe4a3f5f",
            "xJuMn163CM5jo6MifXK261Lbb7hNJXbc0fK5oNqC3X9lj624Ot4iYRniFv2RC9oFtsV78gvcPzw1xZGGf0YNBmB5StSUwtYtNAPGue6x4uyMsgZaOx8HPwbIoglTV7",
            "2023-05-01T07:00:16.000000+09:00",
            "2020-07-25T01:06:48.000000+09:00",
            "f2e6c966-d4cc-439a-a9f6-0af6b8ec294c"
        )
                .discountPercentage(897.0)
                .setShopSpecified(false)
                .availableShopIds(new String[]{"9d088e4c-ae7e-4e1c-bc94-767699c0b0a2"})
                .usageLimit(2482)
                .minAmount(1149)
                .storageId("da1fbbb0-8fdf-4726-9f0e-b9a1b965f78a");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test40() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "8731546a-b728-467b-af65-90afbe4a3f5f",
            "xJuMn163CM5jo6MifXK261Lbb7hNJXbc0fK5oNqC3X9lj624Ot4iYRniFv2RC9oFtsV78gvcPzw1xZGGf0YNBmB5StSUwtYtNAPGue6x4uyMsgZaOx8HPwbIoglTV7",
            "2023-05-01T07:00:16.000000+09:00",
            "2020-07-25T01:06:48.000000+09:00",
            "f2e6c966-d4cc-439a-a9f6-0af6b8ec294c"
        )
                .discountPercentage(8720.0)
                .setShopSpecified(false)
                .availableShopIds(new String[]{"7e7e34c8-4043-4f38-bb5e-8f855fab9463","073ec85a-2b9f-4bfa-8ae7-959e211bd1c8","06ee8709-8a51-4f59-93b9-cfdba93cc9e4"})
                .code("0")
                .usageLimit(4710)
                .minAmount(8266)
                .storageId("909929f9-aba1-4df1-872c-050d27f2aca5");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test41() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "8731546a-b728-467b-af65-90afbe4a3f5f",
            "xJuMn163CM5jo6MifXK261Lbb7hNJXbc0fK5oNqC3X9lj624Ot4iYRniFv2RC9oFtsV78gvcPzw1xZGGf0YNBmB5StSUwtYtNAPGue6x4uyMsgZaOx8HPwbIoglTV7",
            "2023-05-01T07:00:16.000000+09:00",
            "2020-07-25T01:06:48.000000+09:00",
            "f2e6c966-d4cc-439a-a9f6-0af6b8ec294c"
        )
                .discountPercentage(7467.0)
                .setShopSpecified(true)
                .availableShopIds(new String[]{"f842b90d-8976-4727-a09b-7638e246128f","8ee7d489-468e-4ec9-902a-e34fd92e46d9","63af5e52-0b21-4b62-a7ba-7200c4a73b39"})
                .setPublic(true)
                .code("6Nb1OnTv")
                .usageLimit(1938)
                .minAmount(272)
                .storageId("a1ddee65-bd6a-4d04-b852-ea79ff08c2df");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test42() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "8731546a-b728-467b-af65-90afbe4a3f5f",
            "xJuMn163CM5jo6MifXK261Lbb7hNJXbc0fK5oNqC3X9lj624Ot4iYRniFv2RC9oFtsV78gvcPzw1xZGGf0YNBmB5StSUwtYtNAPGue6x4uyMsgZaOx8HPwbIoglTV7",
            "2023-05-01T07:00:16.000000+09:00",
            "2020-07-25T01:06:48.000000+09:00",
            "f2e6c966-d4cc-439a-a9f6-0af6b8ec294c"
        )
                .discountPercentage(7147.0)
                .setShopSpecified(true)
                .availableShopIds(new String[]{"981240ce-9016-494c-9e64-d7eaff97cd40","6d423111-56ad-4690-bf42-c769a86cdcf4","15655ba6-f915-464d-ab26-a520555dd022","11f5a742-ce37-4fa3-8039-9fd571c1226f","81124ecd-4d78-4d38-bb37-f2184f85ea10","8377eacc-1cc4-4709-ac90-f12f8c1da86d","04dc40aa-4f84-44d3-ba18-8764a70603a0","70bcef4d-25b4-4a30-aa29-14ed1094c902","7527c754-daf4-4a4a-a2e2-ab53630d0ad0"})
                .setHidden(false)
                .setPublic(true)
                .code("OTA9Ogcv")
                .usageLimit(6646)
                .minAmount(3412)
                .storageId("97c9cf39-6137-476b-9dd7-c14a12512dbc");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test43() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "8731546a-b728-467b-af65-90afbe4a3f5f",
            "xJuMn163CM5jo6MifXK261Lbb7hNJXbc0fK5oNqC3X9lj624Ot4iYRniFv2RC9oFtsV78gvcPzw1xZGGf0YNBmB5StSUwtYtNAPGue6x4uyMsgZaOx8HPwbIoglTV7",
            "2023-05-01T07:00:16.000000+09:00",
            "2020-07-25T01:06:48.000000+09:00",
            "f2e6c966-d4cc-439a-a9f6-0af6b8ec294c"
        )
                .discountPercentage(6521.0)
                .setShopSpecified(true)
                .availableShopIds(new String[]{"71e0f5c2-4046-4b04-8cf6-dcc5fc47cc76"})
                .setDisabled(true)
                .setHidden(false)
                .setPublic(true)
                .code("cneT2Rb")
                .usageLimit(159)
                .minAmount(3120)
                .storageId("280e330a-73d2-4a5b-961c-9a25a680d751");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test44() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "8731546a-b728-467b-af65-90afbe4a3f5f",
            "xJuMn163CM5jo6MifXK261Lbb7hNJXbc0fK5oNqC3X9lj624Ot4iYRniFv2RC9oFtsV78gvcPzw1xZGGf0YNBmB5StSUwtYtNAPGue6x4uyMsgZaOx8HPwbIoglTV7",
            "2023-05-01T07:00:16.000000+09:00",
            "2020-07-25T01:06:48.000000+09:00",
            "f2e6c966-d4cc-439a-a9f6-0af6b8ec294c"
        )
                .discountPercentage(2471.0)
                .setShopSpecified(true)
                .availableShopIds(new String[]{"8cece8dc-29c4-4ef9-b529-637b5c631434","88710175-52d6-4eb4-9654-5bf73d735152","248dad5b-8fd6-4c63-8947-45e06641bc15","16d07dd8-8b31-488a-ac84-73e65d406779"})
                .displayEndsAt("2021-03-16T19:07:11.000000+09:00")
                .setDisabled(true)
                .setHidden(false)
                .setPublic(true)
                .code("l")
                .usageLimit(7488)
                .minAmount(8278)
                .storageId("fbac467e-9b87-469b-91ed-b2e08e1eb92a");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test45() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "8731546a-b728-467b-af65-90afbe4a3f5f",
            "xJuMn163CM5jo6MifXK261Lbb7hNJXbc0fK5oNqC3X9lj624Ot4iYRniFv2RC9oFtsV78gvcPzw1xZGGf0YNBmB5StSUwtYtNAPGue6x4uyMsgZaOx8HPwbIoglTV7",
            "2023-05-01T07:00:16.000000+09:00",
            "2020-07-25T01:06:48.000000+09:00",
            "f2e6c966-d4cc-439a-a9f6-0af6b8ec294c"
        )
                .discountPercentage(1516.0)
                .setShopSpecified(true)
                .availableShopIds(new String[]{"b27691ee-1c8b-4288-9ace-d74e9b504239","b3da682b-8998-4a8c-8fe4-0c9fcfb2c6a1"})
                .displayStartsAt("2021-11-05T09:26:33.000000+09:00")
                .displayEndsAt("2021-03-28T15:02:51.000000+09:00")
                .setDisabled(false)
                .setHidden(false)
                .setPublic(true)
                .code("c9o")
                .usageLimit(7940)
                .minAmount(6200)
                .storageId("8bda1ef3-46a2-4906-8b46-ed73727f7c94");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test46() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "8731546a-b728-467b-af65-90afbe4a3f5f",
            "xJuMn163CM5jo6MifXK261Lbb7hNJXbc0fK5oNqC3X9lj624Ot4iYRniFv2RC9oFtsV78gvcPzw1xZGGf0YNBmB5StSUwtYtNAPGue6x4uyMsgZaOx8HPwbIoglTV7",
            "2023-05-01T07:00:16.000000+09:00",
            "2020-07-25T01:06:48.000000+09:00",
            "f2e6c966-d4cc-439a-a9f6-0af6b8ec294c"
        )
                .discountPercentage(9399.0)
                .setShopSpecified(false)
                .availableShopIds(new String[]{"da88e3b3-8f03-4ff0-a04f-332b7b01d163","be615f4a-ba2d-417e-b634-609ba2f26375","ed91d809-ebec-477a-9786-a3db6d4baa76"})
                .discountUpperLimit(9742)
                .displayStartsAt("2021-09-07T07:00:17.000000+09:00")
                .displayEndsAt("2021-04-18T22:49:44.000000+09:00")
                .setDisabled(false)
                .setHidden(true)
                .setPublic(false)
                .code("I")
                .usageLimit(355)
                .minAmount(6018)
                .storageId("cb98448f-6eac-45b0-9c44-fd1d7438594d");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test47() throws ConnectionError, ProcessingError {
        Request request = new CreateCoupon(
            "8731546a-b728-467b-af65-90afbe4a3f5f",
            "xJuMn163CM5jo6MifXK261Lbb7hNJXbc0fK5oNqC3X9lj624Ot4iYRniFv2RC9oFtsV78gvcPzw1xZGGf0YNBmB5StSUwtYtNAPGue6x4uyMsgZaOx8HPwbIoglTV7",
            "2023-05-01T07:00:16.000000+09:00",
            "2020-07-25T01:06:48.000000+09:00",
            "f2e6c966-d4cc-439a-a9f6-0af6b8ec294c"
        )
                .discountPercentage(1629.0)
                .setShopSpecified(true)
                .availableShopIds(new String[]{"a3d2598e-1996-43cf-b20a-a0b80df8d729","8b0afaa2-6302-4354-b783-abe6bb19d4fb","6f358849-b57e-4a82-b6e3-7c1bf78c3da1","e7eb9849-30e6-416c-83d8-2811ac2ef8ec"})
                .description("PtucXCH8BtY3")
                .discountUpperLimit(9171)
                .displayStartsAt("2024-06-05T03:12:56.000000+09:00")
                .displayEndsAt("2021-01-22T16:16:40.000000+09:00")
                .setDisabled(true)
                .setHidden(true)
                .setPublic(false)
                .code("k9")
                .usageLimit(5518)
                .minAmount(2294)
                .storageId("b20fbd48-84ec-478d-a113-b105c0d4eb7f");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
