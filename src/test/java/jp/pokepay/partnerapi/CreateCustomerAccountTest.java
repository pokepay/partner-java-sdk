// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.CreateCustomerAccount;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class CreateCustomerAccountTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new CreateCustomerAccount(
            "c0171ddb-c59a-4872-a4e5-4fb6db665b50"
        );
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new CreateCustomerAccount(
            "c0171ddb-c59a-4872-a4e5-4fb6db665b50"
        )
                .externalId("HMRPETxpTqOm5GLxvE3PHyRxpFQiFyIZ");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new CreateCustomerAccount(
            "c0171ddb-c59a-4872-a4e5-4fb6db665b50"
        )
                .accountName("gFjSCm615t4Q5QH3bweLDXEjZy8esxoeXDc8Qwk6lTaBeIQaeKVoy0TKV")
                .externalId("hUuOyd0sW037pzeyl6Nl7FIi5TRV8bUhD0yGDft");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new CreateCustomerAccount(
            "c0171ddb-c59a-4872-a4e5-4fb6db665b50"
        )
                .userName("8PMj6pmJy8BZmA3hMsnDF4zUKYJmwXLu7Je5UGXiy43axi2ThoTcfY93c6A9geVBDXKLDBHqc9bNCqTb8IsZpB7qrAuWNRRamfGJOUfhWRYQYdigIm7bb6H9jZuMNi0iTPrQ0P9kFWD5DGeREXcpvqNPBFQh93ix8aMjn5")
                .accountName("vHt7CgitbHqPjQKHQzRdTESO6N6X9UEvztu3vqKXySQp3tL5cjpbKAQk1eas0N6OFI5W65sIvrvcXHIIlOTFdPSAwnmeQ2oJsTnFDTPok856vGEpk57W")
                .externalId("vsGLNP0POsB0ZsaGjLwrHSpRjZqQiU4NvIehzJjg7");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
