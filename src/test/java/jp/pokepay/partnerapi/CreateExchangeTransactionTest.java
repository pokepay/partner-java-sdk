// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.CreateExchangeTransaction;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class CreateExchangeTransactionTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new CreateExchangeTransaction(
            "19436b14-7494-4531-ae39-05b8245cd90e",
            "beae6aef-ed0b-4c3e-b4e3-104553ff7438",
            "067b9e79-5c65-448e-ae38-7805c9df2fbb",
            8229.0
        );
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new CreateExchangeTransaction(
            "19436b14-7494-4531-ae39-05b8245cd90e",
            "beae6aef-ed0b-4c3e-b4e3-104553ff7438",
            "067b9e79-5c65-448e-ae38-7805c9df2fbb",
            8229.0
        )
                .requestId("6f90e1e9-9e23-4243-b074-9472a3a15640");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new CreateExchangeTransaction(
            "19436b14-7494-4531-ae39-05b8245cd90e",
            "beae6aef-ed0b-4c3e-b4e3-104553ff7438",
            "067b9e79-5c65-448e-ae38-7805c9df2fbb",
            8229.0
        )
                .description("8X3OQSs9cvMVMzYpfEHHq4AVCPhpFJVl2NE9OohrFLhvABt92YjeNGkeRyZCxDwnyuzPdWfYw482S6oHFsZh9ksnqTSKQYaLtgBF21Mao0iMx72McbAtuQfbwPK5Ol2")
                .requestId("b34b6b1e-ca3e-4e9f-9564-c41b539e882b");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
