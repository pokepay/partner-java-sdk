// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.CreateExchangeTransaction;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class CreateExchangeTransactionTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new CreateExchangeTransaction(
            "ca127c0c-3261-4028-94cc-ccf2d2a52131",
            "c81a0cc2-7c07-4a5f-9e8b-8ecc4a7031d9",
            "db01c22d-6011-4ce4-a38d-62e775c56e73",
            7412
        );
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new CreateExchangeTransaction(
            "ca127c0c-3261-4028-94cc-ccf2d2a52131",
            "c81a0cc2-7c07-4a5f-9e8b-8ecc4a7031d9",
            "db01c22d-6011-4ce4-a38d-62e775c56e73",
            7412
        )
                .requestId("92f5b7ff-f7c2-450e-bc37-458e428585bb");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new CreateExchangeTransaction(
            "ca127c0c-3261-4028-94cc-ccf2d2a52131",
            "c81a0cc2-7c07-4a5f-9e8b-8ecc4a7031d9",
            "db01c22d-6011-4ce4-a38d-62e775c56e73",
            7412
        )
                .description("f3z7z76OYqLZhd2VmnwZ1YQAtf2GPfHYeeJWiJLn1TOWVNqKCYgaN6maSZWJn127yVjYZzSkjksojB4PnV9sBfF1BkHf1A87wLQ9bOIRS2WYI5c")
                .requestId("1ea02ddd-cfa7-4d7b-9c0d-0729624b266b");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
