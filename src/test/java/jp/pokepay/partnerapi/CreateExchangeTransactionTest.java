// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.CreateExchangeTransaction;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class CreateExchangeTransactionTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new CreateExchangeTransaction(
            "a3a3a397-2b0a-4fdf-962b-b65524f446a7",
            "451fb425-d1a1-4343-93da-4b8d5acb45a3",
            "aba0c4bc-8956-4382-a45f-5434bc75ede3",
            3570.0
        );
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new CreateExchangeTransaction(
            "a3a3a397-2b0a-4fdf-962b-b65524f446a7",
            "451fb425-d1a1-4343-93da-4b8d5acb45a3",
            "aba0c4bc-8956-4382-a45f-5434bc75ede3",
            3570.0
        )
                .requestId("4d70948e-0eee-4106-8e8d-bc6649c47b53");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new CreateExchangeTransaction(
            "a3a3a397-2b0a-4fdf-962b-b65524f446a7",
            "451fb425-d1a1-4343-93da-4b8d5acb45a3",
            "aba0c4bc-8956-4382-a45f-5434bc75ede3",
            3570.0
        )
                .description("RiXLw6IXxof4N3bX72yEerLNEKMYsRf9vriYiP8HndtLKgFWIeB413C8zcpa0a0")
                .requestId("2b803869-f1aa-4ebc-b0f5-daad85ca0acc");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
