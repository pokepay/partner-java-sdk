// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.CreateExchangeTransaction;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class CreateExchangeTransactionTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new CreateExchangeTransaction(
            "dc87b8c0-7a5e-44a5-b8b9-ea37c717fba1",
            "dc8335af-2aef-436b-881d-9f853d3db0ad",
            "2870cdec-691b-4cce-8658-e77812f79114",
            9297
        );
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new CreateExchangeTransaction(
            "dc87b8c0-7a5e-44a5-b8b9-ea37c717fba1",
            "dc8335af-2aef-436b-881d-9f853d3db0ad",
            "2870cdec-691b-4cce-8658-e77812f79114",
            9297
        )
                .requestId("23adc51b-dc36-44d3-8b08-e9a6a35264eb");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new CreateExchangeTransaction(
            "dc87b8c0-7a5e-44a5-b8b9-ea37c717fba1",
            "dc8335af-2aef-436b-881d-9f853d3db0ad",
            "2870cdec-691b-4cce-8658-e77812f79114",
            9297
        )
                .description("z6I90mlXbzw9WrRSADd5uMY8Yddkl3oPx3SJnWcDDKBPK2jEccuzIfZ4rcu1NPSUUPlmv2feJQB4bFSyRwBMLFFnB6tqBZkTHRrM")
                .requestId("f8ace9be-4bdd-450f-84d5-78410675e8c0");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
