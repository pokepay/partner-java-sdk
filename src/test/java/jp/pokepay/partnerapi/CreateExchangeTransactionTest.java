// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.CreateExchangeTransaction;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class CreateExchangeTransactionTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new CreateExchangeTransaction(
            "1cf3e74f-7b02-4fe6-b093-4054964a23bc",
            "f984818e-e6f2-4ac9-9ef8-f37f869c0cfb",
            "5a77dc61-c714-483e-a87a-1342b2b9d2c4",
            4645.0
        );
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new CreateExchangeTransaction(
            "1cf3e74f-7b02-4fe6-b093-4054964a23bc",
            "f984818e-e6f2-4ac9-9ef8-f37f869c0cfb",
            "5a77dc61-c714-483e-a87a-1342b2b9d2c4",
            4645.0
        )
                .requestId("30ba6cf8-1c22-42e7-a766-bc30ec3597a7");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new CreateExchangeTransaction(
            "1cf3e74f-7b02-4fe6-b093-4054964a23bc",
            "f984818e-e6f2-4ac9-9ef8-f37f869c0cfb",
            "5a77dc61-c714-483e-a87a-1342b2b9d2c4",
            4645.0
        )
                .description("APjokEVHRFLghiMn2sJjV2bGnLruRc9c27Gpu7iWb08UbIXfazIWogjdxJNEfM7ZphEzx62f8FNzaDel7ro4JT6XY3Y33ek4ahxmsr")
                .requestId("e3a6d8da-6fca-4319-9026-889774578a1c");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
