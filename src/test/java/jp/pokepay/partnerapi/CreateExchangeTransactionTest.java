// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.CreateExchangeTransaction;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class CreateExchangeTransactionTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new CreateExchangeTransaction(
            "5df4745f-a378-4b8d-b939-b630b229ff44",
            "b58a3135-7c9d-4ae7-85ef-09b4a954927e",
            "2e032664-b28d-4e04-8142-f8cc53f477bf",
            4581.0
        );
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new CreateExchangeTransaction(
            "5df4745f-a378-4b8d-b939-b630b229ff44",
            "b58a3135-7c9d-4ae7-85ef-09b4a954927e",
            "2e032664-b28d-4e04-8142-f8cc53f477bf",
            4581.0
        )
                .requestId("a3a3a397-2b0a-4fdf-962b-b65524f446a7");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new CreateExchangeTransaction(
            "5df4745f-a378-4b8d-b939-b630b229ff44",
            "b58a3135-7c9d-4ae7-85ef-09b4a954927e",
            "2e032664-b28d-4e04-8142-f8cc53f477bf",
            4581.0
        )
                .description("CSZVd4cTqnNfSRiXLw6IXxof4N3bX72yEerLNE")
                .requestId("e0b38c4b-a321-4a3e-8d59-9b056d4ad3a8");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
