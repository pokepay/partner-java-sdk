// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.CreateTopupTransaction;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class CreateTopupTransactionTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new CreateTopupTransaction(
            "c3b58030-3c48-4236-ad9e-2fcf47377891",
            "1e906986-73ae-4fdc-b00e-fb66426981ab",
            "95b337ca-81c3-432e-a2b3-860f0dd600ad"
        );
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new CreateTopupTransaction(
            "c3b58030-3c48-4236-ad9e-2fcf47377891",
            "1e906986-73ae-4fdc-b00e-fb66426981ab",
            "95b337ca-81c3-432e-a2b3-860f0dd600ad"
        )
                .requestId("60032666-e7aa-4025-b676-a5df8a6584b5");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new CreateTopupTransaction(
            "c3b58030-3c48-4236-ad9e-2fcf47377891",
            "1e906986-73ae-4fdc-b00e-fb66426981ab",
            "95b337ca-81c3-432e-a2b3-860f0dd600ad"
        )
                .metadata("{\"key\":\"value\"}")
                .requestId("c1388217-7e8a-41d1-bed5-a357d5d8e9c0");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new CreateTopupTransaction(
            "c3b58030-3c48-4236-ad9e-2fcf47377891",
            "1e906986-73ae-4fdc-b00e-fb66426981ab",
            "95b337ca-81c3-432e-a2b3-860f0dd600ad"
        )
                .description("ZxOk6XH9TBh6uEeB7g2QtqPWSmLu")
                .metadata("{\"key\":\"value\"}")
                .requestId("b6531c5a-126c-466c-ae4b-c68e2420d61d");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new CreateTopupTransaction(
            "c3b58030-3c48-4236-ad9e-2fcf47377891",
            "1e906986-73ae-4fdc-b00e-fb66426981ab",
            "95b337ca-81c3-432e-a2b3-860f0dd600ad"
        )
                .pointExpiresAt("2020-08-24T16:00:31.000000+09:00")
                .description("Rb7z6NhbZJj6woffzfgnKIB8GqZHHM0RYDJdciEqwMeg1vsNhx4AP")
                .metadata("{\"key\":\"value\"}")
                .requestId("5b08a9d5-2bb9-4286-9dcb-0bb27d4c047c");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new CreateTopupTransaction(
            "c3b58030-3c48-4236-ad9e-2fcf47377891",
            "1e906986-73ae-4fdc-b00e-fb66426981ab",
            "95b337ca-81c3-432e-a2b3-860f0dd600ad"
        )
                .pointAmount(1825)
                .pointExpiresAt("2024-06-19T07:34:47.000000+09:00")
                .description("hw0su3Go7my8KDtDAJ8ISPbN7HLaozj1bs2GPSyBstJEq")
                .metadata("{\"key\":\"value\"}")
                .requestId("ad94d226-9895-4c09-8d04-fc7e30933154");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new CreateTopupTransaction(
            "c3b58030-3c48-4236-ad9e-2fcf47377891",
            "1e906986-73ae-4fdc-b00e-fb66426981ab",
            "95b337ca-81c3-432e-a2b3-860f0dd600ad"
        )
                .moneyAmount(4424)
                .pointAmount(4989)
                .pointExpiresAt("2024-05-15T10:32:26.000000+09:00")
                .description("iZud95QxNrA4fhEZVzZvVfOze8UhldRwB22CodiapfPqRhjHvcjTgXqQgh6qHLQ2AYqfJkgf2Nflzj4xyTfYVzpOMhilOAbOk4RldYtdI3GAl4Zsvt6hQbcg7cozAAtMh0hnbATu2lI8GJvBemftoRshWpyt1W0IUqY")
                .metadata("{\"key\":\"value\"}")
                .requestId("837c799f-b7b8-45d2-8cef-ecd64c5767b6");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new CreateTopupTransaction(
            "c3b58030-3c48-4236-ad9e-2fcf47377891",
            "1e906986-73ae-4fdc-b00e-fb66426981ab",
            "95b337ca-81c3-432e-a2b3-860f0dd600ad"
        )
                .bearPointShopId("c7091bc8-509d-4871-a0ab-f1b8ea1e6a11")
                .moneyAmount(1447)
                .pointAmount(7776)
                .pointExpiresAt("2021-12-13T02:36:08.000000+09:00")
                .description("LhkrgvWhXLsXqipOnAmLOyPh6Zf9RLEiaekVo8OW4LPB0oRNf8uHQqdl8cx6c4w4KR1llHpiSNJHtzYMuz1hbCmmpLe6vPEZCSWkf2paCHlK7xpO7t8bvc4g8oKEuh6WEcCN3sDhtfgBQ9fU9wvW950AdGyUgg6TuzZPu0U9pb1hfUiwxD1TlI4ZFV7")
                .metadata("{\"key\":\"value\"}")
                .requestId("bc2e54af-baa0-48f7-bf25-6d114c5a0dc3");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
