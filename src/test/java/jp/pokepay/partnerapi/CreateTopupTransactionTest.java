// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.CreateTopupTransaction;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class CreateTopupTransactionTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new CreateTopupTransaction(
            "9a6210a0-6627-4953-9598-192c2b21cba7",
            "821c184c-5638-4bcd-8b6a-77501b38fbe6",
            "207ce132-3e2b-496e-84bf-d929cd8a824a"
        );
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new CreateTopupTransaction(
            "9a6210a0-6627-4953-9598-192c2b21cba7",
            "821c184c-5638-4bcd-8b6a-77501b38fbe6",
            "207ce132-3e2b-496e-84bf-d929cd8a824a"
        )
                .requestId("e83ca629-8e15-47fe-ae5e-74632e2d6855");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new CreateTopupTransaction(
            "9a6210a0-6627-4953-9598-192c2b21cba7",
            "821c184c-5638-4bcd-8b6a-77501b38fbe6",
            "207ce132-3e2b-496e-84bf-d929cd8a824a"
        )
                .metadata("{\"key\":\"value\"}")
                .requestId("0db22c62-4cdc-4c37-b0f2-504bec6fe4f1");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new CreateTopupTransaction(
            "9a6210a0-6627-4953-9598-192c2b21cba7",
            "821c184c-5638-4bcd-8b6a-77501b38fbe6",
            "207ce132-3e2b-496e-84bf-d929cd8a824a"
        )
                .description("WXHoSFTkZLdy8B9WWqNrXVXI1wRTqwqzVsahBGWwps")
                .metadata("{\"key\":\"value\"}")
                .requestId("3143db33-2080-43e9-81d2-82a3029c7e44");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new CreateTopupTransaction(
            "9a6210a0-6627-4953-9598-192c2b21cba7",
            "821c184c-5638-4bcd-8b6a-77501b38fbe6",
            "207ce132-3e2b-496e-84bf-d929cd8a824a"
        )
                .pointExpiresAt("2020-11-09T21:59:46.000000+09:00")
                .description("RZkOOEQFC19Wtss23YjQBhHozeYJjV02y90GWowMI3ASCsApxBJptaJJRDQ6YTYkiFEIISprQ3cmpI6bh8YrVsWGSghDCw1Un7nnaTSFczRArCskatgTSAk3a8TcT02JvhzyAvEG")
                .metadata("{\"key\":\"value\"}")
                .requestId("e0138ed2-8af7-412f-9dc8-881b88e6f0bd");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new CreateTopupTransaction(
            "9a6210a0-6627-4953-9598-192c2b21cba7",
            "821c184c-5638-4bcd-8b6a-77501b38fbe6",
            "207ce132-3e2b-496e-84bf-d929cd8a824a"
        )
                .pointAmount(7601)
                .pointExpiresAt("2023-02-02T19:35:11.000000+09:00")
                .description("qt79bzapcrIrLur4lrAgRY4qmYCDpX8Ny7Ex4zLyYmVuuwR")
                .metadata("{\"key\":\"value\"}")
                .requestId("ab07695a-9aea-49ee-abdd-0b66985c2180");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new CreateTopupTransaction(
            "9a6210a0-6627-4953-9598-192c2b21cba7",
            "821c184c-5638-4bcd-8b6a-77501b38fbe6",
            "207ce132-3e2b-496e-84bf-d929cd8a824a"
        )
                .moneyAmount(3136)
                .pointAmount(1875)
                .pointExpiresAt("2016-02-03T21:10:17.000000+09:00")
                .description("90ILh1FnEv5pCv1ztILSktq1cNxb1w0fAXCRcSE6z5QHSLVITcWyXkWwNeThLpKI1N6RIMY7t0u9TuR54ZsbCHGDImjW34z4jE8W9hh")
                .metadata("{\"key\":\"value\"}")
                .requestId("c0d969eb-4870-4a9f-9917-cad77135a423");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new CreateTopupTransaction(
            "9a6210a0-6627-4953-9598-192c2b21cba7",
            "821c184c-5638-4bcd-8b6a-77501b38fbe6",
            "207ce132-3e2b-496e-84bf-d929cd8a824a"
        )
                .bearPointShopId("d0fbabc5-4b3c-417a-9a4c-56ee1759fc35")
                .moneyAmount(757)
                .pointAmount(1273)
                .pointExpiresAt("2024-03-01T06:03:27.000000+09:00")
                .description("fkqdGOYba42tK1ETZVrimXQx2toEzw7Z1gM6fgx4uEjyIUvTVKqmlOa23scUcryj4GBWTbDzAVeKXVTyNRuvNAUp6ljdawfubjQ03lDRu1dH")
                .metadata("{\"key\":\"value\"}")
                .requestId("63c8b779-e79a-47f0-ad3a-0bc500dbce04");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
