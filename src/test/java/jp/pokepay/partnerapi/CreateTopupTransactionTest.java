// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.CreateTopupTransaction;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class CreateTopupTransactionTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new CreateTopupTransaction(
            "5ce9f3e9-8ac1-4ad2-a344-484afe90b3e0",
            "d12132d4-f487-431c-ab7c-5c521e36d1da",
            "cc1506a9-0f9a-4d2e-bcab-6995d32b835d"
        );
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new CreateTopupTransaction(
            "5ce9f3e9-8ac1-4ad2-a344-484afe90b3e0",
            "d12132d4-f487-431c-ab7c-5c521e36d1da",
            "cc1506a9-0f9a-4d2e-bcab-6995d32b835d"
        )
                .requestId("dd046f8b-f86b-4da9-8f84-5e923cf3651a");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new CreateTopupTransaction(
            "5ce9f3e9-8ac1-4ad2-a344-484afe90b3e0",
            "d12132d4-f487-431c-ab7c-5c521e36d1da",
            "cc1506a9-0f9a-4d2e-bcab-6995d32b835d"
        )
                .metadata("{\"key\":\"value\"}")
                .requestId("ccc4567c-f19c-474f-ae90-89c5cc365ed1");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new CreateTopupTransaction(
            "5ce9f3e9-8ac1-4ad2-a344-484afe90b3e0",
            "d12132d4-f487-431c-ab7c-5c521e36d1da",
            "cc1506a9-0f9a-4d2e-bcab-6995d32b835d"
        )
                .description("FC19Wtss23YjQBhHozeYJjV02y90GWowMI3ASCsApxBJptaJJRDQ6YTYkiFE")
                .metadata("{\"key\":\"value\"}")
                .requestId("c616b05f-b049-471f-8953-798ef5f450bb");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new CreateTopupTransaction(
            "5ce9f3e9-8ac1-4ad2-a344-484afe90b3e0",
            "d12132d4-f487-431c-ab7c-5c521e36d1da",
            "cc1506a9-0f9a-4d2e-bcab-6995d32b835d"
        )
                .pointExpiresAt("2018-04-01T17:51:18.000000+09:00")
                .description("cmpI6bh8YrVsWGSghDCw1Un7nnaTSFczRArCskatgTSAk3a8TcT0")
                .metadata("{\"key\":\"value\"}")
                .requestId("9a3600a5-9232-444a-b668-49bca79330e0");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new CreateTopupTransaction(
            "5ce9f3e9-8ac1-4ad2-a344-484afe90b3e0",
            "d12132d4-f487-431c-ab7c-5c521e36d1da",
            "cc1506a9-0f9a-4d2e-bcab-6995d32b835d"
        )
                .pointAmount(3834)
                .pointExpiresAt("2019-11-13T00:59:25.000000+09:00")
                .description("AvEGRwH1gqt79bzapcrIrLur4lrAgRY4qmYCDpX8Ny7Ex4zLyYmVuuwRZjnfSOf90ILh1FnEv5pCv1ztILSktq1cNxb1w0fAXCRcSE6z5QHSLVITcWyXkWwNeThLpKI")
                .metadata("{\"key\":\"value\"}")
                .requestId("df87b1b1-52ad-490c-a94e-fb97f9f23903");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new CreateTopupTransaction(
            "5ce9f3e9-8ac1-4ad2-a344-484afe90b3e0",
            "d12132d4-f487-431c-ab7c-5c521e36d1da",
            "cc1506a9-0f9a-4d2e-bcab-6995d32b835d"
        )
                .moneyAmount(1821)
                .pointAmount(4150)
                .pointExpiresAt("2023-12-17T21:32:10.000000+09:00")
                .description("MY7t0u9TuR54ZsbCHGDImjW34z4jE8W9hhkpYWEzZLn5uyvbNkfkqdGOYba42tK1ETZVrimXQx")
                .metadata("{\"key\":\"value\"}")
                .requestId("af9fab8c-da10-4232-96bc-2adbca638d74");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new CreateTopupTransaction(
            "5ce9f3e9-8ac1-4ad2-a344-484afe90b3e0",
            "d12132d4-f487-431c-ab7c-5c521e36d1da",
            "cc1506a9-0f9a-4d2e-bcab-6995d32b835d"
        )
                .bearPointShopId("908e14ef-ecc5-4b9f-a4fa-977d9d93abf7")
                .moneyAmount(6839)
                .pointAmount(5535)
                .pointExpiresAt("2019-11-28T07:43:42.000000+09:00")
                .description("M6fgx4uEjyIUvTVKqmlOa23scUcryj4GBWTbDzAVeKXVTyNRuvNAUp6ljdawfubjQ03lDRu1dHypEu4pqRk9KXyywxfAsvQQw8eNXwtPfKAW4UwDxtqXzHNdytk1inQrWiktMK0FHLyL")
                .metadata("{\"key\":\"value\"}")
                .requestId("ee78db99-4b6e-4d1e-b6dc-5dfae699e054");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
