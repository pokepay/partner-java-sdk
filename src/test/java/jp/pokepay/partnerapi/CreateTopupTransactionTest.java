// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.CreateTopupTransaction;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class CreateTopupTransactionTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new CreateTopupTransaction(
            "2a67173e-b942-43a4-ae81-adefee312533",
            "abcb0548-73da-43af-8e9d-cd04c2a3ffe8",
            "7a2c959c-e505-4bee-b9ce-985a2d126a35"
        );
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new CreateTopupTransaction(
            "2a67173e-b942-43a4-ae81-adefee312533",
            "abcb0548-73da-43af-8e9d-cd04c2a3ffe8",
            "7a2c959c-e505-4bee-b9ce-985a2d126a35"
        )
                .requestId("4d01fb19-1f51-459b-bb37-101654160837");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new CreateTopupTransaction(
            "2a67173e-b942-43a4-ae81-adefee312533",
            "abcb0548-73da-43af-8e9d-cd04c2a3ffe8",
            "7a2c959c-e505-4bee-b9ce-985a2d126a35"
        )
                .metadata("{\"key\":\"value\"}")
                .requestId("403a998f-a5d5-40ab-9830-bbb458a827e1");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new CreateTopupTransaction(
            "2a67173e-b942-43a4-ae81-adefee312533",
            "abcb0548-73da-43af-8e9d-cd04c2a3ffe8",
            "7a2c959c-e505-4bee-b9ce-985a2d126a35"
        )
                .description("Ls4hmy4C28WnCRfz2leovb1R7O6QOgboW2zpcaLxa2QZm")
                .metadata("{\"key\":\"value\"}")
                .requestId("662ca6e1-68a2-4d8c-803c-9caa61162d92");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new CreateTopupTransaction(
            "2a67173e-b942-43a4-ae81-adefee312533",
            "abcb0548-73da-43af-8e9d-cd04c2a3ffe8",
            "7a2c959c-e505-4bee-b9ce-985a2d126a35"
        )
                .pointExpiresAt("2022-01-08T11:06:43.000000Z")
                .description("Ro8nyJO9Y3f9djMgk8QSZwJ1udEIb7zDJ6KZTEk0mDRGqd8jGihF2zo2GN3QYDG6CZS1PVe5LZzi2NmWBluHrzflOytNd3ROmH9nMfAHnX3LOs6P3dxLhDjrt4CFESWJnPCLUxGLtrgoghS3pPHE574eeX1ksH4R2MgyW")
                .metadata("{\"key\":\"value\"}")
                .requestId("37d4c4a4-dabf-4ab6-ba31-5fb48e82ab0b");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new CreateTopupTransaction(
            "2a67173e-b942-43a4-ae81-adefee312533",
            "abcb0548-73da-43af-8e9d-cd04c2a3ffe8",
            "7a2c959c-e505-4bee-b9ce-985a2d126a35"
        )
                .pointAmount(313)
                .pointExpiresAt("2022-11-18T02:07:23.000000Z")
                .description("UgzecqWdDVSstoEtPVoykbtA6l7WDayqQLAKXyhWYdlIHfSBBKI1KQl4cK6HLesoN7AsxjaX4bkzoW5SSz")
                .metadata("{\"key\":\"value\"}")
                .requestId("8c6738c6-0a43-44e0-9f4b-4001c0bd316a");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new CreateTopupTransaction(
            "2a67173e-b942-43a4-ae81-adefee312533",
            "abcb0548-73da-43af-8e9d-cd04c2a3ffe8",
            "7a2c959c-e505-4bee-b9ce-985a2d126a35"
        )
                .moneyAmount(6991)
                .pointAmount(6310)
                .pointExpiresAt("2023-02-09T02:28:46.000000Z")
                .description("E829PJZq44v95w5OTBAsM3ixdWcd35lzGg9k8zX5Zx6rdzZ6Kiw60EKpO7FL05A")
                .metadata("{\"key\":\"value\"}")
                .requestId("0c44b9d2-4699-4816-93e9-c052f1bd64c7");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new CreateTopupTransaction(
            "2a67173e-b942-43a4-ae81-adefee312533",
            "abcb0548-73da-43af-8e9d-cd04c2a3ffe8",
            "7a2c959c-e505-4bee-b9ce-985a2d126a35"
        )
                .bearPointShopId("abb1e69f-72b2-4308-95d0-8b5224111850")
                .moneyAmount(2071)
                .pointAmount(2728)
                .pointExpiresAt("2023-09-26T02:50:49.000000Z")
                .description("xcw9rvtxOfCP20hUm1E2Nlz5V1CO5TSFyNtopqI6bCrDgQTiBz8hopleWuv10dzqDmxXKufPIjjJpzSXKPSRMVYMVxniANdM0yy6srRZNC9bYJUFWp4SJDd9Vw0ghvUwHY4GPMgqa4p3N")
                .metadata("{\"key\":\"value\"}")
                .requestId("5a7e4dbb-c600-4914-8218-e0d6ad552736");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
