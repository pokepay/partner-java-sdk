// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.CreateTopupTransaction;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class CreateTopupTransactionTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new CreateTopupTransaction(
            "42832453-f141-4c6b-b3e1-dc8862945538",
            "8e451389-cc1f-44ad-a094-10e0367e4ed4",
            "c11c40e3-3388-49d4-b0a5-92321b7c644a"
        );
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new CreateTopupTransaction(
            "42832453-f141-4c6b-b3e1-dc8862945538",
            "8e451389-cc1f-44ad-a094-10e0367e4ed4",
            "c11c40e3-3388-49d4-b0a5-92321b7c644a"
        )
                .requestId("da8b09f6-d468-49bc-a0fa-7d91c18f1e1b");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new CreateTopupTransaction(
            "42832453-f141-4c6b-b3e1-dc8862945538",
            "8e451389-cc1f-44ad-a094-10e0367e4ed4",
            "c11c40e3-3388-49d4-b0a5-92321b7c644a"
        )
                .metadata("{\"key\":\"value\"}")
                .requestId("05717bf9-52df-427e-818d-dc768396c5c5");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new CreateTopupTransaction(
            "42832453-f141-4c6b-b3e1-dc8862945538",
            "8e451389-cc1f-44ad-a094-10e0367e4ed4",
            "c11c40e3-3388-49d4-b0a5-92321b7c644a"
        )
                .description("RwH1gqt79bzapcrIrLur4lrAgRY4qmYCDpX8Ny7Ex4zLyYmVuuwRZjnfSOf90ILh1FnEv5pCv1ztILSktq1cNxb1w0fAXCRcSE6z5QHSLVITcWyXkWwNeThLpKI1N6RIMY7t0u9TuR54ZsbCHGDImjW34z4jE8W9hhkpYWEzZLn5uyvbNkfkqdGOYba42tK1ETZVrimX")
                .metadata("{\"key\":\"value\"}")
                .requestId("078b1299-12bc-453b-9178-ab8c6490da10");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new CreateTopupTransaction(
            "42832453-f141-4c6b-b3e1-dc8862945538",
            "8e451389-cc1f-44ad-a094-10e0367e4ed4",
            "c11c40e3-3388-49d4-b0a5-92321b7c644a"
        )
                .pointExpiresAt("2020-12-10T16:53:50.000000+09:00")
                .description("oEzw7Z1gM6fgx4uEjyIUvTVKqmlOa23scUcryj4GBWTbDzAVeKXVTyNRuvNAUp6ljdawfubjQ03lDRu1dHypEu4pqRk9KXyywxfAsvQQw8eNXwtPfKAW4")
                .metadata("{\"key\":\"value\"}")
                .requestId("d092ed7f-5e91-4b08-95f7-e4c4b7230678");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new CreateTopupTransaction(
            "42832453-f141-4c6b-b3e1-dc8862945538",
            "8e451389-cc1f-44ad-a094-10e0367e4ed4",
            "c11c40e3-3388-49d4-b0a5-92321b7c644a"
        )
                .pointAmount(1928)
                .pointExpiresAt("2022-03-08T23:51:24.000000+09:00")
                .description("qXzHNdytk1inQrWiktMK0FHLyLnvzTdFf0Y1JODoBhEEJFs7RURiJHf6mnglgKA3t551AWYy2EKxgIvudVQKM3ivlyVYA6fe68jtm2G7nC3SW8MPeFKTYT7eEYLwvH")
                .metadata("{\"key\":\"value\"}")
                .requestId("bc6b75de-2451-43aa-864b-c9c43d6da9c9");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new CreateTopupTransaction(
            "42832453-f141-4c6b-b3e1-dc8862945538",
            "8e451389-cc1f-44ad-a094-10e0367e4ed4",
            "c11c40e3-3388-49d4-b0a5-92321b7c644a"
        )
                .moneyAmount(8461)
                .pointAmount(1041)
                .pointExpiresAt("2023-08-17T05:54:28.000000+09:00")
                .description("0W8uMWRziTXMumFeaEHdh8PePoMZwnAEmuUL6pb761IWS7zT3jmF3XMzgKDKO5o6UqQsbMF41dYUnemzRdROKbG")
                .metadata("{\"key\":\"value\"}")
                .requestId("05c5bba4-2b93-4bdd-b0e8-a43778bf2bf2");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new CreateTopupTransaction(
            "42832453-f141-4c6b-b3e1-dc8862945538",
            "8e451389-cc1f-44ad-a094-10e0367e4ed4",
            "c11c40e3-3388-49d4-b0a5-92321b7c644a"
        )
                .bearPointShopId("4cc69183-1bc4-4972-b5ed-9494c3de1edd")
                .moneyAmount(9678)
                .pointAmount(2036)
                .pointExpiresAt("2017-11-30T11:46:06.000000+09:00")
                .description("3vZwFKRF7w7plclcWB9bNRwQ0LABzLS5AginlSJbgCOpN21EzYv53e8C68gL6nh3hboA1VaXQqYz47H8v5OYX2Bb7kgjpYtpWxkJ26TN1VktFjJy7P4SbKkoz4u4vqNtkYjPXUyJ1V0r5CHRNT2ecfLdc33OSn94wpSC")
                .metadata("{\"key\":\"value\"}")
                .requestId("8841ac99-ad42-4194-9047-d489d5259aee");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
