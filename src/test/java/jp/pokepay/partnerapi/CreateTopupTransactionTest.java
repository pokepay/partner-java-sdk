// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.CreateTopupTransaction;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class CreateTopupTransactionTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new CreateTopupTransaction(
            "dde850af-e879-4498-b23c-0bbf85f984ce",
            "7ee91edb-4684-4383-a29a-1e36f3a78d63",
            "401c85b3-c75f-4e5a-bc83-df9c4009fade"
        );
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new CreateTopupTransaction(
            "dde850af-e879-4498-b23c-0bbf85f984ce",
            "7ee91edb-4684-4383-a29a-1e36f3a78d63",
            "401c85b3-c75f-4e5a-bc83-df9c4009fade"
        )
                .requestId("d671747e-85df-4ccf-b5c1-e39056dfd85f");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new CreateTopupTransaction(
            "dde850af-e879-4498-b23c-0bbf85f984ce",
            "7ee91edb-4684-4383-a29a-1e36f3a78d63",
            "401c85b3-c75f-4e5a-bc83-df9c4009fade"
        )
                .metadata("{\"key\":\"value\"}")
                .requestId("6139e73e-7c9c-4e36-a987-ec959c56d310");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new CreateTopupTransaction(
            "dde850af-e879-4498-b23c-0bbf85f984ce",
            "7ee91edb-4684-4383-a29a-1e36f3a78d63",
            "401c85b3-c75f-4e5a-bc83-df9c4009fade"
        )
                .description("2zqgTApznRkWxs0RSKV0TflVoHrWn6Li1hK6WDC9LMDpIuHxQJCwjUymnN4esNQuxeHf86izA594XpFT7UTJJ2BB5YOu5uK3r9vlZ89reNtOxXlOpSpu3O3mT1crn9PuMqinoN2m0QF4ogGNI7oetGUz09xWHsOggUnlL8XHRMNwcV1rLC6kykwn0BycoegYW")
                .metadata("{\"key\":\"value\"}")
                .requestId("c7e0ea73-a1b6-4ff2-9de8-d97dd8b055e6");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new CreateTopupTransaction(
            "dde850af-e879-4498-b23c-0bbf85f984ce",
            "7ee91edb-4684-4383-a29a-1e36f3a78d63",
            "401c85b3-c75f-4e5a-bc83-df9c4009fade"
        )
                .pointExpiresAt("2022-11-22T05:35:23.000000+09:00")
                .description("LAVMFBA8bLgwpOU23R7PEPlgK4dQIbkzvwI9zdSyzXghEdcMTYpNfel2RWZA608gGivn0bVepQTsTzs1QHy5Z1G15BVn4ad66afNyxvM1kFtSiwdQU0VyrYB7h0SlkV7Tb3UAPrLBZf5CHLDWdz3fNL")
                .metadata("{\"key\":\"value\"}")
                .requestId("083ae057-9730-47cd-b4ef-4d3bf3c02828");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new CreateTopupTransaction(
            "dde850af-e879-4498-b23c-0bbf85f984ce",
            "7ee91edb-4684-4383-a29a-1e36f3a78d63",
            "401c85b3-c75f-4e5a-bc83-df9c4009fade"
        )
                .pointAmount(2211)
                .pointExpiresAt("2022-06-18T23:27:17.000000+09:00")
                .description("sx2BMtWM7PKoyT")
                .metadata("{\"key\":\"value\"}")
                .requestId("acdaecfb-c74c-4961-939d-6164e0842e24");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new CreateTopupTransaction(
            "dde850af-e879-4498-b23c-0bbf85f984ce",
            "7ee91edb-4684-4383-a29a-1e36f3a78d63",
            "401c85b3-c75f-4e5a-bc83-df9c4009fade"
        )
                .moneyAmount(5163)
                .pointAmount(3718)
                .pointExpiresAt("2022-07-17T18:50:47.000000+09:00")
                .description("KAqauZnhiYiOAKjOWNO9Zj5UFGYWin17jcDvTChWDojxr8ZdLc7LWtbPYKt0Vj7BbqPdzN9Fa6teIHfXiPYCpScQgZZOZLUgVyAxBs1rH5AlsewSUkzhk")
                .metadata("{\"key\":\"value\"}")
                .requestId("b4954e7b-a21b-408e-95f8-59a3a91584c3");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new CreateTopupTransaction(
            "dde850af-e879-4498-b23c-0bbf85f984ce",
            "7ee91edb-4684-4383-a29a-1e36f3a78d63",
            "401c85b3-c75f-4e5a-bc83-df9c4009fade"
        )
                .bearPointShopId("486ddcc2-a117-4ea4-9d10-00c06a994136")
                .moneyAmount(3492)
                .pointAmount(5823)
                .pointExpiresAt("2022-03-31T18:41:39.000000+09:00")
                .description("1qILpesu5E7g6cWjUwK5aLXAH1O8jOB918ihN5wVkNo9BwJ8nedmj1UFyUx3uwQizBXtksXSY6G")
                .metadata("{\"key\":\"value\"}")
                .requestId("57693940-a0c0-4ad9-8cdc-aeed58757083");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
