// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.CreateTopupTransaction;
import jp.pokepay.partnerapi.request.Request;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class CreateTopupTransactionTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new CreateTopupTransaction(
            "c62b3f72-e622-4526-802d-562f5b0a0a85",
            "a88b71c6-f86d-4c0f-a554-1b9d0557d5d0",
            "e6b423c4-7d74-4d73-b336-561495ea38aa"
        );
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new CreateTopupTransaction(
            "c62b3f72-e622-4526-802d-562f5b0a0a85",
            "a88b71c6-f86d-4c0f-a554-1b9d0557d5d0",
            "e6b423c4-7d74-4d73-b336-561495ea38aa"
        )
                .description("rSb74FVrm");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new CreateTopupTransaction(
            "c62b3f72-e622-4526-802d-562f5b0a0a85",
            "a88b71c6-f86d-4c0f-a554-1b9d0557d5d0",
            "e6b423c4-7d74-4d73-b336-561495ea38aa"
        )
                .pointAmount(6221)
                .description("6gx");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new CreateTopupTransaction(
            "c62b3f72-e622-4526-802d-562f5b0a0a85",
            "a88b71c6-f86d-4c0f-a554-1b9d0557d5d0",
            "e6b423c4-7d74-4d73-b336-561495ea38aa"
        )
                .moneyAmount(6570)
                .pointAmount(2609)
                .description("C7zvPgQpHcseeNGIyyofbxrgoFvDS3ToG5IY6p4ipDEWwaUu4d0lENjOTWRNTACUMYJvf");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new CreateTopupTransaction(
            "c62b3f72-e622-4526-802d-562f5b0a0a85",
            "a88b71c6-f86d-4c0f-a554-1b9d0557d5d0",
            "e6b423c4-7d74-4d73-b336-561495ea38aa"
        )
                .bearPointShopId("eb8770c3-6a0f-4b24-9184-c6bcd5d4efcd")
                .moneyAmount(3193)
                .pointAmount(7115)
                .description("ngUDAk15yrjGUppZO7Wz5xJloWUE8sRN1nT4CEpLDB9tRekshytZtgWoKAEU04MM0ayJ4A9Di");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
