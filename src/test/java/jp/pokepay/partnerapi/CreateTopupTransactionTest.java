// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.CreateTopupTransaction;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class CreateTopupTransactionTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new CreateTopupTransaction(
            "1cda30be-9538-453d-9ad7-dae9f4a8850f",
            "53df9749-f4d7-4203-bd4e-994180e03dbd",
            "dc747021-f924-4431-8ce2-bc06d91663ec"
        );
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new CreateTopupTransaction(
            "1cda30be-9538-453d-9ad7-dae9f4a8850f",
            "53df9749-f4d7-4203-bd4e-994180e03dbd",
            "dc747021-f924-4431-8ce2-bc06d91663ec"
        )
                .requestId("1bd18776-f212-40cb-89c1-bb5fca747fba");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new CreateTopupTransaction(
            "1cda30be-9538-453d-9ad7-dae9f4a8850f",
            "53df9749-f4d7-4203-bd4e-994180e03dbd",
            "dc747021-f924-4431-8ce2-bc06d91663ec"
        )
                .metadata("{\"key\":\"value\"}")
                .requestId("72b9cd03-f097-48d8-901c-9b1b6bd0f3cc");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new CreateTopupTransaction(
            "1cda30be-9538-453d-9ad7-dae9f4a8850f",
            "53df9749-f4d7-4203-bd4e-994180e03dbd",
            "dc747021-f924-4431-8ce2-bc06d91663ec"
        )
                .description("4tA1CXSX78vi5rb4PVQtgyBBdpiBx8nASdPHPJ5ohCNZt8f72dH")
                .metadata("{\"key\":\"value\"}")
                .requestId("c202dab7-c8b3-4b85-b45a-ea74600c2323");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new CreateTopupTransaction(
            "1cda30be-9538-453d-9ad7-dae9f4a8850f",
            "53df9749-f4d7-4203-bd4e-994180e03dbd",
            "dc747021-f924-4431-8ce2-bc06d91663ec"
        )
                .pointExpiresAt("2023-04-02T21:22:51.000000+09:00")
                .description("WlaO6fg1xaLA1XIsrI5GeGr7vhOWJBJXaktik6FIRclu0fU9MOiwRQCUhrlhXnivOxJ2S3AUwRWRWzj9MPPyrnfvSyKvwElFNzSfI3oLiznzrxuy56hfIKpDYrLhQA789qnUdfWWtuhrbH3RzG6ZejtCI8EGKDWYHeqZu8EJrxqsd9ztsS4Xvnt8eSO")
                .metadata("{\"key\":\"value\"}")
                .requestId("f202b8d6-2af6-42ef-aca3-0c2c52018a42");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new CreateTopupTransaction(
            "1cda30be-9538-453d-9ad7-dae9f4a8850f",
            "53df9749-f4d7-4203-bd4e-994180e03dbd",
            "dc747021-f924-4431-8ce2-bc06d91663ec"
        )
                .pointAmount(6257)
                .pointExpiresAt("2016-07-15T20:41:08.000000+09:00")
                .description("2SVwd0zfE3Nw0irC0z4h04hZ3QWoA5OtYVqa6n1YUp3blHOReDMk")
                .metadata("{\"key\":\"value\"}")
                .requestId("ef3fcd9f-5ba3-46a7-93eb-21b3358c732a");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new CreateTopupTransaction(
            "1cda30be-9538-453d-9ad7-dae9f4a8850f",
            "53df9749-f4d7-4203-bd4e-994180e03dbd",
            "dc747021-f924-4431-8ce2-bc06d91663ec"
        )
                .moneyAmount(3154)
                .pointAmount(4659)
                .pointExpiresAt("2024-05-29T06:04:34.000000+09:00")
                .description("Xrwmp1ZPUvyykh0xC19W5ZYqK7DWbefktHbEhtQ1z0iNUTEKxDf")
                .metadata("{\"key\":\"value\"}")
                .requestId("b4e85eeb-6f24-4469-9548-43185f0a4459");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new CreateTopupTransaction(
            "1cda30be-9538-453d-9ad7-dae9f4a8850f",
            "53df9749-f4d7-4203-bd4e-994180e03dbd",
            "dc747021-f924-4431-8ce2-bc06d91663ec"
        )
                .bearPointShopId("0690af52-40ac-4d0b-80a5-b997edd7dd2f")
                .moneyAmount(2195)
                .pointAmount(2884)
                .pointExpiresAt("2023-07-05T09:24:29.000000+09:00")
                .description("BO3AnjeNKql")
                .metadata("{\"key\":\"value\"}")
                .requestId("9900f6e2-e208-4d59-a0d6-8fe885387169");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
