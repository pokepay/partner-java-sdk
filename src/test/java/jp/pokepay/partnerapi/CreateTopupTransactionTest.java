// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.CreateTopupTransaction;
import jp.pokepay.partnerapi.request.Request;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class CreateTopupTransactionTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new CreateTopupTransaction(
            "714ae247-b68c-4542-93db-005699bd57cc",
            "b23cdd26-76f0-468a-8b32-ccd657594e6d",
            "d7c06467-3e1d-45a0-be33-87e5f9b30da8"
        );
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new CreateTopupTransaction(
            "714ae247-b68c-4542-93db-005699bd57cc",
            "b23cdd26-76f0-468a-8b32-ccd657594e6d",
            "d7c06467-3e1d-45a0-be33-87e5f9b30da8"
        )
                .requestId("12873ff0-f0a7-4f8d-b2ad-25cf642cb155");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new CreateTopupTransaction(
            "714ae247-b68c-4542-93db-005699bd57cc",
            "b23cdd26-76f0-468a-8b32-ccd657594e6d",
            "d7c06467-3e1d-45a0-be33-87e5f9b30da8"
        )
                .description("7ktZcH")
                .requestId("cc474057-b105-4273-8bda-3c8a04992c7f");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new CreateTopupTransaction(
            "714ae247-b68c-4542-93db-005699bd57cc",
            "b23cdd26-76f0-468a-8b32-ccd657594e6d",
            "d7c06467-3e1d-45a0-be33-87e5f9b30da8"
        )
                .pointExpiresAt("2024-10-26T20:25:48.000000Z")
                .description("EtZX9770nlSO8H2DCl6imPJgn2XjYsZUpQvLebh65Hdtxmvs4SwxRthVVayjO1th3s3e6fayZ2E32vm3RMvvWttu1PJb3d04IfskzbRh2KXDkJqy1")
                .requestId("7508f855-4d79-48d0-9202-02e1456064c7");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new CreateTopupTransaction(
            "714ae247-b68c-4542-93db-005699bd57cc",
            "b23cdd26-76f0-468a-8b32-ccd657594e6d",
            "d7c06467-3e1d-45a0-be33-87e5f9b30da8"
        )
                .pointAmount(3784)
                .pointExpiresAt("2021-01-16T06:18:32.000000Z")
                .description("kyMSdmemZcovbEUc9TiM3DTSa7pJlo8JS6mIVfCl8O6XTpGUPEJOaNnRanlNyuKHWuXq7zEzVgAAIhzrVmMQ7zQf4j1Xl")
                .requestId("4f57728f-a26e-4378-b631-80dc19de3382");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new CreateTopupTransaction(
            "714ae247-b68c-4542-93db-005699bd57cc",
            "b23cdd26-76f0-468a-8b32-ccd657594e6d",
            "d7c06467-3e1d-45a0-be33-87e5f9b30da8"
        )
                .moneyAmount(6761)
                .pointAmount(1028)
                .pointExpiresAt("2025-04-10T11:20:59.000000Z")
                .description("BdwXQXBx9CjvSgZke3VuPIIBeUSxLQqoj9SXP9EgDJcoagTJNb42JvVKNsj3zA7Dw0uibv6O0nFaLFwVLIZnC6rDyYuuG1XnlSIVaCTCoBzc3PolsdbrxUTbpTkQr9CA458OFUiC0xNjD1g6ausYOsWjmgSVes0LvRpIOKLgAa2m76DTKceEBbKe1QbzWrTYv")
                .requestId("686f83c8-1ae9-4867-a4c2-0116c175ee8a");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new CreateTopupTransaction(
            "714ae247-b68c-4542-93db-005699bd57cc",
            "b23cdd26-76f0-468a-8b32-ccd657594e6d",
            "d7c06467-3e1d-45a0-be33-87e5f9b30da8"
        )
                .bearPointShopId("ccd1df59-d82b-4776-914b-b45b160fddd6")
                .moneyAmount(137)
                .pointAmount(1422)
                .pointExpiresAt("2020-02-19T12:22:44.000000Z")
                .description("VdsHD1HarFGRZ0Q28LywVGUz2sIRxtNbAYMzH")
                .requestId("0d5219fc-8b40-4265-901f-51ecc6802c77");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
