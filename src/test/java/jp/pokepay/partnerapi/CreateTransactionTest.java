// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.CreateTransaction;
import jp.pokepay.partnerapi.request.Request;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class CreateTransactionTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new CreateTransaction(
            "7c060d92-ea09-40f8-9126-4b667e847f87",
            "28293aba-96e0-469c-8ff1-264e6c4457a5",
            "a2162487-9e95-413b-8b89-ddc73ed91754"
        );
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new CreateTransaction(
            "7c060d92-ea09-40f8-9126-4b667e847f87",
            "28293aba-96e0-469c-8ff1-264e6c4457a5",
            "a2162487-9e95-413b-8b89-ddc73ed91754"
        )
                .description("hBSpAIG2GVjRLCF7S26ypTzMExe5LQXN3tfMMeaiT");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new CreateTransaction(
            "7c060d92-ea09-40f8-9126-4b667e847f87",
            "28293aba-96e0-469c-8ff1-264e6c4457a5",
            "a2162487-9e95-413b-8b89-ddc73ed91754"
        )
                .pointExpiresAt("2020-04-14T04:08:25.000000Z")
                .description("RlgPRLO6iu4xB9p9hHVjuFskSUixLpvflY8M");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new CreateTransaction(
            "7c060d92-ea09-40f8-9126-4b667e847f87",
            "28293aba-96e0-469c-8ff1-264e6c4457a5",
            "a2162487-9e95-413b-8b89-ddc73ed91754"
        )
                .pointAmount(3034)
                .pointExpiresAt("2017-03-31T09:15:26.000000Z")
                .description("vlfPZ9XRs2DjUex8FZcru468uiy2IBQsK");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new CreateTransaction(
            "7c060d92-ea09-40f8-9126-4b667e847f87",
            "28293aba-96e0-469c-8ff1-264e6c4457a5",
            "a2162487-9e95-413b-8b89-ddc73ed91754"
        )
                .moneyAmount(7650)
                .pointAmount(894)
                .pointExpiresAt("2021-08-05T08:01:01.000000Z")
                .description("UonyUv3nTPZ701h3V5Qywi2pn04JUSx27eVHz2wOx9gOffBCzdPD5lY5ruzs73QnlHzw");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
