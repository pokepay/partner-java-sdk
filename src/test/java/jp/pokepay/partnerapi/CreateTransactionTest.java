// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.CreateTransaction;
import jp.pokepay.partnerapi.request.Request;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class CreateTransactionTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new CreateTransaction(
            "458d28d0-71c8-4fca-9fe0-76415e985d0e",
            "6268645f-e123-4f1a-95a8-96ab10308e82",
            "2c58cf1e-1c1f-47a3-84dd-63654f81a22f"
        );
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new CreateTransaction(
            "458d28d0-71c8-4fca-9fe0-76415e985d0e",
            "6268645f-e123-4f1a-95a8-96ab10308e82",
            "2c58cf1e-1c1f-47a3-84dd-63654f81a22f"
        )
                .description("35xXINLlO4Zv5k8QSkKEanfzbugRA6tx0mWbn2py6w2j");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new CreateTransaction(
            "458d28d0-71c8-4fca-9fe0-76415e985d0e",
            "6268645f-e123-4f1a-95a8-96ab10308e82",
            "2c58cf1e-1c1f-47a3-84dd-63654f81a22f"
        )
                .pointAmount(3794)
                .description("5PLq2Fh3hGEfpZnCQYFpHDavYrSFGrbPwEeC1Wm2BmepnFpXJCf0Ck7D");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new CreateTransaction(
            "458d28d0-71c8-4fca-9fe0-76415e985d0e",
            "6268645f-e123-4f1a-95a8-96ab10308e82",
            "2c58cf1e-1c1f-47a3-84dd-63654f81a22f"
        )
                .moneyAmount(5382)
                .pointAmount(577)
                .description("fD");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
