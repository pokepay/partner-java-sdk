// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.CreateTransferTransaction;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class CreateTransferTransactionTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new CreateTransferTransaction(
            "ee454aad-c1e4-49e3-94fa-4ea7840dea6d",
            "76e83e40-e436-416a-adfe-205c0ef69a52",
            "d1adeca5-aec9-4bdd-9b5a-c12e4b470db5",
            6218.0
        );
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new CreateTransferTransaction(
            "ee454aad-c1e4-49e3-94fa-4ea7840dea6d",
            "76e83e40-e436-416a-adfe-205c0ef69a52",
            "d1adeca5-aec9-4bdd-9b5a-c12e4b470db5",
            6218.0
        )
                .requestId("14e817ba-dc1f-4440-b0a7-45e980f8cdf4");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new CreateTransferTransaction(
            "ee454aad-c1e4-49e3-94fa-4ea7840dea6d",
            "76e83e40-e436-416a-adfe-205c0ef69a52",
            "d1adeca5-aec9-4bdd-9b5a-c12e4b470db5",
            6218.0
        )
                .description("NrKckZpqDcewiGOwsQRPHASqzstXD2KouGbm04Itff6e2Qy630TjABRz58KDZoww5RrbuLXKpPjDIjw6WCVRjPMVzUEu9KX0QohRzfJePFkBJr6PnZIiqUCiCPrkwE9DjIUXw3JdPewXToe0rrbjos2nUDJo9bMCjkfpB9w7BCqgWE4uuU7pfStX8Hn8NEj71wtjZ")
                .requestId("99789ece-7695-48c4-af80-12ba0c63bb58");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new CreateTransferTransaction(
            "ee454aad-c1e4-49e3-94fa-4ea7840dea6d",
            "76e83e40-e436-416a-adfe-205c0ef69a52",
            "d1adeca5-aec9-4bdd-9b5a-c12e4b470db5",
            6218.0
        )
                .metadata("{\"key\":\"value\"}")
                .description("hVD7SEjGzNzQiKvPjMFSTTPGW7Pl6RiTiY2AKa7FT6MFMTFE1CU7swLIUOl15At6OCVKI0Nv9kp3EBcAbznnQ3a4TbLNcZ5HL3u7eerI55n7s5DKLisXHaSIedZ0Oi")
                .requestId("0abfdc9f-4808-4b1d-b11c-f3554163d257");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
