// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.CreateTransferTransaction;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class CreateTransferTransactionTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new CreateTransferTransaction(
            "319c15b5-c572-474e-95d4-245287ba0a83",
            "452884a0-c5e9-4452-9320-329e86d1b283",
            "a8e0c586-6067-4a6c-b7c2-5111dea7dfb4",
            6022.0
        );
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new CreateTransferTransaction(
            "319c15b5-c572-474e-95d4-245287ba0a83",
            "452884a0-c5e9-4452-9320-329e86d1b283",
            "a8e0c586-6067-4a6c-b7c2-5111dea7dfb4",
            6022.0
        )
                .requestId("843ccf5d-7cb3-43ca-8c0a-5ed4afbc801e");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new CreateTransferTransaction(
            "319c15b5-c572-474e-95d4-245287ba0a83",
            "452884a0-c5e9-4452-9320-329e86d1b283",
            "a8e0c586-6067-4a6c-b7c2-5111dea7dfb4",
            6022.0
        )
                .description("dW4Ru5jrzSsISNjY04hR5XLp1fd3OYU9jCluogyvVwdlvGpoSp1I638MEpvPd2t8Tiny1vMZBCkugUXXH")
                .requestId("ba224709-70b3-4f23-99c2-f81ac91df78f");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new CreateTransferTransaction(
            "319c15b5-c572-474e-95d4-245287ba0a83",
            "452884a0-c5e9-4452-9320-329e86d1b283",
            "a8e0c586-6067-4a6c-b7c2-5111dea7dfb4",
            6022.0
        )
                .metadata("{\"key\":\"value\"}")
                .description("TO2n1oRex8U45pFcOEcpJEL4rBGMP3tsWTJQzp9fq0XOFEAPTLTsnbHjU1umRTgdKhwpMCsqgQK6UX5guDiJ6rj2n2NefGbAQjQY7eKA60AQAJ2vnnm9Ph")
                .requestId("e6f99d5e-6056-4a7c-81be-7151b3964c8a");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
