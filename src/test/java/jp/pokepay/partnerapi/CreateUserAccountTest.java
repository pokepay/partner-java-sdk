// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.CreateUserAccount;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class CreateUserAccountTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new CreateUserAccount(
            "42d66512-38f9-4ad0-b4d7-8d84290c0b8e",
            "ebb44434-c7c0-4400-817a-78b835184302"
        );
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new CreateUserAccount(
            "42d66512-38f9-4ad0-b4d7-8d84290c0b8e",
            "ebb44434-c7c0-4400-817a-78b835184302"
        )
                .metadata("{\"key1\":\"foo\",\"key2\":\"bar\"}");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new CreateUserAccount(
            "42d66512-38f9-4ad0-b4d7-8d84290c0b8e",
            "ebb44434-c7c0-4400-817a-78b835184302"
        )
                .externalId("KakjxuCglZKjUiU")
                .metadata("{\"key1\":\"foo\",\"key2\":\"bar\"}");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new CreateUserAccount(
            "42d66512-38f9-4ad0-b4d7-8d84290c0b8e",
            "ebb44434-c7c0-4400-817a-78b835184302"
        )
                .name("O0rUGN6rUxlOPFHzVq4PGGPvpyeKSFpK1o5zNX4uKBKCmOKo6ol8MXU9eA2YvQPwQ0amOG2ho4KCHD7FimA8y1WT6xM4IEkd0uTKGLXhS6urefUHjlvY9QyopQfzDiuooZrFQDLyziCrc5sp0Pw8OfNlMUbKF9Akbfy1qgQE")
                .externalId("29Nu4T7Uv7gPVIZVBEwwOdrY")
                .metadata("{\"key1\":\"foo\",\"key2\":\"bar\"}");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
