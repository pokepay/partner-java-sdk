// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.CreateUserAccount;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class CreateUserAccountTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new CreateUserAccount(
            "db6fdfb8-9d1c-417d-bab8-f9b0d5dd77cd",
            "32953c82-d558-47ad-8c8d-4fe404d22174"
        );
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new CreateUserAccount(
            "db6fdfb8-9d1c-417d-bab8-f9b0d5dd77cd",
            "32953c82-d558-47ad-8c8d-4fe404d22174"
        )
                .metadata("{\"key1\":\"foo\",\"key2\":\"bar\"}");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new CreateUserAccount(
            "db6fdfb8-9d1c-417d-bab8-f9b0d5dd77cd",
            "32953c82-d558-47ad-8c8d-4fe404d22174"
        )
                .externalId("uSMvthgK4eysuzToT0g9yHc5Zw7lAAFFojCEbkUJxtgJkvFsh5")
                .metadata("{\"key1\":\"foo\",\"key2\":\"bar\"}");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new CreateUserAccount(
            "db6fdfb8-9d1c-417d-bab8-f9b0d5dd77cd",
            "32953c82-d558-47ad-8c8d-4fe404d22174"
        )
                .name("FlDlrkvLMaa5G5XcjTmZOHnlD6QisLozWbfdLkhu2oiWGunjumLiJCbzVhMpuI32Mtof771Gz1FclALbsxcj0572HX6COnjl00bBH5j5bdltpDqOmTfeeTCJAK70j3oNKwZaoLkfObZgVoqeLRHKE5qqfES8Oduy3plWNP1xBmPQVSalo95Aj5dBjh3bfJsVTO4sU8iVjQeH6Ph")
                .externalId("lnyaAU6fFalc")
                .metadata("{\"key1\":\"foo\",\"key2\":\"bar\"}");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
