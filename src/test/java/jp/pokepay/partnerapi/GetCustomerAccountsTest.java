// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.GetCustomerAccounts;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class GetCustomerAccountsTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new GetCustomerAccounts(
            "d82a1596-1c2b-404f-96df-825eace28fef"
        );
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new GetCustomerAccounts(
            "d82a1596-1c2b-404f-96df-825eace28fef"
        )
                .email("jTDEk0fitY@gKzf.com");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new GetCustomerAccounts(
            "d82a1596-1c2b-404f-96df-825eace28fef"
        )
                .tel("0579740165")
                .email("y6Tu3BU56A@0Dov.com");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new GetCustomerAccounts(
            "d82a1596-1c2b-404f-96df-825eace28fef"
        )
                .externalId("2AWl")
                .tel("0811-188918")
                .email("pqZwH1tkpy@NDcu.com");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new GetCustomerAccounts(
            "d82a1596-1c2b-404f-96df-825eace28fef"
        )
                .status("pre-closed")
                .externalId("xfr4xKRRC5UPfddKJfLPJmxAh")
                .tel("04077912")
                .email("KzLBWMCYif@XDXP.com");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new GetCustomerAccounts(
            "d82a1596-1c2b-404f-96df-825eace28fef"
        )
                .setSuspended(false)
                .status("pre-closed")
                .externalId("HnT3R8fCd8115Vzf")
                .tel("0370-9091083")
                .email("eKaErwIngT@ct5V.com");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new GetCustomerAccounts(
            "d82a1596-1c2b-404f-96df-825eace28fef"
        )
                .createdAtTo("2017-06-10T02:52:41.000000+09:00")
                .setSuspended(false)
                .status("active")
                .externalId("8ahS")
                .tel("055-929-200")
                .email("67hNuqsd2a@OEu5.com");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new GetCustomerAccounts(
            "d82a1596-1c2b-404f-96df-825eace28fef"
        )
                .createdAtFrom("2019-04-22T20:06:33.000000+09:00")
                .createdAtTo("2016-05-10T16:03:58.000000+09:00")
                .setSuspended(false)
                .status("suspended")
                .externalId("0fcKmGRUw7sMhCFW8ODbHkZSUPXBsmObvnHUjDTSSciw")
                .tel("0302-887")
                .email("IImkvl5vCA@Hh7Q.com");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new GetCustomerAccounts(
            "d82a1596-1c2b-404f-96df-825eace28fef"
        )
                .perPage(2092)
                .createdAtFrom("2022-09-24T11:32:08.000000+09:00")
                .createdAtTo("2020-05-05T00:22:07.000000+09:00")
                .setSuspended(false)
                .status("suspended")
                .externalId("m0Sp2RluFOAxJTKKlkJp5ENq52OLTcJlnsa7")
                .tel("0516145-4752")
                .email("n7Z1wrrgdx@WfKk.com");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test9() throws ConnectionError, ProcessingError {
        Request request = new GetCustomerAccounts(
            "d82a1596-1c2b-404f-96df-825eace28fef"
        )
                .page(7041)
                .perPage(7700)
                .createdAtFrom("2022-03-21T22:23:59.000000+09:00")
                .createdAtTo("2018-07-22T10:29:44.000000+09:00")
                .setSuspended(true)
                .status("pre-closed")
                .externalId("9LHlnKRmCd4nadmeyK")
                .tel("081192-053")
                .email("W7S36l34SS@SOxW.com");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
