// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.GetCustomerAccounts;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class GetCustomerAccountsTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new GetCustomerAccounts(
            "c7f43c19-ce62-44c8-a1a2-3ec7016b83d2"
        );
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new GetCustomerAccounts(
            "c7f43c19-ce62-44c8-a1a2-3ec7016b83d2"
        )
                .email("tliyEctyNU@Qtn8.com");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new GetCustomerAccounts(
            "c7f43c19-ce62-44c8-a1a2-3ec7016b83d2"
        )
                .tel("0454694")
                .email("NlubWsi6ue@vA5U.com");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new GetCustomerAccounts(
            "c7f43c19-ce62-44c8-a1a2-3ec7016b83d2"
        )
                .externalId("VKzYQNBP2LwiTpahdFZ8idDnc0fRQjBJl5T05mmY")
                .tel("051-3447-8732")
                .email("XDmOgq9edF@U8WT.com");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new GetCustomerAccounts(
            "c7f43c19-ce62-44c8-a1a2-3ec7016b83d2"
        )
                .status("pre-closed")
                .externalId("Tqeh62y2ml7pCmcVDgTCGZixqKoB88i")
                .tel("082-9181790")
                .email("gRyoXye4FJ@lBaB.com");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new GetCustomerAccounts(
            "c7f43c19-ce62-44c8-a1a2-3ec7016b83d2"
        )
                .setSuspended(false)
                .status("pre-closed")
                .externalId("uKLiVAWJueUHKrW8G6zIzBUjSOAmcxkaf7FCnkw")
                .tel("07-2779-2357")
                .email("h9doLkOK1A@o3A4.com");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new GetCustomerAccounts(
            "c7f43c19-ce62-44c8-a1a2-3ec7016b83d2"
        )
                .createdAtTo("2020-12-04T22:51:28.000000+09:00")
                .setSuspended(true)
                .status("active")
                .externalId("RBgfLwOmvgWl5zxW2Mi3jYN4i1hP6DI8AVa1vx44")
                .tel("057833-000")
                .email("0vekiyFzOA@suJI.com");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new GetCustomerAccounts(
            "c7f43c19-ce62-44c8-a1a2-3ec7016b83d2"
        )
                .createdAtFrom("2024-05-16T20:07:21.000000+09:00")
                .createdAtTo("2020-09-04T19:45:56.000000+09:00")
                .setSuspended(true)
                .status("pre-closed")
                .externalId("aGSy7orMexw3304nTynQIaJrJm6fQ1sImqB")
                .tel("0133045592")
                .email("9peodHkvEK@oBHb.com");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new GetCustomerAccounts(
            "c7f43c19-ce62-44c8-a1a2-3ec7016b83d2"
        )
                .perPage(2465)
                .createdAtFrom("2021-06-17T08:55:01.000000+09:00")
                .createdAtTo("2024-01-28T15:30:26.000000+09:00")
                .setSuspended(false)
                .status("pre-closed")
                .externalId("a809666kLmRNppwoR2CDI1w7if89QotQPRUv")
                .tel("08-7100692")
                .email("vdEpDp88f9@67RO.com");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test9() throws ConnectionError, ProcessingError {
        Request request = new GetCustomerAccounts(
            "c7f43c19-ce62-44c8-a1a2-3ec7016b83d2"
        )
                .page(9462)
                .perPage(334)
                .createdAtFrom("2021-08-23T14:45:22.000000+09:00")
                .createdAtTo("2024-03-28T05:06:33.000000+09:00")
                .setSuspended(true)
                .status("active")
                .externalId("LkccL2vWN16EPGx")
                .tel("09232-850")
                .email("bPItWzFQeU@R73A.com");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
