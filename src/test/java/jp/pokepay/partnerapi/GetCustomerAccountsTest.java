// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.GetCustomerAccounts;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class GetCustomerAccountsTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new GetCustomerAccounts(
            "d93c71ed-b0eb-4276-917e-80862d991284"
        );
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new GetCustomerAccounts(
            "d93c71ed-b0eb-4276-917e-80862d991284"
        )
                .email("l5vCAHh7QD@95u0.com");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new GetCustomerAccounts(
            "d93c71ed-b0eb-4276-917e-80862d991284"
        )
                .tel("01-033522")
                .email("luFOAxJTKK@lkJp.com");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new GetCustomerAccounts(
            "d93c71ed-b0eb-4276-917e-80862d991284"
        )
                .externalId("ENq52OLTcJlns")
                .tel("0775-9145-4752")
                .email("n7Z1wrrgdx@WfKk.com");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new GetCustomerAccounts(
            "d93c71ed-b0eb-4276-917e-80862d991284"
        )
                .status("suspended")
                .externalId("L")
                .tel("037283-190")
                .email("LHlnKRmCd4@nadm.com");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new GetCustomerAccounts(
            "d93c71ed-b0eb-4276-917e-80862d991284"
        )
                .setSuspended(false)
                .status("suspended")
                .externalId("KnqGyqpn3W7S36l34SSSO")
                .tel("07-71-0481")
                .email("Pzbjt0rt7U@merR.com");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new GetCustomerAccounts(
            "d93c71ed-b0eb-4276-917e-80862d991284"
        )
                .createdAtTo("2025-06-25T01:07:57.000000+09:00")
                .setSuspended(true)
                .status("pre-closed")
                .externalId("GbvGgvAZbyLJ1Lea6an4P1A")
                .tel("01-1446-7624")
                .email("uXgZDedIJq@THGg.com");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new GetCustomerAccounts(
            "d93c71ed-b0eb-4276-917e-80862d991284"
        )
                .createdAtFrom("2019-01-31T21:18:18.000000+09:00")
                .createdAtTo("2015-11-28T00:28:16.000000+09:00")
                .setSuspended(true)
                .status("suspended")
                .externalId("ZBj5AvHdO2AtfcLabY2vDzXzQx3s")
                .tel("01861496-352")
                .email("o0KXfPASw8@jPQ0.com");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new GetCustomerAccounts(
            "d93c71ed-b0eb-4276-917e-80862d991284"
        )
                .perPage(6862)
                .createdAtFrom("2025-06-01T04:23:10.000000+09:00")
                .createdAtTo("2017-09-26T23:30:14.000000+09:00")
                .setSuspended(true)
                .status("active")
                .externalId("PgNJOUuVI3xkUSOX0vTgyFK1FOp7pl9MWii2exAarzlUllr")
                .tel("01-1105-7098")
                .email("bZQuPYAKNL@vTyM.com");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test9() throws ConnectionError, ProcessingError {
        Request request = new GetCustomerAccounts(
            "d93c71ed-b0eb-4276-917e-80862d991284"
        )
                .page(7048)
                .perPage(7330)
                .createdAtFrom("2019-08-06T03:51:11.000000+09:00")
                .createdAtTo("2024-06-15T18:46:48.000000+09:00")
                .setSuspended(false)
                .status("active")
                .externalId("YSz5jRHNPv9LO3MtPyt1wTnktL8AYkBvD7caRgncONv8Kje2")
                .tel("04-1404-6879")
                .email("AkJDB6ZsUU@sk6u.com");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
