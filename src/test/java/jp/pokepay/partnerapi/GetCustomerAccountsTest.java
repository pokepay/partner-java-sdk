// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.GetCustomerAccounts;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class GetCustomerAccountsTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new GetCustomerAccounts(
            "fbd33882-32ee-43ec-871c-86fdb36c31a8"
        );
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new GetCustomerAccounts(
            "fbd33882-32ee-43ec-871c-86fdb36c31a8"
        )
                .email("DRk3ecVRbF@KT6T.com");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new GetCustomerAccounts(
            "fbd33882-32ee-43ec-871c-86fdb36c31a8"
        )
                .tel("0296-66812")
                .email("b0C9h6pVBc@rr9i.com");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new GetCustomerAccounts(
            "fbd33882-32ee-43ec-871c-86fdb36c31a8"
        )
                .externalId("2r5j6X")
                .tel("0348-1832")
                .email("zIKq5TjyL2@A8YP.com");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new GetCustomerAccounts(
            "fbd33882-32ee-43ec-871c-86fdb36c31a8"
        )
                .status("suspended")
                .externalId("7xpvLmpyFGG96UA5GgO7EsZlO1B57Lh5Tx")
                .tel("0496-2265948")
                .email("JqEQ6Zd7tZ@7wTa.com");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new GetCustomerAccounts(
            "fbd33882-32ee-43ec-871c-86fdb36c31a8"
        )
                .setSuspended(false)
                .status("pre-closed")
                .externalId("fqrJ4fuwHowE2tSu47SViuXCe")
                .tel("05-8830687")
                .email("7IMnihBNgS@QnlG.com");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new GetCustomerAccounts(
            "fbd33882-32ee-43ec-871c-86fdb36c31a8"
        )
                .createdAtTo("2020-04-15T21:33:25.000000+09:00")
                .setSuspended(true)
                .status("suspended")
                .externalId("gGdNm")
                .tel("05365951422")
                .email("UlG2HRz105@eKgh.com");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new GetCustomerAccounts(
            "fbd33882-32ee-43ec-871c-86fdb36c31a8"
        )
                .createdAtFrom("2023-11-14T21:04:37.000000+09:00")
                .createdAtTo("2020-06-18T12:39:18.000000+09:00")
                .setSuspended(false)
                .status("suspended")
                .externalId("KIgvn38TNXebo")
                .tel("03330334")
                .email("8vgxPAk6tw@yDeo.com");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new GetCustomerAccounts(
            "fbd33882-32ee-43ec-871c-86fdb36c31a8"
        )
                .perPage(3232)
                .createdAtFrom("2021-07-15T21:48:34.000000+09:00")
                .createdAtTo("2021-11-18T13:54:35.000000+09:00")
                .setSuspended(true)
                .status("pre-closed")
                .externalId("CKN4do5")
                .tel("0500840-475")
                .email("X7RXb9Q5Nq@XQia.com");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test9() throws ConnectionError, ProcessingError {
        Request request = new GetCustomerAccounts(
            "fbd33882-32ee-43ec-871c-86fdb36c31a8"
        )
                .page(8845)
                .perPage(2025)
                .createdAtFrom("2020-03-09T16:28:52.000000+09:00")
                .createdAtTo("2022-03-27T15:07:46.000000+09:00")
                .setSuspended(true)
                .status("active")
                .externalId("CcIPmAF5")
                .tel("008712041")
                .email("hJecVbBnKm@muiN.com");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
