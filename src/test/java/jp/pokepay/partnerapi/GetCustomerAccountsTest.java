// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.GetCustomerAccounts;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class GetCustomerAccountsTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new GetCustomerAccounts(
            "667225e0-1393-4e37-8000-7dda48431394"
        );
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new GetCustomerAccounts(
            "667225e0-1393-4e37-8000-7dda48431394"
        )
                .email("5CH5Scodp4@uUX0.com");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new GetCustomerAccounts(
            "667225e0-1393-4e37-8000-7dda48431394"
        )
                .tel("09-58925816")
                .email("pbLaFrJqvj@o42D.com");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new GetCustomerAccounts(
            "667225e0-1393-4e37-8000-7dda48431394"
        )
                .externalId("UQKIoiItVagfrWIe9E0WNjQSfCrqQR8uqbSwuOfa")
                .tel("0744212-491")
                .email("fJHsgEEef9@yl4s.com");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new GetCustomerAccounts(
            "667225e0-1393-4e37-8000-7dda48431394"
        )
                .status("pre-closed")
                .externalId("edXWMiejjgLZJ1ajPy6UCrStccJFgshSQk3jKEXuN1Mk")
                .tel("07-4208-018")
                .email("kV6NxxJAL7@BkVZ.com");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new GetCustomerAccounts(
            "667225e0-1393-4e37-8000-7dda48431394"
        )
                .setSuspended(false)
                .status("active")
                .externalId("0vIYUzRfPhCBzy2eGfP")
                .tel("084075-439")
                .email("Dv3rBX3qPf@W3s8.com");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new GetCustomerAccounts(
            "667225e0-1393-4e37-8000-7dda48431394"
        )
                .createdAtTo("2020-12-25T00:44:02.000000+09:00")
                .setSuspended(false)
                .status("pre-closed")
                .externalId("03koLbVVa")
                .tel("023-77708")
                .email("Y1i21V6S2X@lGgO.com");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new GetCustomerAccounts(
            "667225e0-1393-4e37-8000-7dda48431394"
        )
                .createdAtFrom("2023-04-24T21:25:15.000000+09:00")
                .createdAtTo("2024-06-19T15:18:36.000000+09:00")
                .setSuspended(false)
                .status("suspended")
                .externalId("TALCpiEtNzvkk3ZveprTde1UhZFJiRCGeyXRawFG")
                .tel("05-3308-010")
                .email("BTt6joP16B@9m7E.com");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new GetCustomerAccounts(
            "667225e0-1393-4e37-8000-7dda48431394"
        )
                .perPage(9688)
                .createdAtFrom("2024-01-07T20:04:29.000000+09:00")
                .createdAtTo("2023-06-21T14:57:57.000000+09:00")
                .setSuspended(false)
                .status("active")
                .externalId("xEK7iiRjOfuqMhNhVNHcx5d2djFtFsFEjiKjx72fVg57RPK")
                .tel("0258-709-371")
                .email("7K3141htTv@Ruwa.com");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test9() throws ConnectionError, ProcessingError {
        Request request = new GetCustomerAccounts(
            "667225e0-1393-4e37-8000-7dda48431394"
        )
                .page(8291)
                .perPage(5803)
                .createdAtFrom("2024-04-04T07:50:45.000000+09:00")
                .createdAtTo("2021-08-17T06:01:09.000000+09:00")
                .setSuspended(false)
                .status("active")
                .externalId("Unkr7UmrSma83k64MJKPbTpsWEir91YTr")
                .tel("0628135386")
                .email("MjQELO7CHK@uthf.com");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
