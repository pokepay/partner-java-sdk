// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.GetShopAccounts;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class GetShopAccountsTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new GetShopAccounts(
            "122f7c99-ba73-409e-bcaf-ca2e6fa9d12e"
        );
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new GetShopAccounts(
            "122f7c99-ba73-409e-bcaf-ca2e6fa9d12e"
        )
                .setSuspended(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new GetShopAccounts(
            "122f7c99-ba73-409e-bcaf-ca2e6fa9d12e"
        )
                .createdAtTo("2022-08-14T03:51:44.000000+09:00")
                .setSuspended(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new GetShopAccounts(
            "122f7c99-ba73-409e-bcaf-ca2e6fa9d12e"
        )
                .createdAtFrom("2019-11-10T12:31:26.000000+09:00")
                .createdAtTo("2019-03-02T06:47:02.000000+09:00")
                .setSuspended(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new GetShopAccounts(
            "122f7c99-ba73-409e-bcaf-ca2e6fa9d12e"
        )
                .perPage(5016)
                .createdAtFrom("2021-02-21T01:26:31.000000+09:00")
                .createdAtTo("2021-11-11T09:43:58.000000+09:00")
                .setSuspended(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new GetShopAccounts(
            "122f7c99-ba73-409e-bcaf-ca2e6fa9d12e"
        )
                .page(878)
                .perPage(4128)
                .createdAtFrom("2016-03-21T11:12:51.000000+09:00")
                .createdAtTo("2023-10-10T08:53:50.000000+09:00")
                .setSuspended(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
