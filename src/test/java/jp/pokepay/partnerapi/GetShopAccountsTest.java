// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.GetShopAccounts;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class GetShopAccountsTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new GetShopAccounts(
            "c1e2cd1f-9e76-4d16-a810-f82b95413abd"
        );
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new GetShopAccounts(
            "c1e2cd1f-9e76-4d16-a810-f82b95413abd"
        )
                .setSuspended(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new GetShopAccounts(
            "c1e2cd1f-9e76-4d16-a810-f82b95413abd"
        )
                .createdAtTo("2024-04-06T06:22:40.000000+09:00")
                .setSuspended(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new GetShopAccounts(
            "c1e2cd1f-9e76-4d16-a810-f82b95413abd"
        )
                .createdAtFrom("2023-07-31T14:52:23.000000+09:00")
                .createdAtTo("2024-05-17T09:03:21.000000+09:00")
                .setSuspended(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new GetShopAccounts(
            "c1e2cd1f-9e76-4d16-a810-f82b95413abd"
        )
                .perPage(1137)
                .createdAtFrom("2021-07-07T10:09:38.000000+09:00")
                .createdAtTo("2023-08-28T15:44:49.000000+09:00")
                .setSuspended(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new GetShopAccounts(
            "c1e2cd1f-9e76-4d16-a810-f82b95413abd"
        )
                .page(2809)
                .perPage(2792)
                .createdAtFrom("2022-04-06T00:19:54.000000+09:00")
                .createdAtTo("2022-03-25T23:13:54.000000+09:00")
                .setSuspended(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
