// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.GetShopAccounts;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class GetShopAccountsTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new GetShopAccounts(
            "a40aab3c-9f39-4ded-823d-e8fbb87e8e2a"
        );
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new GetShopAccounts(
            "a40aab3c-9f39-4ded-823d-e8fbb87e8e2a"
        )
                .setSuspended(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new GetShopAccounts(
            "a40aab3c-9f39-4ded-823d-e8fbb87e8e2a"
        )
                .createdAtTo("2021-02-25T21:41:06.000000+09:00")
                .setSuspended(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new GetShopAccounts(
            "a40aab3c-9f39-4ded-823d-e8fbb87e8e2a"
        )
                .createdAtFrom("2018-05-07T16:24:39.000000+09:00")
                .createdAtTo("2019-11-09T01:38:55.000000+09:00")
                .setSuspended(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new GetShopAccounts(
            "a40aab3c-9f39-4ded-823d-e8fbb87e8e2a"
        )
                .perPage(9529)
                .createdAtFrom("2025-06-27T00:40:54.000000+09:00")
                .createdAtTo("2024-02-17T05:34:54.000000+09:00")
                .setSuspended(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new GetShopAccounts(
            "a40aab3c-9f39-4ded-823d-e8fbb87e8e2a"
        )
                .page(2298)
                .perPage(5107)
                .createdAtFrom("2024-01-22T07:02:06.000000+09:00")
                .createdAtTo("2022-06-13T17:20:41.000000+09:00")
                .setSuspended(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
