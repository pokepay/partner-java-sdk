// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.GetShopAccounts;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class GetShopAccountsTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new GetShopAccounts(
            "81706dec-0f3a-4bdc-b3d9-4610e1947785"
        );
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new GetShopAccounts(
            "81706dec-0f3a-4bdc-b3d9-4610e1947785"
        )
                .setSuspended(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new GetShopAccounts(
            "81706dec-0f3a-4bdc-b3d9-4610e1947785"
        )
                .createdAtTo("2022-01-01T04:20:37.000000+09:00")
                .setSuspended(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new GetShopAccounts(
            "81706dec-0f3a-4bdc-b3d9-4610e1947785"
        )
                .createdAtFrom("2023-12-26T06:09:47.000000+09:00")
                .createdAtTo("2024-07-22T02:22:09.000000+09:00")
                .setSuspended(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new GetShopAccounts(
            "81706dec-0f3a-4bdc-b3d9-4610e1947785"
        )
                .perPage(4350)
                .createdAtFrom("2021-11-24T08:36:10.000000+09:00")
                .createdAtTo("2021-01-13T06:26:35.000000+09:00")
                .setSuspended(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new GetShopAccounts(
            "81706dec-0f3a-4bdc-b3d9-4610e1947785"
        )
                .page(4346)
                .perPage(2964)
                .createdAtFrom("2022-04-25T02:26:43.000000+09:00")
                .createdAtTo("2021-09-17T12:03:45.000000+09:00")
                .setSuspended(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
