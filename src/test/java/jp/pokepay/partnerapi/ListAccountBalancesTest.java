// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.ListAccountBalances;
import jp.pokepay.partnerapi.request.Request;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class ListAccountBalancesTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new ListAccountBalances(
            "6c0df032-6634-4d8b-92be-6fa7cc1a8959"
        );
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new ListAccountBalances(
            "6c0df032-6634-4d8b-92be-6fa7cc1a8959"
        )
                .direction("asc");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new ListAccountBalances(
            "6c0df032-6634-4d8b-92be-6fa7cc1a8959"
        )
                .expiresAtTo("2021-03-31T03:04:24.000000+09:00")
                .direction("asc");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new ListAccountBalances(
            "6c0df032-6634-4d8b-92be-6fa7cc1a8959"
        )
                .expiresAtFrom("2017-05-31T01:36:36.000000+09:00")
                .expiresAtTo("2022-03-09T11:53:53.000000+09:00")
                .direction("desc");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new ListAccountBalances(
            "6c0df032-6634-4d8b-92be-6fa7cc1a8959"
        )
                .perPage(7919)
                .expiresAtFrom("2022-06-05T04:41:45.000000+09:00")
                .expiresAtTo("2025-05-20T02:28:44.000000+09:00")
                .direction("asc");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new ListAccountBalances(
            "6c0df032-6634-4d8b-92be-6fa7cc1a8959"
        )
                .page(772)
                .perPage(4268)
                .expiresAtFrom("2023-10-14T15:41:08.000000+09:00")
                .expiresAtTo("2016-02-07T23:51:43.000000+09:00")
                .direction("asc");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
