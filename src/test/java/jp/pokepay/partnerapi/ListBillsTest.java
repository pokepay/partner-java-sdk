// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.ListBills;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class ListBillsTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new ListBills();
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new ListBills()
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new ListBills()
                .upperLimitAmount(4396)
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new ListBills()
                .lowerLimitAmount(5848)
                .upperLimitAmount(435)
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new ListBills()
                .shopId("77186a67-441e-402d-9ee8-7cc305375f62")
                .lowerLimitAmount(6733)
                .upperLimitAmount(8576)
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new ListBills()
                .shopName("kJmhZNVsfxWRcyYfR9f8Se1icO89SeyKzVohwWwok2VQuPH0obxZiI05oboIIhTOswqdEChEXUq4ocP19roqZeYwMIt0v5HzZazNS2BuTpWKGyjWmSBZWbgbLPUVSzpPZQou7NcSyvK6DN64hUhni9sS")
                .shopId("dac4f5f1-eb96-40e0-825c-b23c769dd9f9")
                .lowerLimitAmount(3067)
                .upperLimitAmount(8168)
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new ListBills()
                .createdTo("2024-07-20T10:10:19.000000+09:00")
                .shopName("gbUxwuvOMuI3hTw3pQi5pm3XSFhrE1DjQiwMDoNWBk5MKFIh46KU7COhj2XksoCzbwbQAdbdnNhuNs9rcsnfsLDsHuWKqypOqTdYKl1WorZrQZxbSVtK2P0tZ51YxlfZMth")
                .shopId("625c3a8a-ee30-4cd1-b363-79586846be13")
                .lowerLimitAmount(6274)
                .upperLimitAmount(4824)
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new ListBills()
                .createdFrom("2023-09-02T07:09:05.000000+09:00")
                .createdTo("2024-04-26T16:19:44.000000+09:00")
                .shopName("DXiwpVyfh3druTfMpJR1KlIz4akARWlOYajnxfpslG7gBgtHlwGXRjk1LWO9LoDsZfTEqrwigv3jl0WYNqkIMPJsID22JggWHsyROuOYAxIGhiKOCBi")
                .shopId("ead2564e-9ffa-4dd5-96b2-b18c05fb6f81")
                .lowerLimitAmount(1161)
                .upperLimitAmount(8252)
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new ListBills()
                .description("iC7WUn9ieKykK9YoFx5UH0u7KVn7")
                .createdFrom("2024-03-16T03:45:11.000000+09:00")
                .createdTo("2022-06-09T04:30:40.000000+09:00")
                .shopName("rJpgMYgIMpYp6YkYMomERYwm6emjVeYnTSr6fCHGCkHm6afm6MGylUEDSfVFDqS1IlNDIB5DUUuoQB2wXsoVkZ")
                .shopId("535255dc-2eb3-4c09-ab1d-5f481a47287a")
                .lowerLimitAmount(9604)
                .upperLimitAmount(269)
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test9() throws ConnectionError, ProcessingError {
        Request request = new ListBills()
                .organizationCode("E-8-Y1N4tVxzd-n--x3YT-ix-WF-6-")
                .description("JnmcqYUfx9loEdz4WribG3TiVDX")
                .createdFrom("2023-09-22T14:26:19.000000+09:00")
                .createdTo("2021-01-26T21:56:34.000000+09:00")
                .shopName("FuUCRvpisu4DBLM9xIPBzdP3MVgIOWWLaCTEjOgEoUeMJDR8B04NFqQbKTjhZhUXvLNmgRrdPhBNTJhVrGd8OFbi15CkIBxkVXNNAGSMjO25dvVk6fHJD2F5AzF7i3VNQrCNH")
                .shopId("6a582ae6-f3a8-4f2e-a6e5-9568b12c5353")
                .lowerLimitAmount(1542)
                .upperLimitAmount(1513)
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test10() throws ConnectionError, ProcessingError {
        Request request = new ListBills()
                .privateMoneyId("64eb95ee-1055-4f62-b6f5-74b7352b6f1c")
                .organizationCode("X-8b98AT9Nb")
                .description("0owpQgNQQg0LAjafQx2PWnwHZ2dX35ip749iwVgR3UI1sjbiGw79jysY6IT1yWUB8z7jKfJooPus4MLd8EgQy6MXcY8r5Asqe9ySD3TV1jhllH9VIESVUaArmm4pjDe6Ep0rIEu2jNJDfW5k7kztGJL5KXjwm3Eu")
                .createdFrom("2021-05-20T15:37:05.000000+09:00")
                .createdTo("2022-01-20T16:45:59.000000+09:00")
                .shopName("ThZ3abm3umt21pVaa5bo9FFrL3Rn7aJ")
                .shopId("ea0aa0db-77c7-4a35-8bdc-7ab8b8eadf57")
                .lowerLimitAmount(910)
                .upperLimitAmount(7951)
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test11() throws ConnectionError, ProcessingError {
        Request request = new ListBills()
                .billId("pV9KgHPAr")
                .privateMoneyId("f64cdeb1-f037-4631-8dfa-66dabea725cd")
                .organizationCode("9J")
                .description("UyF8eOpZ4JrSukgB1LzxWcKYTybzPVhjgmqSXgRysBI49JCpRWfxWjRUHYtD5NGXGUhHXuDuUf3hPlwZ0Yj8zYC6oInOMtKXosUebFP5rnP6Jdj2rETpq0nJRDIiiwhSvraKyhb4ytAQkOboEEZ218Y38bMEU593vVcHdH1zzoyT5Hkz93sXQ7")
                .createdFrom("2023-07-13T03:30:42.000000+09:00")
                .createdTo("2020-07-04T17:42:22.000000+09:00")
                .shopName("6IfNo4fidA08pFQKpsB2wXlwkF7kIsnE9TimtJV5houZaoEKyS3")
                .shopId("c25c94f8-4fd7-4018-8996-ae468a3a2313")
                .lowerLimitAmount(5858)
                .upperLimitAmount(627)
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test12() throws ConnectionError, ProcessingError {
        Request request = new ListBills()
                .perPage(3101)
                .billId("4aiBD8od")
                .privateMoneyId("5e0d5afc-1388-4c15-b1e4-f54c2d853f6b")
                .organizationCode("L-2-6--0132--3BLLB5-Q3Gu-")
                .description("NIlfGO8JoTsai01qJqMeY3FpdUG9cpulQnMEzWxpkP4W9pt8W0EOx1NVFIoBYFUIZtbNHRL5Nvq")
                .createdFrom("2023-10-24T15:12:06.000000+09:00")
                .createdTo("2023-07-08T21:10:20.000000+09:00")
                .shopName("SSzkyWnFHCtXCW4Xs8pVWWI0miRAxesxeXOqaMvtHJqEAVeoXBhf6MetvIepFViq1iUMHOum3dKgddURIP0YcQFw6FAlkrZKDJh3aMIx6mB0v1kDMGmmNx3WtNtaxToqMYX6Hpe47sPH7RtX8dFdYfyZthR8k5BHLOR3qLEfAoIDGH4SIA6flZBJ4rzOQSlNqusJoclYkAxxK9g4ATOQgmItHC")
                .shopId("032015df-2a2b-4122-9704-97b9bad60974")
                .lowerLimitAmount(5187)
                .upperLimitAmount(1008)
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test13() throws ConnectionError, ProcessingError {
        Request request = new ListBills()
                .page(6901)
                .perPage(4036)
                .billId("O")
                .privateMoneyId("39b1439f-a448-4a4c-8e53-28a36faf1c72")
                .organizationCode("8I-vh5y-69")
                .description("PjdzmRKdhtkjVsPzynzRC9Mrb1FtZHPKBlSCuuyobdj4jlA99v0jlsyyFf0jkPCA4uDAUVPrgkr0RC1NyZvdhUTYR1Ri0y")
                .createdFrom("2021-08-31T20:55:17.000000+09:00")
                .createdTo("2020-10-05T05:02:01.000000+09:00")
                .shopName("zdgpiu")
                .shopId("bae5b992-d335-4bf6-ae45-23dcd7954022")
                .lowerLimitAmount(3619)
                .upperLimitAmount(3440)
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
