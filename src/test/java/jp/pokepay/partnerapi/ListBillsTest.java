// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.ListBills;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class ListBillsTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new ListBills();
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new ListBills()
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new ListBills()
                .upperLimitAmount(5832)
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new ListBills()
                .lowerLimitAmount(477)
                .upperLimitAmount(3269)
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new ListBills()
                .shopId("4cff48db-8baa-4ffc-ab4f-0351942763c8")
                .lowerLimitAmount(106)
                .upperLimitAmount(3804)
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new ListBills()
                .shopName("qWK")
                .shopId("5976a7b5-6521-4123-9053-92daf9fa416f")
                .lowerLimitAmount(3845)
                .upperLimitAmount(2958)
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new ListBills()
                .createdTo("2020-01-18T03:08:49.000000+09:00")
                .shopName("TH4c3Ehv9v0VJuLv162YSFL3zWzi5lBIMgw7HtC2bb1GQKs9IHqWnJPxuLmgZgttogejvkrtfS3uwWFllnlPtoqr9Kx0tKY5AJUghjWvS8D1wMIYahSWxEyovyEbAcsi2yvWphJsVCFnWzz4jIvmf7Bah2H6rXDG62gku1D4lG8UwkIToTMHwikJjXR8YaN3xoDQH8FNRSvCpPZKQJCnK2mbZ3w954R7mHp8e6gxcNqplp8Xarv8UAX6l0CxtwrX")
                .shopId("33a8d472-d7be-44d0-9ec6-e1125f14cca5")
                .lowerLimitAmount(7904)
                .upperLimitAmount(7745)
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new ListBills()
                .createdFrom("2022-10-28T17:28:13.000000+09:00")
                .createdTo("2022-08-11T20:13:21.000000+09:00")
                .shopName("lYD9S3xAfzxJBWMYh0AEaC3toqKOa4CShqpNQA7YL7sT8hEON1FKliBp4BfFZHoTuVMzMs6DWzFlLtU3FnRrhMMukB6TYU6P5Mw1keMuwRaxkcfSLLmX6wMARMENB2Le3r9CqVFX28dAaHliYLKL4")
                .shopId("40afcb02-617e-488b-92cb-c9599058b9c2")
                .lowerLimitAmount(8425)
                .upperLimitAmount(4816)
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new ListBills()
                .description("u44LeQzqshNqQhwEmN67doiPHE0kXD5BrhK7Rnv3rZTOqeOmIanOH5dAAyfkuuudKT9Icq9Ak4sYsBWAEppVw3Dqj2LGcyACAHFcpw4rrgYqmms6enOecwhoYkDQfzgJLElUnhj1up4hPlWzyoykIWTbL2HJ6")
                .createdFrom("2022-11-18T16:41:08.000000+09:00")
                .createdTo("2024-07-23T07:48:26.000000+09:00")
                .shopName("OQJaEiCL3S5KWYiGCD8TmwH8ifOUaRoJgVzcn3kwt9R8BQ76iJDTNCt990C8oAV3dagJZAHr4DZATcE31Qh0zs5xa4sdh2DH4VRfJySYJsHCM33fOHSaYkMvTsogRmQ69rP0iM4qaV6bbavdy3SXozzsfRNp")
                .shopId("29439890-1218-49f0-a8d8-937bf83a1de8")
                .lowerLimitAmount(7776)
                .upperLimitAmount(3922)
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test9() throws ConnectionError, ProcessingError {
        Request request = new ListBills()
                .organizationCode("bS--opUs4ADYd---c-EgmAopDx3q--")
                .description("KD9FbAom8ytKVYX43QkkXFCu2BQ9C4Obui5rcz")
                .createdFrom("2020-11-10T07:04:13.000000+09:00")
                .createdTo("2021-06-11T17:25:49.000000+09:00")
                .shopName("wKMxSPvZ4SNMCISdWisZQBnqeH49sCfGEZHMZiKW7htsh4NF16yO5so1OSGqryI1rul14VqxwjAn5hzNUs0SjB0fDdRZYgkJLOKhn1r1qndSv6iCzC1JGaPiMEeqqlcZ3QNh3zDGiWfGyoSmNnBzEslCENh")
                .shopId("32bd3640-1aa1-4eea-bf29-28b2134d7e49")
                .lowerLimitAmount(1783)
                .upperLimitAmount(3930)
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test10() throws ConnectionError, ProcessingError {
        Request request = new ListBills()
                .privateMoneyId("cbb05da1-8d40-4134-a056-7b3e14cdbd6b")
                .organizationCode("")
                .description("3LCMEQf9vAEhYh2WlwahOSJ0e1")
                .createdFrom("2020-12-16T16:22:38.000000+09:00")
                .createdTo("2023-08-19T12:49:36.000000+09:00")
                .shopName("km7hFWEcY10Pby06KWA1W6V7WbgnPtry0tPyUUghQn6tXBOgz4DNxHAuSdMLX3N3rGlNiRZJoU4A5i4Q801H0Kalu2OfT17OvjZUOr")
                .shopId("26cc1479-008f-480e-97aa-dcfa844754fb")
                .lowerLimitAmount(6484)
                .upperLimitAmount(7935)
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test11() throws ConnectionError, ProcessingError {
        Request request = new ListBills()
                .billId("m")
                .privateMoneyId("369d4924-7191-41e3-8537-1dc5dd2476c4")
                .organizationCode("Y-")
                .description("oFffghRPSCPNXuFPtR195EP")
                .createdFrom("2024-03-29T04:06:22.000000+09:00")
                .createdTo("2022-03-15T21:39:33.000000+09:00")
                .shopName("9ekFZTTnKVyv0vUXxdGtcjOUSJ89gIwqxZi5p2L9VStZnxzph4EjafhvBu4DcLIw8WH0eRK4L9FPcBINVheDL4jMLwwWbym5Yjowc1nm9mGdJSeK4K82tnNFY")
                .shopId("c67ab15f-2319-4b22-9308-58c5c7b00021")
                .lowerLimitAmount(6953)
                .upperLimitAmount(2899)
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test12() throws ConnectionError, ProcessingError {
        Request request = new ListBills()
                .perPage(6337)
                .billId("Jf4cI")
                .privateMoneyId("f766184f-2937-4195-bda5-7725ab0c14b5")
                .organizationCode("l7F")
                .description("NBV5C4Cx73vePlMmKhBxI3eGz3b5VdHP24ax3px2salid1Taq1jGMPfr")
                .createdFrom("2024-04-03T04:16:31.000000+09:00")
                .createdTo("2023-09-01T04:45:14.000000+09:00")
                .shopName("uRpnLpN813gV2ydb2POcpsLH3WbwawL4WrCBKhCstohfYxP7yF8tYem8wp6dtARb9kgHCj7a5QUJjuqUKGBhT0DV1VXysfGRVCWgiQeU9jhnyBaskmxWaBbI1pKPqA4FEqy8yP27IqQ9iT8CPaKfDK7LJ2uhE5Z7iAtowSK")
                .shopId("fe9568c8-117e-45e1-8511-3a1395691967")
                .lowerLimitAmount(5579)
                .upperLimitAmount(5136)
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test13() throws ConnectionError, ProcessingError {
        Request request = new ListBills()
                .page(5551)
                .perPage(152)
                .billId("SwjK1L")
                .privateMoneyId("ca4ffa0c-1a13-4328-9bcc-044d06dc7d96")
                .organizationCode("-qf3---Ih-thN-2JO--16p9gYm1")
                .description("wlpti9tczcapd0PJp2yw4qyhPt6D4DTFAYZxBNAoeOyVMXTi4l98gWkmxV3cs4")
                .createdFrom("2022-09-20T11:57:49.000000+09:00")
                .createdTo("2021-03-22T21:58:54.000000+09:00")
                .shopName("DMH6gROHqPs2wfJ1fJZydtZK2CQmHWUqbBmGzlwFtJDVivWWZBgjBnDzAH6CZwgXCZ67aWxHxw7A2tfmmbRfCU5B1hD48uHyplrp07Wxpq5rtMCsEMp6ii1Kq5httisqUPA4HWwKrfrIJj9eMa37Z5hUT7y4O4ztjUn1DLZN8NzwlF0SC1OBiwqUekIGc2OYUfhUpyM4A5i90Y6MuszKLiu")
                .shopId("6e2454b1-d146-4747-9af7-5638211df102")
                .lowerLimitAmount(3449)
                .upperLimitAmount(8136)
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
