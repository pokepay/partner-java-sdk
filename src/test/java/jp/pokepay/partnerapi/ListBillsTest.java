// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.ListBills;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class ListBillsTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new ListBills();
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new ListBills()
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new ListBills()
                .upperLimitAmount(3983)
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new ListBills()
                .lowerLimitAmount(3581)
                .upperLimitAmount(152)
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new ListBills()
                .shopId("caf96c35-a9d8-4ff8-a1de-9096ad64518e")
                .lowerLimitAmount(9421)
                .upperLimitAmount(2299)
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new ListBills()
                .shopName("mnFozrJURCbPJbm1iWz8WbLOLLK2CYfJHiqjaRRqENG2TLshlphYHqgapSP56fLZyKIG8br49olZcO26VSOx88VVOpMNKyL5eywvcwzpko3oxz0MuK2XVsHlFqngqpJxzYDBg6zTq5W1HoyWiH57R3LIJhVYYJtQj6dKZcY9fO")
                .shopId("56d5fbfa-1cfd-4313-9d04-fefaff6f6b13")
                .lowerLimitAmount(5680)
                .upperLimitAmount(6610)
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new ListBills()
                .createdTo("2024-06-30T18:03:41.000000+09:00")
                .shopName("7pyut3m5mXnuCEkNGEgcH4XJiKhU3m9")
                .shopId("79a47809-6e33-4113-a271-dcdd807ce3a1")
                .lowerLimitAmount(685)
                .upperLimitAmount(4592)
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new ListBills()
                .createdFrom("2022-12-27T23:26:36.000000+09:00")
                .createdTo("2022-07-08T01:33:27.000000+09:00")
                .shopName("MpAYcyUykY46vincHJa8bFvbPjMrPoA3P2Pl4bOReDzI2ZdM2SUPXDWJsVDmDlPhUm7WMU8nJBQ7DYIH5VXB2svVxvIMH2MhvZ9ydqvtXvgPU2QyiUscp3JSJeToxWpvs5f5pd96p4BcF28qoOJ8LxskSEiERenvXT8VPj5fhgYqScB5NsfSoLsseGM0O4drNxR7hh5R38dU7SlVfpzh2")
                .shopId("5b8b3618-cb77-4b16-a9dc-6cbe60ffb3c2")
                .lowerLimitAmount(4919)
                .upperLimitAmount(1643)
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new ListBills()
                .description("3IQcVD2yoxxM9C0aopF3aM5b4InpXkbEdLIXESmw59yokyXqkciDrXKvpwlcTElKEv7QSSmO3dqzbfBg7JXrE0LK5u9J6Tltljrtz8NNFq3u944sxMTbfGu46U2cY9oOlrYCdbmYP")
                .createdFrom("2022-03-14T18:13:48.000000+09:00")
                .createdTo("2023-06-30T12:41:23.000000+09:00")
                .shopName("DqhCMeHN4ZexThH3d0OtFABpyvBQ9k5bT8ulZVa8wsU3TL0se0rgSTfIcrPPHCX7TceotYN4Jsrc3rc4NruuTfX2FWIL9uf4iZS44v5vzkJ1cbeYLZfd0pwW435VjB6iEm38Wy51VIS3wAychtlAAhupVK7YbTklTj2pP3AynoooF4kqUoEZx5JDukngoIX22hzjKg7oRrsGGvZL40dSsiKhIDF43")
                .shopId("0a9160a2-7912-49e1-a582-06cdf53f0495")
                .lowerLimitAmount(3359)
                .upperLimitAmount(2418)
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test9() throws ConnectionError, ProcessingError {
        Request request = new ListBills()
                .organizationCode("--6MajB--9d2WpY1A2X-")
                .description("MLC04l2Ni8HElWT")
                .createdFrom("2024-03-16T05:50:41.000000+09:00")
                .createdTo("2020-01-20T02:20:29.000000+09:00")
                .shopName("pWoVUZ2RKfXvz9jVrlQSyF0iw2AIOZGaZx20ZUBiJeI3stX7kw4Q1b2h71DdaxHtdhm7w1lAgHdIQ6mUFF8x486T83d7S8dgovXdAdNT3ipk85Pn6fsG")
                .shopId("19d16654-437d-426a-9762-22b3b43a6e8f")
                .lowerLimitAmount(2736)
                .upperLimitAmount(9511)
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test10() throws ConnectionError, ProcessingError {
        Request request = new ListBills()
                .privateMoneyId("ad360f82-7100-486a-862f-4711a7ccae0a")
                .organizationCode("47--2--V-2--Mtn-8ZM-")
                .description("6AZwf97HHeOkMZXPamV2CftoLFOU9xa1qE1CKPeYlzKg3DNYnVJx07ZClkOa4oJEEoAzEcHeZWPBYvts2aWUtN4xxkjLI8AHP00r5ewmnjOnswItMN2CXMrrVJIFk")
                .createdFrom("2020-05-08T10:17:33.000000+09:00")
                .createdTo("2021-05-07T01:01:56.000000+09:00")
                .shopName("m5AKoJa4PMIlfgNHGPBkGNN10ZaKgCMBDjTO9INJTgMpRDqwBtJD6LXRHAPbJrDSNioJ2JMzjCpzGyFBJbNMaotugZbJSPkZmNzqfjBlQ0wXcbRPmvgvvPYuSZZvth5ul7AGsqovfYkNdHNZ8oOH8p4sX0b6zFUJS0lqpAa37ekXUBSXuFjEUSsvgftLLvVEjybuz")
                .shopId("057d8682-794a-49a9-81a6-4db512a803a4")
                .lowerLimitAmount(5520)
                .upperLimitAmount(7901)
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test11() throws ConnectionError, ProcessingError {
        Request request = new ListBills()
                .billId("UAtknhhyWh")
                .privateMoneyId("e4a87998-a216-42dc-950d-31bd0b94823b")
                .organizationCode("1-5-bcW7x-h1")
                .description("TpWzLmC1HP0QK1Jf2NgEAjrzmKDCpJBIKJ2FLhFvCN9EIFwSs3b367zexXPMZJ55aOGHmlXSBpifTXDQjtLZZKtnSSU94dB1FmPxikonDD1HL9G585YGGV8mvl5c86E4H0A7oboIyknMkt")
                .createdFrom("2023-04-23T01:16:20.000000+09:00")
                .createdTo("2022-09-26T12:01:17.000000+09:00")
                .shopName("ttOjWuWzwFaFBRwPLllPAuMgV83wcBlmWtUH40NLpUKfpfllgzJSkYIaUDfnu1qYKnG")
                .shopId("34fc4a9d-0874-45b8-8885-d8cf7f150f26")
                .lowerLimitAmount(4784)
                .upperLimitAmount(522)
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test12() throws ConnectionError, ProcessingError {
        Request request = new ListBills()
                .perPage(7382)
                .billId("v2F")
                .privateMoneyId("01463392-caf1-4629-9c22-5ae1a9e4ff1d")
                .organizationCode("ZAbO-z-")
                .description("JqJGMZi2vKH")
                .createdFrom("2021-05-10T13:27:10.000000+09:00")
                .createdTo("2024-05-25T18:51:55.000000+09:00")
                .shopName("NGaM6673uh2Zzy8xnx4E5EXGlB45uCoXUXAH9Cw8UswREJcSK67bEtoArwDbzwjhYFz0LH6Ns05fkFDpXF4jtWq8dclRgY1VeQ6aZ5evTXRo4KTIt1z1HNb98s4SwCE1UScXkkxPMVLi39j0kZ5B2D11F6BucEVETkR5GIeduEbKXQx8JduQVvBMBDlGVTUQxP")
                .shopId("7061f54e-c53a-4989-ae5f-91648ac089da")
                .lowerLimitAmount(4194)
                .upperLimitAmount(7512)
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test13() throws ConnectionError, ProcessingError {
        Request request = new ListBills()
                .page(7209)
                .perPage(2535)
                .billId("7")
                .privateMoneyId("9a7e9296-1048-490f-a9f6-0e7ae7389132")
                .organizationCode("Wgny-dv-7")
                .description("tAV")
                .createdFrom("2023-05-31T23:28:36.000000+09:00")
                .createdTo("2022-11-12T00:29:43.000000+09:00")
                .shopName("vxfXP2XzYPrgZiCdjdCTBw9WeNJWP")
                .shopId("143c8596-79aa-4eb1-87ec-53450df88045")
                .lowerLimitAmount(1283)
                .upperLimitAmount(6278)
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
