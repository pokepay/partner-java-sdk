// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.ListBills;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class ListBillsTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new ListBills();
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new ListBills()
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new ListBills()
                .upperLimitAmount(1576)
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new ListBills()
                .lowerLimitAmount(647)
                .upperLimitAmount(6303)
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new ListBills()
                .shopId("044512f6-b28c-47bf-8aae-93276e6d7096")
                .lowerLimitAmount(4516)
                .upperLimitAmount(8025)
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new ListBills()
                .shopName("b2Bxk8Llgc04UR1ZEGicxNnAkxw94vbRKasMVjZsiPRcIToqzhOo55T3JTFerg82wFxmzM7tb0BiNdJ47xNE1UvMz8QtqkHTI2kT9QU5AsukdC6nKd582v9gAUashM9zI5lXg248Miru5qVyelvmGvZEmJIx09I1aw7AToYjyiKZIsfbM837NpDNueQd0sROe9i8R1mqjKuOPDZ28WeWGwG4PqFMKMdJ11gQlHTpQ9ZjAt7YouMHzT")
                .shopId("1a73d029-aed2-4cc0-a545-3b4d81ce10f7")
                .lowerLimitAmount(8575)
                .upperLimitAmount(5712)
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new ListBills()
                .createdTo("2016-01-09T16:25:37.000000+09:00")
                .shopName("YYpZ5yQyDlB3DPgS5A788OLqirt2lBEvCfZnRTFq8AoWOf0dn9KyCT0f9AAnT")
                .shopId("d258f325-00e7-47ce-a565-315cb98b110f")
                .lowerLimitAmount(6574)
                .upperLimitAmount(4930)
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new ListBills()
                .createdFrom("2022-06-12T13:15:23.000000+09:00")
                .createdTo("2016-03-07T18:28:32.000000+09:00")
                .shopName("wu5jGodVuifBCBP1wPvRrCvaYLi9Wna9Lt4Hg7NIXpWUbQDC8yrGLIftJxZKd3hoEqWazkcb6jOqGn1BCfNpr1gPVGesL16c3WO8rvZxeXRJh2EcfRQ1P0ogs15uXrMKh4opGarTI84nLeMAjMXmtxjxxXqSOtaAbZ9Hn9FkPlyLXC1fgSIdhMKWnFNGnH")
                .shopId("f2ab2936-e03c-4e2c-ba5a-3bee410e4c80")
                .lowerLimitAmount(6189)
                .upperLimitAmount(286)
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new ListBills()
                .description("iFcHf1LjqUJMVpNLzn1mgMlCESayiJWTMigrNwV49nDvc3uT6EiwvaOk25otjqJZyxk5fVzC0M9dVc6RJCLzylg2UBElYlPYEVFtPzRbmI3nDUKfjXJtbjb8NjIdDY9hp4n5QbFCQbmE4QhjgPrmhSn")
                .createdFrom("2020-01-21T01:48:33.000000+09:00")
                .createdTo("2021-04-03T09:01:59.000000+09:00")
                .shopName("5ojO4wXr0VyJVKABk5KUuwT83Vu9oL8OkZFEzOmJP7WuoRMTN3Nxmbw")
                .shopId("5df7052c-dcc4-41b6-8c70-6cb55b218eec")
                .lowerLimitAmount(9152)
                .upperLimitAmount(9756)
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test9() throws ConnectionError, ProcessingError {
        Request request = new ListBills()
                .organizationCode("88Kd165QfTV-39-")
                .description("XHGUVN3TcoeRAKZ5VyVy1ZvgwUsaJm6O4gvey7juIBAV1GJ7Eh2riKvsQOArFsj8pPOQVOHoagSn5Um78Ov")
                .createdFrom("2023-09-03T22:50:02.000000+09:00")
                .createdTo("2024-01-03T05:26:08.000000+09:00")
                .shopName("F4Aw2wPgSlFTjq3KPo6UApcuYf92YVt73XhU05gZ7zdkP0m1PwrtmKZ8AA5ohPnjPtoWu4h4fT8RC5UMlL7wodad86dLerlaT588Nld2jPwucIfmfFww2L3OtkZkr4R9lAjsuBEM8YI1ruk4cMH01Acx9Rc9aG55xFeG0IE40X16RMwyCfefTBENB")
                .shopId("6fa04e14-5592-49ac-888e-8136c8a4ceb6")
                .lowerLimitAmount(8332)
                .upperLimitAmount(928)
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test10() throws ConnectionError, ProcessingError {
        Request request = new ListBills()
                .privateMoneyId("21f013b2-631a-4c2d-b0d8-2bfb440aa5dc")
                .organizationCode("FpR-f-F3Y5x-2aIk--K-H--")
                .description("dMEBj5IAzqfTS3CqBH43SHyxLMN7FTnOdgJ3p6nPSMNRiuvGm738DnRP15LWzAcpK2EA7jJhXT9")
                .createdFrom("2019-04-15T05:49:03.000000+09:00")
                .createdTo("2018-05-07T20:41:24.000000+09:00")
                .shopName("TRuwUy3HtljiMlrSaeYYa9Z9HQVesbceN19RwiN6iSqScGJd7luYWbqFbYiTN7EjN0sDI7fM5wVsRWGr4hq1z50nrxmQpQxyzNakfQvB45tL56VivnLmVBt2qJvSQBYoUUWYJb")
                .shopId("d5a4a093-f4f4-4ec8-b9b8-273c4f8b743a")
                .lowerLimitAmount(4959)
                .upperLimitAmount(2288)
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test11() throws ConnectionError, ProcessingError {
        Request request = new ListBills()
                .billId("ca")
                .privateMoneyId("4bf7755c-301d-4d92-b244-65bd618611d2")
                .organizationCode("39-c2Y1-6E--9z-r24Av0u59N")
                .description("v1PkV50lkZvFTAb1zi8rg8ifls4phosiArTmg4hrO2WOlgCBgpBszCdjBQcmSHHZAHu1X47RzDRXrLNjeN4H0algZxXL139XXDhhHao4tuBSVCmtGCU4ItI92X473ekQW07Ra60eYNHy4L00cHiOuKsDwFfJDgi6NxIRHQgl0Z6hljLgNebZ6QfSFSYFLP8K1")
                .createdFrom("2023-11-16T03:12:27.000000+09:00")
                .createdTo("2020-11-02T03:34:00.000000+09:00")
                .shopName("c1rgDHU8bc9goiJqEIvZOegUiJPfeM590JAFm8H7hZItZP7kubakxTdgLz0tzOQPfTTp057TvLpxiOZLtmgHtxN8pxPbZm9")
                .shopId("054563a3-76ea-4ad1-8544-563c6bb0ff26")
                .lowerLimitAmount(9170)
                .upperLimitAmount(5923)
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test12() throws ConnectionError, ProcessingError {
        Request request = new ListBills()
                .perPage(6846)
                .billId("ZUqRt3H")
                .privateMoneyId("f3e31a6c-5e95-4781-885f-e15974f93748")
                .organizationCode("OAd")
                .description("Hx4HSlhOGHN6yj9sIOXGAz6LHrfI5l4NHbnQQMtQSzK9uo6OIeIbkZVjVDFe1nreYVy1DkXftjjnpLe45Vz2xVMhDgo0kaeZHrnvivjCaNW68ZuTLzv05X24jnOMF7N49OcmgVSVD44y7itvX3D7DCzobuZHT8j")
                .createdFrom("2022-12-20T20:47:30.000000+09:00")
                .createdTo("2025-01-13T09:14:37.000000+09:00")
                .shopName("0iv5JCIl2R0czhS3C3XFpG17UpToznICCmOuoaXEea28XT34Ii1zq1AVbNFE7TlzianzgbhcsnW4LBv83exCaOL9vwTSmXwzF8wHWQYQaJO82kUiK4RL8YcddgHYVOexd4ADQQ8zRT7Lqe0Juj8qrYOb4ChKV8bmpiPHAUO0gskqZSFivFZkWXElMAXGrucNpUyWYz4k9da78kPCZiQJe")
                .shopId("c26126e7-4c35-4e93-8351-675231c74e4d")
                .lowerLimitAmount(7801)
                .upperLimitAmount(3179)
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test13() throws ConnectionError, ProcessingError {
        Request request = new ListBills()
                .page(4631)
                .perPage(4927)
                .billId("T1nKPOyu")
                .privateMoneyId("c608d7f9-3287-4d59-a6de-04bbac3d8f26")
                .organizationCode("9K4t-QD-F51u-a--1o-8q2f-abE")
                .description("NRLBoKKROcW5HZMXRzNGpZUOPSxJzHmldFfZIeLnOjM50aytzBkUbLVJBMaU0OLkYwn5ycjkQWrmIV2JhWKWP8ezWEbEvT9THGLM5M4RXhjsTAx9mFPmLTtKfRLj52cqLv8rfcw71GKyz2wlj0")
                .createdFrom("2022-04-22T23:51:55.000000+09:00")
                .createdTo("2016-02-17T10:44:59.000000+09:00")
                .shopName("co5ZdCFwUsylSl2vuOPABzO6o92t1Fz4ooJxM9vY10fRUPO499n5aV7B0W7INDfzjFLlvqa44E4y89GkX9mjXQcVOJJzGSrIY7uXO2DNRwOhvWoj4zPzhOg87ZArE7smsf0TnBXgREevWm9oP1WFHoQnCeDRhzLoaVTeF9CL8VPNtoiOc15cRN1qQX0RLToszV1eVmzTG0JYvgv48GmpltVrz7o4fQqw5y8h")
                .shopId("f91994a1-2e7c-442d-941d-8dbdfbf2a52b")
                .lowerLimitAmount(4608)
                .upperLimitAmount(5851)
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
