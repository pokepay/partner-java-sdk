// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.ListBills;
import jp.pokepay.partnerapi.request.Request;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class ListBillsTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new ListBills();
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new ListBills()
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new ListBills()
                .upperLimitAmount(4340)
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new ListBills()
                .lowerLimitAmount(5875)
                .upperLimitAmount(7426)
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new ListBills()
                .shopId("a528ea17-5276-4078-b2f7-e25d41c50ada")
                .lowerLimitAmount(4481)
                .upperLimitAmount(5923)
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new ListBills()
                .shopName("mHOMPLsP0An")
                .shopId("0b3f1f69-916e-4d8e-8e20-164fe1ce4f19")
                .lowerLimitAmount(6011)
                .upperLimitAmount(883)
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new ListBills()
                .createdTo("2016-04-27T06:01:23.000000+09:00")
                .shopName("2MZqK8g4QUvqVt00dTeYp5XZteZXs2MMBjD3C")
                .shopId("ea44ca5e-9bce-4323-936f-ce89658f6b32")
                .lowerLimitAmount(4959)
                .upperLimitAmount(2830)
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new ListBills()
                .createdFrom("2022-05-07T11:43:51.000000+09:00")
                .createdTo("2024-03-10T07:22:06.000000+09:00")
                .shopName("yoPL3nxzez6EzblXZB8XmaR2ewKe6fqDMW4aUqslK3e59cj7cqcBFAGFdF7PpvaFYgvySkem9iRtEPSVLS4Jd8eRaR2nUn3nYSkoc7KjQTCeL2WkD1JA0fldlwzVQAEiVJsTexjxVxsY1SAXGrQj3RQvS2ug6")
                .shopId("8dd84124-6e7a-4f02-8937-9edc8563dd3a")
                .lowerLimitAmount(8041)
                .upperLimitAmount(8976)
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new ListBills()
                .description("wr5CURQA7neSrCa0EsS")
                .createdFrom("2017-04-06T18:42:56.000000+09:00")
                .createdTo("2018-08-31T09:34:43.000000+09:00")
                .shopName("kuXKjuHe27dGYd4XKK6gluVHBcgHDrk8CnIaU9KR5wJRoFTN1X9Ioz9AxiBrzodSlsDoRwBsKMoXHYnvgJzGzJRySKZ82Y4Gn1ARlHlAR2edk0985OQmA3x2ObCghzYVwoCssIOwYiokGLVRUgHioxqK0Jm56MAzN1uUl1SkXjMYX8Ecl41Xk9JubAwDicEW8")
                .shopId("ee45d322-0811-44ed-96b1-51b8fa58c546")
                .lowerLimitAmount(1475)
                .upperLimitAmount(9732)
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test9() throws ConnectionError, ProcessingError {
        Request request = new ListBills()
                .organizationCode("3")
                .description("KUPNenkXQoS8ISiIRu9zmV9T0H7lIX5CFltsUU6PUfVkVHE2XENKuRHEpUT9LS9UGsnpK74pBHo8x25saIA4iFFz")
                .createdFrom("2021-10-16T16:17:30.000000+09:00")
                .createdTo("2021-06-12T03:04:04.000000+09:00")
                .shopName("Ls")
                .shopId("77371441-f831-40b2-aeb3-2d21ab0e9db9")
                .lowerLimitAmount(9943)
                .upperLimitAmount(456)
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test10() throws ConnectionError, ProcessingError {
        Request request = new ListBills()
                .privateMoneyId("fac74b1a-1b0d-42d6-ae1c-06c0005267a7")
                .organizationCode("UkcpyCVc--UTr-yfT-o8EX4jf")
                .description("FK2xTerAaAYSrlPnxcSb077U98ixIMPOlmgnPprLQOjnDTJJyaTn5ZGriVVUvhKEIqVNprT5XH")
                .createdFrom("2021-01-07T22:05:50.000000+09:00")
                .createdTo("2023-05-24T01:26:38.000000+09:00")
                .shopName("CQvZK85dMbtGVATrRHL2HKwVs6Z9s9m0Tz3WvyKN2BfVcaxPqBoBn85DqOnyZGdhQrzrDmPIEsSCfYRFAwJo0EjbtvdRc6jNHAlGNcuEGTPrVmDQaHAAryuI8DRrMRn5CXVDi2lekXktw3p6Ok3OhPUmDqP6dmK3b99ME9wTQ1pDVq68Mq4PXD0VFLzem2VJBzeVyqLf8R")
                .shopId("1e8f6a06-c357-4d8e-a4b3-71546c03d8b2")
                .lowerLimitAmount(4213)
                .upperLimitAmount(5655)
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test11() throws ConnectionError, ProcessingError {
        Request request = new ListBills()
                .billId("a")
                .privateMoneyId("609652a4-5962-4aee-a323-acb7d102e660")
                .organizationCode("zcGE-596X--SY-40I-i0Da")
                .description("DN5tb2sNUrsg9n6qqAcNBvqHt75kqCh30FcNYFXE9Z55qvW2rwWlpmIKF0EtZ6Dk9DKmaAmbNrq8NJbc8GE1YeyV8lqp6")
                .createdFrom("2024-11-21T02:17:26.000000+09:00")
                .createdTo("2019-12-25T00:01:58.000000+09:00")
                .shopName("ZgslJSkkcJB2SsKlnKnY83BLAdX8N7yjGQKnxmtYV8i8Ca3uihttlmG3E25Cs0wmanbkqN8v6hbKnYsAcnGxAfOzHvXT")
                .shopId("8a194c87-4e95-4cc3-81c9-05d2bc956a59")
                .lowerLimitAmount(3167)
                .upperLimitAmount(7244)
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test12() throws ConnectionError, ProcessingError {
        Request request = new ListBills()
                .perPage(1410)
                .billId("UISRE57bc")
                .privateMoneyId("b7c2e09f-e2a0-4751-ad99-97db9292cec1")
                .organizationCode("P31ye-W5wY-h2O2")
                .description("t8eNyOMT1enWmJX9iiFrE416D0iCwSY2w8S52ClWV6Nj8On9A4FDMnAzc02Wmp5u7LawuehaBf7r7bX934hO0Xx98yJyUgA5qXi7zsoc")
                .createdFrom("2023-03-07T10:41:46.000000+09:00")
                .createdTo("2025-02-13T13:08:04.000000+09:00")
                .shopName("6R5Z6NYN8e82lSeezYChhCXjPr7cICxTo9DfUeMGa5nYhTwL8dLE9oKc2nPUxQ1VcQOtDlVbr6IvwA5WNal7JDJ1mhzRMEQB3Diqb9XRNsvDs56yEie8FRgI")
                .shopId("a71f1a3a-ccfd-4987-ae74-cbf9eb2de9eb")
                .lowerLimitAmount(8155)
                .upperLimitAmount(8760)
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test13() throws ConnectionError, ProcessingError {
        Request request = new ListBills()
                .page(2777)
                .perPage(7378)
                .billId("fB7zz")
                .privateMoneyId("a9084cd4-3785-4032-a9c2-580d15d8040a")
                .organizationCode("C8D1-")
                .description("abx8TFxdLoU5zFPMC0l2aBAFnF7HuYd0gVRG5DI2ZAObWeHcUBYg40l1zyVYt9f5MRRemfqszl6xwSOK4Y5jS31d8lM4q6Ba0vrtHOQMKCwualIiBYkTAex1jgvqwuVOUI2XYRJRdgVH")
                .createdFrom("2018-04-16T18:25:12.000000+09:00")
                .createdTo("2021-03-12T18:58:31.000000+09:00")
                .shopName("FjZq2ykOfTSoHI2NWejKY729heI2RRVQuXnaWWs0MAvLL0XxLB87cj9W7bU1XtGokXpm8Y7tfYisRAIbCN9ctfvrGV0nRbTzBGz4xra9C5ZvT4qpOCo3GBI9uE6aiYW7GUMQCefklBioghn3zpjDmpMXATHk2QfwENOVstbAwymeEe5Fh06wjG7vGW6zvxv2lswZyOHMajlWxSobo")
                .shopId("1ddb5a5d-e0d0-4d23-bda0-f99bedc5fce1")
                .lowerLimitAmount(8327)
                .upperLimitAmount(9521)
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
