// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.ListChecks;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class ListChecksTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new ListChecks();
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new ListChecks()
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new ListChecks()
                .setOnetime(true)
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new ListChecks()
                .description("G6n0uWz6")
                .setOnetime(false)
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new ListChecks()
                .issuerShopId("f0c2dc57-f881-48df-b9d4-54f2162c54c3")
                .description("vOS8V")
                .setOnetime(false)
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new ListChecks()
                .createdTo("2023-08-31T15:41:51.000000+09:00")
                .issuerShopId("4ced2089-fd27-47e6-b7d9-376ceff281d0")
                .description("rg9")
                .setOnetime(false)
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new ListChecks()
                .createdFrom("2017-11-19T12:11:30.000000+09:00")
                .createdTo("2016-06-24T10:26:57.000000+09:00")
                .issuerShopId("b616b43d-f002-43ca-810a-3bb3ddc103eb")
                .description("0Ot4")
                .setOnetime(false)
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new ListChecks()
                .expiresTo("2022-10-21T20:29:36.000000+09:00")
                .createdFrom("2019-03-07T02:39:28.000000+09:00")
                .createdTo("2017-07-25T16:14:44.000000+09:00")
                .issuerShopId("f7114396-75f2-4151-be05-18c6e4a0be84")
                .description("IOW")
                .setOnetime(false)
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new ListChecks()
                .expiresFrom("2021-02-16T14:11:04.000000+09:00")
                .expiresTo("2020-07-31T10:08:41.000000+09:00")
                .createdFrom("2021-04-18T06:57:20.000000+09:00")
                .createdTo("2017-11-10T09:49:51.000000+09:00")
                .issuerShopId("95af6a73-bc5a-4adc-9360-9cce8f839b8c")
                .description("AM7djY5U")
                .setOnetime(true)
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test9() throws ConnectionError, ProcessingError {
        Request request = new ListChecks()
                .organizationCode("lNEBZu")
                .expiresFrom("2017-04-05T12:14:27.000000+09:00")
                .expiresTo("2016-06-22T21:26:33.000000+09:00")
                .createdFrom("2022-07-14T18:58:56.000000+09:00")
                .createdTo("2018-08-20T17:59:01.000000+09:00")
                .issuerShopId("dbb37711-5c99-401a-8160-b4c32db7d604")
                .description("GO4HDo7")
                .setOnetime(false)
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test10() throws ConnectionError, ProcessingError {
        Request request = new ListChecks()
                .privateMoneyId("543b2262-1258-4588-8c1d-719f7b124c43")
                .organizationCode("6DbvjLAcTCmektIF5BN5r1v7e4oY")
                .expiresFrom("2023-06-25T00:21:46.000000+09:00")
                .expiresTo("2022-06-10T10:40:01.000000+09:00")
                .createdFrom("2016-08-13T13:04:39.000000+09:00")
                .createdTo("2017-04-08T15:00:11.000000+09:00")
                .issuerShopId("eb0e992e-4093-4348-9649-1fafb096dcbd")
                .description("AIQG")
                .setOnetime(true)
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test11() throws ConnectionError, ProcessingError {
        Request request = new ListChecks()
                .perPage(7491)
                .privateMoneyId("de81e474-1198-4cd2-befa-4d5b3cdf2c49")
                .organizationCode("dMuCRsqhzzqriSyq5LVx2q")
                .expiresFrom("2023-02-10T12:58:32.000000+09:00")
                .expiresTo("2017-03-31T19:57:49.000000+09:00")
                .createdFrom("2023-08-23T16:14:35.000000+09:00")
                .createdTo("2018-09-17T08:39:51.000000+09:00")
                .issuerShopId("b6a5c26b-b923-4606-a028-701325441a6b")
                .description("579Tq")
                .setOnetime(true)
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test12() throws ConnectionError, ProcessingError {
        Request request = new ListChecks()
                .page(8967)
                .perPage(7928)
                .privateMoneyId("1869b723-47dd-40d9-b616-908dc1ddb027")
                .organizationCode("vE39mWZbVt")
                .expiresFrom("2023-07-26T02:45:10.000000+09:00")
                .expiresTo("2019-11-20T17:27:20.000000+09:00")
                .createdFrom("2016-12-12T23:45:33.000000+09:00")
                .createdTo("2019-09-27T05:12:03.000000+09:00")
                .issuerShopId("e850394b-d62b-4122-b160-76469dd43cd8")
                .description("yHn7okteZz")
                .setOnetime(true)
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
