// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.ListChecks;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class ListChecksTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new ListChecks();
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new ListChecks()
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new ListChecks()
                .setOnetime(false)
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new ListChecks()
                .description("HfvN")
                .setOnetime(true)
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new ListChecks()
                .issuerShopId("824f4845-0e42-4ee5-b93b-6f9aed921e8d")
                .description("muQoNy")
                .setOnetime(false)
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new ListChecks()
                .createdTo("2021-05-30T15:09:00.000000Z")
                .issuerShopId("45590978-e47c-4182-a468-fd2461ad88d4")
                .description("5YfaNVM")
                .setOnetime(true)
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new ListChecks()
                .createdFrom("2022-03-26T12:35:04.000000Z")
                .createdTo("2023-09-09T15:08:33.000000Z")
                .issuerShopId("2ee6131f-9e6c-47aa-90f8-8892daa7e996")
                .description("y8RqwFWTQ")
                .setOnetime(true)
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new ListChecks()
                .expiresTo("2023-06-22T16:39:13.000000Z")
                .createdFrom("2020-08-30T19:09:28.000000Z")
                .createdTo("2023-01-14T06:34:30.000000Z")
                .issuerShopId("4c653398-31ff-4598-96a9-78175aebfe2c")
                .description("t9bN2zIxN")
                .setOnetime(true)
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new ListChecks()
                .expiresFrom("2022-04-04T02:54:52.000000Z")
                .expiresTo("2023-10-18T14:58:00.000000Z")
                .createdFrom("2024-02-29T06:11:35.000000Z")
                .createdTo("2024-05-26T09:48:55.000000Z")
                .issuerShopId("84674665-ee96-4345-b9ba-b3ba7be1e6ed")
                .description("H")
                .setOnetime(false)
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test9() throws ConnectionError, ProcessingError {
        Request request = new ListChecks()
                .organizationCode("jq6XCvYjxbcuNA5AO")
                .expiresFrom("2023-05-03T18:02:21.000000Z")
                .expiresTo("2024-03-03T17:28:40.000000Z")
                .createdFrom("2022-06-07T10:15:26.000000Z")
                .createdTo("2022-07-03T06:10:02.000000Z")
                .issuerShopId("d8f57297-5792-4f72-aff5-92b64a827d67")
                .description("AXoc")
                .setOnetime(true)
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test10() throws ConnectionError, ProcessingError {
        Request request = new ListChecks()
                .privateMoneyId("eb671e34-e1d5-411d-ab70-1e4f44a63190")
                .organizationCode("UbFxl1xg8SX1voG8Gydqo4fQ7D47J36")
                .expiresFrom("2022-07-01T22:20:09.000000Z")
                .expiresTo("2021-11-13T23:47:35.000000Z")
                .createdFrom("2021-06-27T17:30:00.000000Z")
                .createdTo("2021-02-18T06:13:17.000000Z")
                .issuerShopId("2f3b7966-53b2-4af0-8c02-f16ec0e9bd5c")
                .description("ur")
                .setOnetime(true)
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test11() throws ConnectionError, ProcessingError {
        Request request = new ListChecks()
                .perPage(7561)
                .privateMoneyId("e01cd7fd-8233-46b6-9459-4ed006d08b01")
                .organizationCode("xIzfeirg")
                .expiresFrom("2020-07-24T05:07:03.000000Z")
                .expiresTo("2022-10-21T19:02:47.000000Z")
                .createdFrom("2022-07-02T11:07:26.000000Z")
                .createdTo("2024-06-27T17:05:35.000000Z")
                .issuerShopId("40afd3ca-3598-434b-b567-47cd99546433")
                .description("Qh2JH")
                .setOnetime(true)
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test12() throws ConnectionError, ProcessingError {
        Request request = new ListChecks()
                .page(8480)
                .perPage(2915)
                .privateMoneyId("ab81ec2c-067e-481a-80e9-df9fce761c29")
                .organizationCode("M0oFGn")
                .expiresFrom("2022-04-01T19:33:19.000000Z")
                .expiresTo("2020-07-14T00:47:02.000000Z")
                .createdFrom("2021-05-14T03:58:46.000000Z")
                .createdTo("2023-09-13T07:54:17.000000Z")
                .issuerShopId("d6fcc3c0-3d94-4c18-9cab-0f981ec74d09")
                .description("X9mW4mL")
                .setOnetime(false)
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
