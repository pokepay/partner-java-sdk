// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.ListChecks;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class ListChecksTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new ListChecks();
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new ListChecks()
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new ListChecks()
                .setOnetime(true)
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new ListChecks()
                .description("kLB")
                .setOnetime(true)
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new ListChecks()
                .issuerShopId("15b0c2f6-32d6-44ae-969c-15dc02aebae9")
                .description("THfYAL9")
                .setOnetime(true)
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new ListChecks()
                .createdTo("2022-10-18T16:04:31.000000+09:00")
                .issuerShopId("c2e6311d-f45d-4ef5-bcc7-15937dbbaecb")
                .description("8ggNZASq")
                .setOnetime(false)
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new ListChecks()
                .createdFrom("2020-09-19T09:40:36.000000+09:00")
                .createdTo("2021-01-31T09:58:15.000000+09:00")
                .issuerShopId("96b1203c-ab07-4931-85a3-6aa119dc977c")
                .description("D")
                .setOnetime(true)
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new ListChecks()
                .expiresTo("2021-09-19T13:51:29.000000+09:00")
                .createdFrom("2020-07-28T09:06:50.000000+09:00")
                .createdTo("2023-01-16T12:45:46.000000+09:00")
                .issuerShopId("adee9a80-327d-428c-b1ef-7033e53ceff7")
                .description("0jtqdg")
                .setOnetime(false)
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new ListChecks()
                .expiresFrom("2022-04-23T16:53:37.000000+09:00")
                .expiresTo("2021-03-12T14:51:50.000000+09:00")
                .createdFrom("2022-11-07T09:02:57.000000+09:00")
                .createdTo("2023-10-01T07:50:09.000000+09:00")
                .issuerShopId("d5b8b1b0-aa75-424e-b295-798db629c5c2")
                .description("bxJW")
                .setOnetime(false)
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test9() throws ConnectionError, ProcessingError {
        Request request = new ListChecks()
                .organizationCode("QQbbc5PzZZRQNAU")
                .expiresFrom("2023-10-29T21:05:16.000000+09:00")
                .expiresTo("2020-02-16T13:10:46.000000+09:00")
                .createdFrom("2020-07-04T14:52:23.000000+09:00")
                .createdTo("2023-06-04T02:38:03.000000+09:00")
                .issuerShopId("9054656c-075e-4934-a962-0c3700c1beca")
                .description("Nwx1Ck")
                .setOnetime(false)
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test10() throws ConnectionError, ProcessingError {
        Request request = new ListChecks()
                .privateMoneyId("11e4489c-3ed1-4742-a45d-dd045912f8ca")
                .organizationCode("HjhFHWSABRN6SGouQ9SMtE")
                .expiresFrom("2021-02-25T17:30:30.000000+09:00")
                .expiresTo("2021-09-14T15:54:32.000000+09:00")
                .createdFrom("2021-04-18T00:53:02.000000+09:00")
                .createdTo("2020-02-22T14:51:40.000000+09:00")
                .issuerShopId("44c1aab6-a28e-426e-94e9-fb3918c073a6")
                .description("U")
                .setOnetime(false)
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test11() throws ConnectionError, ProcessingError {
        Request request = new ListChecks()
                .perPage(5733)
                .privateMoneyId("834f0bd6-939b-4bf9-82a8-086b7f13eab0")
                .organizationCode("JR6nee4SQd")
                .expiresFrom("2022-03-01T11:02:26.000000+09:00")
                .expiresTo("2020-02-02T21:26:13.000000+09:00")
                .createdFrom("2024-06-23T22:46:41.000000+09:00")
                .createdTo("2024-07-17T10:58:40.000000+09:00")
                .issuerShopId("c5f5357c-8258-4df4-835d-312737b9277e")
                .description("D2mZU")
                .setOnetime(true)
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test12() throws ConnectionError, ProcessingError {
        Request request = new ListChecks()
                .page(2709)
                .perPage(5365)
                .privateMoneyId("1fab74e3-c380-4b67-be50-e6f0f431170a")
                .organizationCode("EJAh")
                .expiresFrom("2020-01-18T17:12:46.000000+09:00")
                .expiresTo("2023-01-05T15:24:20.000000+09:00")
                .createdFrom("2023-01-02T10:15:12.000000+09:00")
                .createdTo("2020-03-30T22:45:54.000000+09:00")
                .issuerShopId("8e8075cf-b62e-4f79-b285-986349f59192")
                .description("I5")
                .setOnetime(false)
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
