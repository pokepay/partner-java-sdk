// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.ListChecks;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class ListChecksTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new ListChecks();
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new ListChecks()
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new ListChecks()
                .setOnetime(true)
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new ListChecks()
                .description("HR")
                .setOnetime(false)
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new ListChecks()
                .issuerShopId("c09173a9-38c4-47ae-a6cd-1dbf767be412")
                .description("3LCAS")
                .setOnetime(true)
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new ListChecks()
                .createdTo("2020-11-29T18:13:57.000000Z")
                .issuerShopId("a95626e0-cc96-42e5-98b9-08e292a990d9")
                .description("sHOG")
                .setOnetime(true)
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new ListChecks()
                .createdFrom("2021-09-30T14:14:20.000000Z")
                .createdTo("2023-01-10T03:03:49.000000Z")
                .issuerShopId("3ff659a5-a0b3-4a2a-8d85-c516ed220bfc")
                .description("i4")
                .setOnetime(true)
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new ListChecks()
                .expiresTo("2023-04-26T10:51:35.000000Z")
                .createdFrom("2023-09-27T03:56:30.000000Z")
                .createdTo("2022-05-30T20:39:11.000000Z")
                .issuerShopId("a83d2837-4b37-41aa-8abd-0b9bf6620f26")
                .description("RN8AasC")
                .setOnetime(false)
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new ListChecks()
                .expiresFrom("2020-07-04T15:44:08.000000Z")
                .expiresTo("2023-04-23T18:30:13.000000Z")
                .createdFrom("2020-12-04T19:50:30.000000Z")
                .createdTo("2022-06-14T21:14:35.000000Z")
                .issuerShopId("c09b2bad-6cb6-49e7-addd-0a6e4351aa9f")
                .description("uHFpFsNPJm")
                .setOnetime(true)
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test9() throws ConnectionError, ProcessingError {
        Request request = new ListChecks()
                .organizationCode("uH1GHYOOmiUvKwy")
                .expiresFrom("2023-09-04T23:43:12.000000Z")
                .expiresTo("2022-06-02T14:38:33.000000Z")
                .createdFrom("2023-01-01T15:46:03.000000Z")
                .createdTo("2020-06-18T01:18:09.000000Z")
                .issuerShopId("6f04fcd9-d253-4bac-9253-25ef4e15462b")
                .description("K")
                .setOnetime(true)
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test10() throws ConnectionError, ProcessingError {
        Request request = new ListChecks()
                .privateMoneyId("055fb6ce-ce08-4e0a-b55a-3c9826318e47")
                .organizationCode("mU0unMptspEioBBqGcJ")
                .expiresFrom("2023-12-14T08:42:56.000000Z")
                .expiresTo("2022-11-30T14:16:44.000000Z")
                .createdFrom("2021-08-24T14:05:27.000000Z")
                .createdTo("2021-03-13T03:07:07.000000Z")
                .issuerShopId("0f38b0e1-af01-4fd8-a3e0-a8928df81f84")
                .description("pDTPRH")
                .setOnetime(true)
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test11() throws ConnectionError, ProcessingError {
        Request request = new ListChecks()
                .perPage(3853)
                .privateMoneyId("899befc5-fe6c-4be0-ac9b-ccde0397b840")
                .organizationCode("NQrvWUnk17KWA")
                .expiresFrom("2022-08-12T19:43:37.000000Z")
                .expiresTo("2021-07-13T02:37:35.000000Z")
                .createdFrom("2020-04-20T01:38:22.000000Z")
                .createdTo("2021-07-31T11:29:45.000000Z")
                .issuerShopId("f33264e9-eec6-4bc9-8e47-e2e01c125c48")
                .description("shpxz5S2")
                .setOnetime(true)
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test12() throws ConnectionError, ProcessingError {
        Request request = new ListChecks()
                .page(2202)
                .perPage(4497)
                .privateMoneyId("03afc5f2-3a5d-44a1-b485-0daea0b50c43")
                .organizationCode("ar2DsC6IO")
                .expiresFrom("2022-05-13T22:07:21.000000Z")
                .expiresTo("2021-11-23T07:06:20.000000Z")
                .createdFrom("2023-05-22T07:06:37.000000Z")
                .createdTo("2021-05-19T00:39:45.000000Z")
                .issuerShopId("deb706e0-5aaf-4db3-98da-7543ffb37461")
                .description("lZmMT5mAF")
                .setOnetime(true)
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
