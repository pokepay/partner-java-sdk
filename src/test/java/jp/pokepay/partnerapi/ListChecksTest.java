// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.ListChecks;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class ListChecksTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new ListChecks();
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new ListChecks()
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new ListChecks()
                .setOnetime(true)
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new ListChecks()
                .description("rfIL")
                .setOnetime(false)
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new ListChecks()
                .issuerShopId("eda02500-664e-4e38-97fb-26bf47759f9c")
                .description("7")
                .setOnetime(true)
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new ListChecks()
                .createdTo("2023-04-23T01:28:23.000000Z")
                .issuerShopId("dd29802a-5d83-413f-8cfe-74066b7b4bca")
                .description("oY")
                .setOnetime(false)
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new ListChecks()
                .createdFrom("2021-11-04T11:35:54.000000Z")
                .createdTo("2022-11-08T06:35:09.000000Z")
                .issuerShopId("9f6b96c0-dfe2-4138-89f3-a10a20987af0")
                .description("1FcaYx8")
                .setOnetime(false)
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new ListChecks()
                .expiresTo("2021-04-29T11:14:49.000000Z")
                .createdFrom("2024-09-17T11:10:47.000000Z")
                .createdTo("2021-02-14T00:09:23.000000Z")
                .issuerShopId("43529fa7-7637-4992-9e4b-7d816ca05cb2")
                .description("oQE")
                .setOnetime(true)
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new ListChecks()
                .expiresFrom("2023-08-18T13:32:31.000000Z")
                .expiresTo("2020-07-10T20:09:28.000000Z")
                .createdFrom("2024-08-30T22:02:55.000000Z")
                .createdTo("2020-10-04T10:56:49.000000Z")
                .issuerShopId("04c2c0e4-ee76-4c1c-aefa-23874afee603")
                .description("KVxdoit0n")
                .setOnetime(true)
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test9() throws ConnectionError, ProcessingError {
        Request request = new ListChecks()
                .organizationCode("RdkY0a6T9IRy95uKnYj6")
                .expiresFrom("2021-07-21T06:51:59.000000Z")
                .expiresTo("2022-01-15T21:12:06.000000Z")
                .createdFrom("2021-09-02T02:43:46.000000Z")
                .createdTo("2023-08-06T09:38:39.000000Z")
                .issuerShopId("201e2b83-18f1-402d-808e-1dc4c80bd16b")
                .description("4zF")
                .setOnetime(false)
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test10() throws ConnectionError, ProcessingError {
        Request request = new ListChecks()
                .privateMoneyId("c0917074-e8f6-46c1-83a0-1cdd2f6c1e37")
                .organizationCode("t4NS9wkdOXwioDpfXuzoNb")
                .expiresFrom("2022-05-14T21:29:54.000000Z")
                .expiresTo("2023-01-21T02:32:01.000000Z")
                .createdFrom("2023-09-02T13:45:51.000000Z")
                .createdTo("2021-06-27T19:24:57.000000Z")
                .issuerShopId("72a8e55d-15aa-4b75-8b65-52a1880d0eaf")
                .description("j9znX2X")
                .setOnetime(true)
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test11() throws ConnectionError, ProcessingError {
        Request request = new ListChecks()
                .perPage(8559)
                .privateMoneyId("0e65db05-3dc6-4ba5-baac-be51bada5be3")
                .organizationCode("5QEOmdgUm73I2kFc")
                .expiresFrom("2020-01-21T19:39:55.000000Z")
                .expiresTo("2022-05-24T22:27:26.000000Z")
                .createdFrom("2020-09-17T20:59:41.000000Z")
                .createdTo("2021-02-09T18:52:01.000000Z")
                .issuerShopId("77b23aeb-57f3-4a5a-821d-947f9d2f56b6")
                .description("yT3")
                .setOnetime(true)
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test12() throws ConnectionError, ProcessingError {
        Request request = new ListChecks()
                .page(9600)
                .perPage(87)
                .privateMoneyId("a8b8f410-d352-4951-843e-6a37884d22cf")
                .organizationCode("823WFeXCsADfv")
                .expiresFrom("2023-05-11T13:54:21.000000Z")
                .expiresTo("2020-01-13T01:26:13.000000Z")
                .createdFrom("2022-07-02T00:06:35.000000Z")
                .createdTo("2020-01-07T02:30:24.000000Z")
                .issuerShopId("01f62a9d-2753-4b1a-a5ac-4cf43f2ce74a")
                .description("Lu")
                .setOnetime(false)
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
