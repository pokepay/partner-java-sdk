// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.ListCoupons;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class ListCouponsTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new ListCoupons(
            "c7c1451e-406a-4fe6-9898-ca0f9a90b2df"
        );
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new ListCoupons(
            "c7c1451e-406a-4fe6-9898-ca0f9a90b2df"
        )
                .perPage(1091);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new ListCoupons(
            "c7c1451e-406a-4fe6-9898-ca0f9a90b2df"
        )
                .page(1977)
                .perPage(8847);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new ListCoupons(
            "c7c1451e-406a-4fe6-9898-ca0f9a90b2df"
        )
                .availableTo("2023-09-24T05:13:19.000000+09:00")
                .page(357)
                .perPage(6583);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new ListCoupons(
            "c7c1451e-406a-4fe6-9898-ca0f9a90b2df"
        )
                .availableFrom("2020-03-06T05:10:56.000000+09:00")
                .availableTo("2021-09-03T19:52:11.000000+09:00")
                .page(4323)
                .perPage(625);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new ListCoupons(
            "c7c1451e-406a-4fe6-9898-ca0f9a90b2df"
        )
                .availableShopName("e2OjES")
                .availableFrom("2023-10-25T22:10:37.000000+09:00")
                .availableTo("2022-05-20T14:05:35.000000+09:00")
                .page(5330)
                .perPage(2874);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new ListCoupons(
            "c7c1451e-406a-4fe6-9898-ca0f9a90b2df"
        )
                .issuedShopName("yus")
                .availableShopName("dTHWBXuO")
                .availableFrom("2023-06-11T18:41:31.000000+09:00")
                .availableTo("2021-08-25T22:33:24.000000+09:00")
                .page(2507)
                .perPage(4804);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new ListCoupons(
            "c7c1451e-406a-4fe6-9898-ca0f9a90b2df"
        )
                .couponName("ee8DOF")
                .issuedShopName("t3zRYDQY")
                .availableShopName("wZI6N8beth")
                .availableFrom("2020-01-19T07:35:18.000000+09:00")
                .availableTo("2024-06-15T19:00:26.000000+09:00")
                .page(2197)
                .perPage(1355);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new ListCoupons(
            "c7c1451e-406a-4fe6-9898-ca0f9a90b2df"
        )
                .couponId("8")
                .couponName("7W4ykPv5")
                .issuedShopName("WgHpM")
                .availableShopName("0GogRs")
                .availableFrom("2024-01-23T12:31:56.000000+09:00")
                .availableTo("2021-03-03T03:27:10.000000+09:00")
                .page(6355)
                .perPage(1090);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
