// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.ListCoupons;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class ListCouponsTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new ListCoupons(
            "06c0172f-1331-4330-9cc4-82a6dc23657c"
        );
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new ListCoupons(
            "06c0172f-1331-4330-9cc4-82a6dc23657c"
        )
                .perPage(6479);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new ListCoupons(
            "06c0172f-1331-4330-9cc4-82a6dc23657c"
        )
                .page(3758)
                .perPage(445);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new ListCoupons(
            "06c0172f-1331-4330-9cc4-82a6dc23657c"
        )
                .availableTo("2020-08-01T18:29:46.000000+09:00")
                .page(4218)
                .perPage(8391);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new ListCoupons(
            "06c0172f-1331-4330-9cc4-82a6dc23657c"
        )
                .availableFrom("2021-06-30T15:22:38.000000+09:00")
                .availableTo("2020-08-06T11:48:50.000000+09:00")
                .page(9560)
                .perPage(2294);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new ListCoupons(
            "06c0172f-1331-4330-9cc4-82a6dc23657c"
        )
                .availableShopName("jna")
                .availableFrom("2022-08-09T00:46:20.000000+09:00")
                .availableTo("2024-05-17T14:57:23.000000+09:00")
                .page(452)
                .perPage(7741);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new ListCoupons(
            "06c0172f-1331-4330-9cc4-82a6dc23657c"
        )
                .issuedShopName("Vzz81taxM")
                .availableShopName("CF")
                .availableFrom("2022-05-03T06:24:07.000000+09:00")
                .availableTo("2021-02-22T15:24:09.000000+09:00")
                .page(4144)
                .perPage(9131);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new ListCoupons(
            "06c0172f-1331-4330-9cc4-82a6dc23657c"
        )
                .couponName("wmKVPRmvC")
                .issuedShopName("gD")
                .availableShopName("VSrCi")
                .availableFrom("2024-05-03T23:25:53.000000+09:00")
                .availableTo("2024-08-07T16:22:02.000000+09:00")
                .page(5990)
                .perPage(2853);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new ListCoupons(
            "06c0172f-1331-4330-9cc4-82a6dc23657c"
        )
                .couponId("0bjxoH2")
                .couponName("EE8t")
                .issuedShopName("KiBrLA87i")
                .availableShopName("O27K7")
                .availableFrom("2020-06-29T23:06:16.000000+09:00")
                .availableTo("2024-06-28T00:25:57.000000+09:00")
                .page(3653)
                .perPage(5993);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
