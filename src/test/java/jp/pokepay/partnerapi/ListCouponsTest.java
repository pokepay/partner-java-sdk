// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.ListCoupons;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class ListCouponsTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new ListCoupons(
            "ce18681e-5c83-427d-b862-0de280711893"
        );
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new ListCoupons(
            "ce18681e-5c83-427d-b862-0de280711893"
        )
                .perPage(8608);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new ListCoupons(
            "ce18681e-5c83-427d-b862-0de280711893"
        )
                .page(8394)
                .perPage(9522);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new ListCoupons(
            "ce18681e-5c83-427d-b862-0de280711893"
        )
                .availableTo("2023-12-24T18:42:20.000000Z")
                .page(369)
                .perPage(1597);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new ListCoupons(
            "ce18681e-5c83-427d-b862-0de280711893"
        )
                .availableFrom("2023-12-02T09:22:37.000000Z")
                .availableTo("2021-07-05T19:20:23.000000Z")
                .page(804)
                .perPage(537);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new ListCoupons(
            "ce18681e-5c83-427d-b862-0de280711893"
        )
                .availableShopName("NkX1wbt")
                .availableFrom("2020-05-03T12:17:12.000000Z")
                .availableTo("2021-09-16T20:37:30.000000Z")
                .page(7209)
                .perPage(8097);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new ListCoupons(
            "ce18681e-5c83-427d-b862-0de280711893"
        )
                .issuedShopName("h4XHkBbx")
                .availableShopName("0Rn")
                .availableFrom("2021-05-10T03:01:31.000000Z")
                .availableTo("2020-05-26T09:28:44.000000Z")
                .page(117)
                .perPage(1374);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new ListCoupons(
            "ce18681e-5c83-427d-b862-0de280711893"
        )
                .couponName("rGJS2N5S6E")
                .issuedShopName("EO5Bp0T")
                .availableShopName("aBrmndiCNx")
                .availableFrom("2023-10-31T02:15:52.000000Z")
                .availableTo("2022-11-25T09:52:24.000000Z")
                .page(5377)
                .perPage(9080);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new ListCoupons(
            "ce18681e-5c83-427d-b862-0de280711893"
        )
                .couponId("aRAeTxf")
                .couponName("0YQCHz")
                .issuedShopName("OG8zcqkOx")
                .availableShopName("GcWZjjM6j3")
                .availableFrom("2022-02-02T14:30:51.000000Z")
                .availableTo("2022-08-14T20:03:11.000000Z")
                .page(5094)
                .perPage(2991);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
