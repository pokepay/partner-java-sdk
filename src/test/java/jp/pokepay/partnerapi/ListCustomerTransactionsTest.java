// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.ListCustomerTransactions;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class ListCustomerTransactionsTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "9aeda297-0da1-408d-a7da-43b4395e855b"
        );
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "9aeda297-0da1-408d-a7da-43b4395e855b"
        )
                .perPage(9126);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "9aeda297-0da1-408d-a7da-43b4395e855b"
        )
                .page(1038)
                .perPage(2713);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "9aeda297-0da1-408d-a7da-43b4395e855b"
        )
                .to("2025-01-06T23:21:15.000000+09:00")
                .page(2285)
                .perPage(5996);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "9aeda297-0da1-408d-a7da-43b4395e855b"
        )
                .from("2023-08-13T08:09:24.000000+09:00")
                .to("2023-12-21T03:21:30.000000+09:00")
                .page(1643)
                .perPage(402);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "9aeda297-0da1-408d-a7da-43b4395e855b"
        )
                .setModified(true)
                .from("2021-12-14T02:01:22.000000+09:00")
                .to("2020-05-11T17:28:34.000000+09:00")
                .page(1318)
                .perPage(3519);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "9aeda297-0da1-408d-a7da-43b4395e855b"
        )
                .type("exchange")
                .setModified(true)
                .from("2024-12-02T20:58:36.000000+09:00")
                .to("2016-11-07T11:19:15.000000+09:00")
                .page(8620)
                .perPage(1983);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "9aeda297-0da1-408d-a7da-43b4395e855b"
        )
                .receiverCustomerId("825cb285-ed59-4d79-9c99-71d588823b92")
                .type("expire")
                .setModified(false)
                .from("2015-11-30T10:43:39.000000+09:00")
                .to("2019-07-05T23:30:23.000000+09:00")
                .page(5913)
                .perPage(9914);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "9aeda297-0da1-408d-a7da-43b4395e855b"
        )
                .senderCustomerId("180e68c2-ec35-4a0d-a87d-9bbb6ae12140")
                .receiverCustomerId("5404cc2a-38f4-49e7-8e26-d8c92c3622c4")
                .type("topup")
                .setModified(false)
                .from("2020-09-11T12:12:34.000000+09:00")
                .to("2017-07-29T03:27:10.000000+09:00")
                .page(5391)
                .perPage(7594);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
