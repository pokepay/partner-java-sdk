// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.ListCustomerTransactions;
import jp.pokepay.partnerapi.request.Request;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class ListCustomerTransactionsTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "0c4ae0e3-20a6-452b-ae04-d73b75bac4a1"
        );
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "0c4ae0e3-20a6-452b-ae04-d73b75bac4a1"
        )
                .perPage(5064);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "0c4ae0e3-20a6-452b-ae04-d73b75bac4a1"
        )
                .page(1347)
                .perPage(3974);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "0c4ae0e3-20a6-452b-ae04-d73b75bac4a1"
        )
                .to("2021-01-20T13:42:04.000000+09:00")
                .page(6902)
                .perPage(1255);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "0c4ae0e3-20a6-452b-ae04-d73b75bac4a1"
        )
                .from("2018-02-21T16:33:11.000000+09:00")
                .to("2022-12-23T09:50:02.000000+09:00")
                .page(3648)
                .perPage(8655);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "0c4ae0e3-20a6-452b-ae04-d73b75bac4a1"
        )
                .setModified(false)
                .from("2016-11-13T21:18:26.000000+09:00")
                .to("2016-09-01T13:40:05.000000+09:00")
                .page(834)
                .perPage(1391);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "0c4ae0e3-20a6-452b-ae04-d73b75bac4a1"
        )
                .type("fij6TH")
                .setModified(true)
                .from("2017-10-31T06:31:08.000000+09:00")
                .to("2018-10-16T18:50:12.000000+09:00")
                .page(2538)
                .perPage(5612);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "0c4ae0e3-20a6-452b-ae04-d73b75bac4a1"
        )
                .receiverCustomerId("dfc5a242-9910-4e02-8acf-8107b715e8eb")
                .type("D3FvwnaI0")
                .setModified(false)
                .from("2017-08-06T21:12:03.000000+09:00")
                .to("2016-04-09T13:38:01.000000+09:00")
                .page(688)
                .perPage(1429);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "0c4ae0e3-20a6-452b-ae04-d73b75bac4a1"
        )
                .senderCustomerId("36c35690-a157-4c23-9214-cf5b523ae08d")
                .receiverCustomerId("af934892-343c-4a8a-90ed-9c6d61dbfaa8")
                .type("gc1KGh")
                .setModified(false)
                .from("2023-11-16T02:30:13.000000+09:00")
                .to("2024-02-20T03:41:55.000000+09:00")
                .page(1532)
                .perPage(4949);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
