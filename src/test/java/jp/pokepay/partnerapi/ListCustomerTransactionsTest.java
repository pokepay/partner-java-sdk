// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.ListCustomerTransactions;
import jp.pokepay.partnerapi.request.Request;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class ListCustomerTransactionsTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "4ccce7aa-20a7-4f51-ab80-5881d8c043e8"
        );
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "4ccce7aa-20a7-4f51-ab80-5881d8c043e8"
        )
                .perPage(3769);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "4ccce7aa-20a7-4f51-ab80-5881d8c043e8"
        )
                .page(5727)
                .perPage(546);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "4ccce7aa-20a7-4f51-ab80-5881d8c043e8"
        )
                .to("2022-03-27T15:00:35.000000Z")
                .page(5419)
                .perPage(1275);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "4ccce7aa-20a7-4f51-ab80-5881d8c043e8"
        )
                .from("2022-10-10T01:15:09.000000Z")
                .to("2017-11-18T14:55:30.000000Z")
                .page(3942)
                .perPage(4322);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "4ccce7aa-20a7-4f51-ab80-5881d8c043e8"
        )
                .setModified(true)
                .from("2019-03-09T10:38:07.000000Z")
                .to("2024-10-25T21:14:47.000000Z")
                .page(6676)
                .perPage(2346);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "4ccce7aa-20a7-4f51-ab80-5881d8c043e8"
        )
                .type("0rU")
                .setModified(true)
                .from("2024-05-30T11:29:53.000000Z")
                .to("2017-09-30T11:15:42.000000Z")
                .page(1622)
                .perPage(5756);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "4ccce7aa-20a7-4f51-ab80-5881d8c043e8"
        )
                .receiverCustomerId("d783a8bb-7d3a-4ffe-a0d4-81e00c4ae0e3")
                .type("nGDBsZu")
                .setModified(true)
                .from("2018-02-21T07:33:11.000000Z")
                .to("2022-12-23T00:50:02.000000Z")
                .page(3648)
                .perPage(8655);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "4ccce7aa-20a7-4f51-ab80-5881d8c043e8"
        )
                .senderCustomerId("ed0e598d-4ef6-4f00-a9e6-459dd79243d3")
                .receiverCustomerId("ee2103b9-4341-47bc-aef5-d5e6d749657b")
                .type("ij")
                .setModified(false)
                .from("2021-07-08T07:22:22.000000Z")
                .to("2024-12-16T10:43:12.000000Z")
                .page(6877)
                .perPage(1042);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
