// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.ListCustomerTransactions;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class ListCustomerTransactionsTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "7eea259d-4107-4aa6-80cd-d03fd1b06a3f"
        );
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "7eea259d-4107-4aa6-80cd-d03fd1b06a3f"
        )
                .perPage(8097);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "7eea259d-4107-4aa6-80cd-d03fd1b06a3f"
        )
                .page(7997)
                .perPage(3260);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "7eea259d-4107-4aa6-80cd-d03fd1b06a3f"
        )
                .to("2022-02-02T12:15:47.000000+09:00")
                .page(2410)
                .perPage(1599);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "7eea259d-4107-4aa6-80cd-d03fd1b06a3f"
        )
                .from("2016-04-20T12:10:31.000000+09:00")
                .to("2021-10-27T15:27:07.000000+09:00")
                .page(5400)
                .perPage(7264);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "7eea259d-4107-4aa6-80cd-d03fd1b06a3f"
        )
                .setModified(true)
                .from("2021-08-16T22:58:15.000000+09:00")
                .to("2025-04-22T06:58:26.000000+09:00")
                .page(2373)
                .perPage(3280);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "7eea259d-4107-4aa6-80cd-d03fd1b06a3f"
        )
                .type("exchange")
                .setModified(false)
                .from("2020-02-05T04:36:26.000000+09:00")
                .to("2019-09-29T18:31:53.000000+09:00")
                .page(1612)
                .perPage(3229);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "7eea259d-4107-4aa6-80cd-d03fd1b06a3f"
        )
                .receiverCustomerId("6bedb4f8-dd1e-4784-9476-8000c5ceed8a")
                .type("payment")
                .setModified(true)
                .from("2017-08-03T01:29:15.000000+09:00")
                .to("2020-02-06T19:48:00.000000+09:00")
                .page(5382)
                .perPage(8628);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "7eea259d-4107-4aa6-80cd-d03fd1b06a3f"
        )
                .senderCustomerId("9e3fa055-29a6-4d57-a5d3-36fac9126a86")
                .receiverCustomerId("b53022ad-d5db-404b-83da-ba7796b48d76")
                .type("exchange")
                .setModified(false)
                .from("2024-01-05T23:24:44.000000+09:00")
                .to("2017-02-27T04:35:29.000000+09:00")
                .page(8070)
                .perPage(3408);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
