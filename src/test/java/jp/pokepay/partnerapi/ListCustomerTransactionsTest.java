// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.ListCustomerTransactions;
import jp.pokepay.partnerapi.request.Request;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class ListCustomerTransactionsTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "422ed98d-62d2-4517-8531-10711846fb87"
        );
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "422ed98d-62d2-4517-8531-10711846fb87"
        )
                .perPage(3210);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "422ed98d-62d2-4517-8531-10711846fb87"
        )
                .page(6031)
                .perPage(8401);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "422ed98d-62d2-4517-8531-10711846fb87"
        )
                .to("2019-11-20T02:14:38.000000+09:00")
                .page(4763)
                .perPage(7717);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "422ed98d-62d2-4517-8531-10711846fb87"
        )
                .from("2023-04-06T22:20:35.000000+09:00")
                .to("2015-11-28T02:32:52.000000+09:00")
                .page(2030)
                .perPage(6273);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "422ed98d-62d2-4517-8531-10711846fb87"
        )
                .setModified(false)
                .from("2020-10-20T09:05:15.000000+09:00")
                .to("2024-08-07T01:15:21.000000+09:00")
                .page(625)
                .perPage(769);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "422ed98d-62d2-4517-8531-10711846fb87"
        )
                .type("khaasWI8")
                .setModified(true)
                .from("2017-10-05T13:18:59.000000+09:00")
                .to("2016-02-28T04:44:44.000000+09:00")
                .page(595)
                .perPage(9627);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "422ed98d-62d2-4517-8531-10711846fb87"
        )
                .receiverCustomerId("d84a35b6-54b2-4adf-8703-78078f35232b")
                .type("e0ne6pcNR")
                .setModified(false)
                .from("2021-02-21T22:29:24.000000+09:00")
                .to("2016-05-20T21:53:53.000000+09:00")
                .page(5835)
                .perPage(8049);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "422ed98d-62d2-4517-8531-10711846fb87"
        )
                .senderCustomerId("442c42a5-23a6-41f2-a62f-0f46a7a56e44")
                .receiverCustomerId("72c26cdd-99be-480a-b407-2bb7a1fc6e7f")
                .type("gNL9")
                .setModified(true)
                .from("2019-12-31T16:11:29.000000+09:00")
                .to("2022-02-04T22:57:25.000000+09:00")
                .page(394)
                .perPage(8404);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
