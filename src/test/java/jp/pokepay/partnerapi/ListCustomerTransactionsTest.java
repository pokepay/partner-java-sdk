// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.ListCustomerTransactions;
import jp.pokepay.partnerapi.request.Request;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class ListCustomerTransactionsTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "c545adae-8c62-4ad7-96b5-386a4a9810e2"
        );
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "c545adae-8c62-4ad7-96b5-386a4a9810e2"
        )
                .perPage(8796);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "c545adae-8c62-4ad7-96b5-386a4a9810e2"
        )
                .page(5636)
                .perPage(8896);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "c545adae-8c62-4ad7-96b5-386a4a9810e2"
        )
                .to("2023-08-25T07:54:53.000000+09:00")
                .page(1543)
                .perPage(9361);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "c545adae-8c62-4ad7-96b5-386a4a9810e2"
        )
                .from("2017-01-19T09:08:30.000000+09:00")
                .to("2021-10-18T06:12:09.000000+09:00")
                .page(3815)
                .perPage(4419);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "c545adae-8c62-4ad7-96b5-386a4a9810e2"
        )
                .setModified(false)
                .from("2022-08-28T02:43:40.000000+09:00")
                .to("2016-08-23T02:31:01.000000+09:00")
                .page(6893)
                .perPage(7880);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "c545adae-8c62-4ad7-96b5-386a4a9810e2"
        )
                .type("aGy1CoCY")
                .setModified(false)
                .from("2020-02-16T23:34:49.000000+09:00")
                .to("2021-03-26T09:14:17.000000+09:00")
                .page(149)
                .perPage(3315);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "c545adae-8c62-4ad7-96b5-386a4a9810e2"
        )
                .receiverCustomerId("d2a52131-0cc2-4c07-9fde-078b4f498ecc")
                .type("dgsrsB7nf3")
                .setModified(true)
                .from("2019-03-02T16:59:58.000000+09:00")
                .to("2016-09-07T21:37:18.000000+09:00")
                .page(6712)
                .perPage(9655);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "c545adae-8c62-4ad7-96b5-386a4a9810e2"
        )
                .senderCustomerId("ea44fecf-1e59-4271-8c2a-58dad1f57c29")
                .receiverCustomerId("e1ff0268-3de4-41ab-b205-20d64d90785d")
                .type("Z1YQAtf2")
                .setModified(false)
                .from("2020-10-08T19:15:36.000000+09:00")
                .to("2016-03-07T14:03:44.000000+09:00")
                .page(5724)
                .perPage(7654);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
