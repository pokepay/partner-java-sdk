// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.ListCustomerTransactions;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class ListCustomerTransactionsTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "ec30906c-a4c4-4703-b5df-0ca652008481"
        );
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "ec30906c-a4c4-4703-b5df-0ca652008481"
        )
                .perPage(8256);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "ec30906c-a4c4-4703-b5df-0ca652008481"
        )
                .page(2206)
                .perPage(7490);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "ec30906c-a4c4-4703-b5df-0ca652008481"
        )
                .to("2020-01-20T01:11:03.000000Z")
                .page(9694)
                .perPage(9903);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "ec30906c-a4c4-4703-b5df-0ca652008481"
        )
                .from("2020-02-01T11:11:06.000000Z")
                .to("2020-11-08T11:23:32.000000Z")
                .page(5385)
                .perPage(4709);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "ec30906c-a4c4-4703-b5df-0ca652008481"
        )
                .setModified(true)
                .from("2022-10-29T14:50:22.000000Z")
                .to("2021-04-30T22:35:59.000000Z")
                .page(7609)
                .perPage(8380);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "ec30906c-a4c4-4703-b5df-0ca652008481"
        )
                .type("expire")
                .setModified(false)
                .from("2021-08-04T03:54:08.000000Z")
                .to("2022-10-12T21:59:05.000000Z")
                .page(8858)
                .perPage(4413);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "ec30906c-a4c4-4703-b5df-0ca652008481"
        )
                .receiverCustomerId("9087f23e-f2a7-441c-b433-8d14b39040e8")
                .type("payment")
                .setModified(true)
                .from("2020-10-31T17:38:56.000000Z")
                .to("2020-10-11T05:03:35.000000Z")
                .page(5983)
                .perPage(6393);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "ec30906c-a4c4-4703-b5df-0ca652008481"
        )
                .senderCustomerId("1e6c77d7-74a1-40cb-b0a5-1af95b4f3dbc")
                .receiverCustomerId("81f23c66-355d-4806-bbfd-cd9a8c0411d3")
                .type("cashback")
                .setModified(false)
                .from("2021-06-10T12:34:18.000000Z")
                .to("2022-06-18T07:50:48.000000Z")
                .page(6706)
                .perPage(1232);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
