// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.ListCustomerTransactions;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class ListCustomerTransactionsTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "b5efe5f3-e60f-4835-9107-84df8ad00201"
        );
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "b5efe5f3-e60f-4835-9107-84df8ad00201"
        )
                .perPage(301);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "b5efe5f3-e60f-4835-9107-84df8ad00201"
        )
                .page(2545)
                .perPage(303);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "b5efe5f3-e60f-4835-9107-84df8ad00201"
        )
                .to("2024-08-07T07:33:22.000000+09:00")
                .page(8150)
                .perPage(9430);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "b5efe5f3-e60f-4835-9107-84df8ad00201"
        )
                .from("2015-12-25T22:59:38.000000+09:00")
                .to("2018-04-17T17:35:29.000000+09:00")
                .page(7931)
                .perPage(6318);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "b5efe5f3-e60f-4835-9107-84df8ad00201"
        )
                .setModified(true)
                .from("2016-06-25T11:39:49.000000+09:00")
                .to("2021-04-27T04:52:51.000000+09:00")
                .page(5282)
                .perPage(5475);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "b5efe5f3-e60f-4835-9107-84df8ad00201"
        )
                .type("exchange")
                .setModified(false)
                .from("2021-09-29T01:58:50.000000+09:00")
                .to("2017-03-21T03:39:55.000000+09:00")
                .page(1138)
                .perPage(4136);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "b5efe5f3-e60f-4835-9107-84df8ad00201"
        )
                .receiverCustomerId("6ae75707-c9ef-4882-82ad-44debfbe3404")
                .type("transfer")
                .setModified(true)
                .from("2022-01-29T02:41:58.000000+09:00")
                .to("2017-05-06T15:36:58.000000+09:00")
                .page(859)
                .perPage(6050);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "b5efe5f3-e60f-4835-9107-84df8ad00201"
        )
                .senderCustomerId("58c93135-c25f-4bfb-ac1b-48c7a5d5f566")
                .receiverCustomerId("3cc2a4cc-aac9-4c3a-996b-0a4db2fa063a")
                .type("topup")
                .setModified(true)
                .from("2022-01-31T12:09:39.000000+09:00")
                .to("2019-06-19T18:42:07.000000+09:00")
                .page(5971)
                .perPage(1354);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
