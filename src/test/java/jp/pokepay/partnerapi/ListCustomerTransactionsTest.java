// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.ListCustomerTransactions;
import jp.pokepay.partnerapi.request.Request;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class ListCustomerTransactionsTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "c99cf0a7-7828-4b34-b15b-cce4d663237e"
        );
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "c99cf0a7-7828-4b34-b15b-cce4d663237e"
        )
                .perPage(4654);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "c99cf0a7-7828-4b34-b15b-cce4d663237e"
        )
                .page(8073)
                .perPage(8790);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "c99cf0a7-7828-4b34-b15b-cce4d663237e"
        )
                .to("2021-07-22T15:16:18.000000+09:00")
                .page(7526)
                .perPage(4501);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "c99cf0a7-7828-4b34-b15b-cce4d663237e"
        )
                .from("2023-05-29T10:09:30.000000+09:00")
                .to("2025-07-22T11:15:48.000000+09:00")
                .page(8912)
                .perPage(3939);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "c99cf0a7-7828-4b34-b15b-cce4d663237e"
        )
                .setModified(false)
                .from("2021-05-29T04:15:11.000000+09:00")
                .to("2021-04-26T20:15:33.000000+09:00")
                .page(3561)
                .perPage(9272);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "c99cf0a7-7828-4b34-b15b-cce4d663237e"
        )
                .type("Dru")
                .setModified(false)
                .from("2017-06-27T22:40:52.000000+09:00")
                .to("2023-08-26T01:45:58.000000+09:00")
                .page(2037)
                .perPage(1035);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "c99cf0a7-7828-4b34-b15b-cce4d663237e"
        )
                .receiverCustomerId("08998fd1-6ba3-4710-98b3-69760cf4435a")
                .type("FKRF7w7p")
                .setModified(true)
                .from("2024-05-30T18:43:20.000000+09:00")
                .to("2023-08-15T04:21:11.000000+09:00")
                .page(8598)
                .perPage(2404);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "c99cf0a7-7828-4b34-b15b-cce4d663237e"
        )
                .senderCustomerId("5453c93d-a357-4c1e-823f-1539a73224e2")
                .receiverCustomerId("aab550ce-0e00-4952-b751-b4866b2b3285")
                .type("0LABzL")
                .setModified(false)
                .from("2023-10-28T19:30:05.000000+09:00")
                .to("2024-08-16T06:14:31.000000+09:00")
                .page(8168)
                .perPage(5549);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
