// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.ListCustomerTransactions;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class ListCustomerTransactionsTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "e5440eb7-56e5-4515-83a8-e3a66b346db0"
        );
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "e5440eb7-56e5-4515-83a8-e3a66b346db0"
        )
                .perPage(8410);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "e5440eb7-56e5-4515-83a8-e3a66b346db0"
        )
                .page(8947)
                .perPage(7430);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "e5440eb7-56e5-4515-83a8-e3a66b346db0"
        )
                .to("2024-02-13T21:23:35.000000+09:00")
                .page(9279)
                .perPage(9030);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "e5440eb7-56e5-4515-83a8-e3a66b346db0"
        )
                .from("2016-10-07T23:43:08.000000+09:00")
                .to("2018-02-15T22:40:45.000000+09:00")
                .page(4276)
                .perPage(2232);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "e5440eb7-56e5-4515-83a8-e3a66b346db0"
        )
                .setModified(false)
                .from("2021-06-01T06:10:39.000000+09:00")
                .to("2020-11-25T11:11:52.000000+09:00")
                .page(2734)
                .perPage(6480);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "e5440eb7-56e5-4515-83a8-e3a66b346db0"
        )
                .type("expire")
                .setModified(true)
                .from("2024-04-01T14:00:47.000000+09:00")
                .to("2020-12-09T23:41:48.000000+09:00")
                .page(2923)
                .perPage(4819);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "e5440eb7-56e5-4515-83a8-e3a66b346db0"
        )
                .receiverCustomerId("44d1e5c6-8082-4ece-a136-c67f8cf3f71d")
                .type("cashback")
                .setModified(true)
                .from("2016-12-09T07:45:17.000000+09:00")
                .to("2025-02-25T11:48:07.000000+09:00")
                .page(5503)
                .perPage(4757);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "e5440eb7-56e5-4515-83a8-e3a66b346db0"
        )
                .senderCustomerId("274689e9-4268-469b-93a0-be5b18b1a2ff")
                .receiverCustomerId("994b4bbc-fce4-4b7f-ad04-f2483cb2c0a7")
                .type("expire")
                .setModified(true)
                .from("2022-07-17T19:21:02.000000+09:00")
                .to("2023-04-09T08:39:31.000000+09:00")
                .page(4636)
                .perPage(2340);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
