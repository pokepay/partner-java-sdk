// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.ListCustomerTransactions;
import jp.pokepay.partnerapi.request.Request;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class ListCustomerTransactionsTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "37cfd318-007b-4253-b249-07db64eaf29e"
        );
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "37cfd318-007b-4253-b249-07db64eaf29e"
        )
                .perPage(807);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "37cfd318-007b-4253-b249-07db64eaf29e"
        )
                .page(5121)
                .perPage(7202);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "37cfd318-007b-4253-b249-07db64eaf29e"
        )
                .to("2018-11-03T23:20:52.000000Z")
                .page(7990)
                .perPage(5859);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "37cfd318-007b-4253-b249-07db64eaf29e"
        )
                .from("2019-12-05T09:09:45.000000Z")
                .to("2018-06-30T21:46:46.000000Z")
                .page(6101)
                .perPage(3672);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "37cfd318-007b-4253-b249-07db64eaf29e"
        )
                .setModified(true)
                .from("2020-10-01T23:22:01.000000Z")
                .to("2022-05-02T14:26:09.000000Z")
                .page(4040)
                .perPage(6247);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "37cfd318-007b-4253-b249-07db64eaf29e"
        )
                .type("CmZ2vk")
                .setModified(false)
                .from("2017-12-03T10:11:25.000000Z")
                .to("2023-03-14T17:25:49.000000Z")
                .page(5444)
                .perPage(2035);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "37cfd318-007b-4253-b249-07db64eaf29e"
        )
                .receiverCustomerId("44db529b-ded7-487f-bef7-f541624103b7")
                .type("kDmk9acr8t")
                .setModified(false)
                .from("2020-05-25T01:48:37.000000Z")
                .to("2021-04-08T10:16:19.000000Z")
                .page(9749)
                .perPage(724);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "37cfd318-007b-4253-b249-07db64eaf29e"
        )
                .senderCustomerId("8325ccc8-e2f9-4169-862b-4f22fde3c66f")
                .receiverCustomerId("bdcf9ef3-8ebd-42dc-8765-dea5d682c415")
                .type("HqYyK8GIO")
                .setModified(false)
                .from("2018-12-04T03:29:01.000000Z")
                .to("2021-04-15T03:44:40.000000Z")
                .page(7178)
                .perPage(9);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
