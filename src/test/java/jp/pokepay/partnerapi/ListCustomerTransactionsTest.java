// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.ListCustomerTransactions;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class ListCustomerTransactionsTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "fbf34e5c-b131-4778-8208-3d289e0d477c"
        );
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "fbf34e5c-b131-4778-8208-3d289e0d477c"
        )
                .perPage(1705);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "fbf34e5c-b131-4778-8208-3d289e0d477c"
        )
                .page(3943)
                .perPage(2309);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "fbf34e5c-b131-4778-8208-3d289e0d477c"
        )
                .to("2022-02-22T06:42:36.000000Z")
                .page(4910)
                .perPage(3622);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "fbf34e5c-b131-4778-8208-3d289e0d477c"
        )
                .from("2020-09-17T07:45:03.000000Z")
                .to("2021-02-15T21:51:48.000000Z")
                .page(5516)
                .perPage(2876);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "fbf34e5c-b131-4778-8208-3d289e0d477c"
        )
                .setModified(false)
                .from("2021-05-27T16:30:20.000000Z")
                .to("2022-05-15T11:26:21.000000Z")
                .page(5666)
                .perPage(5023);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "fbf34e5c-b131-4778-8208-3d289e0d477c"
        )
                .type("transfer")
                .setModified(true)
                .from("2022-07-15T16:04:22.000000Z")
                .to("2020-10-11T01:56:26.000000Z")
                .page(1575)
                .perPage(5242);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "fbf34e5c-b131-4778-8208-3d289e0d477c"
        )
                .receiverCustomerId("5ff1fa3b-b242-4f49-9085-9d71f75a9164")
                .type("transfer")
                .setModified(false)
                .from("2021-06-14T09:43:26.000000Z")
                .to("2021-11-27T10:53:29.000000Z")
                .page(5317)
                .perPage(119);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "fbf34e5c-b131-4778-8208-3d289e0d477c"
        )
                .senderCustomerId("18859557-4c3d-4189-a76e-8cd4f6340d52")
                .receiverCustomerId("93051b76-fff2-4c8b-a9be-caa0c3ca72cd")
                .type("cashback")
                .setModified(false)
                .from("2020-01-13T01:47:09.000000Z")
                .to("2020-01-16T02:05:37.000000Z")
                .page(7306)
                .perPage(7712);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
