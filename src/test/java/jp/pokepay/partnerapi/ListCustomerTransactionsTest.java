// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.ListCustomerTransactions;
import jp.pokepay.partnerapi.request.Request;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class ListCustomerTransactionsTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "0a999d97-0637-418a-8bee-bbbcaec0c105"
        );
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "0a999d97-0637-418a-8bee-bbbcaec0c105"
        )
                .perPage(1785);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "0a999d97-0637-418a-8bee-bbbcaec0c105"
        )
                .page(2618)
                .perPage(8848);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "0a999d97-0637-418a-8bee-bbbcaec0c105"
        )
                .to("2022-06-28T20:46:36.000000+09:00")
                .page(8132)
                .perPage(1065);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "0a999d97-0637-418a-8bee-bbbcaec0c105"
        )
                .from("2018-03-30T21:12:21.000000+09:00")
                .to("2018-01-18T03:25:53.000000+09:00")
                .page(2088)
                .perPage(7834);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "0a999d97-0637-418a-8bee-bbbcaec0c105"
        )
                .setModified(true)
                .from("2019-12-23T15:53:36.000000+09:00")
                .to("2015-12-13T23:04:01.000000+09:00")
                .page(3060)
                .perPage(4722);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "0a999d97-0637-418a-8bee-bbbcaec0c105"
        )
                .type("3PQB7j8S1L")
                .setModified(false)
                .from("2023-07-07T08:26:58.000000+09:00")
                .to("2020-03-19T00:20:11.000000+09:00")
                .page(3806)
                .perPage(2234);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "0a999d97-0637-418a-8bee-bbbcaec0c105"
        )
                .receiverCustomerId("d568deac-acea-4083-9ffd-e09adac6d856")
                .type("6h5DQ4TL")
                .setModified(true)
                .from("2017-02-20T19:49:35.000000+09:00")
                .to("2020-09-18T04:42:27.000000+09:00")
                .page(2494)
                .perPage(227);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "0a999d97-0637-418a-8bee-bbbcaec0c105"
        )
                .senderCustomerId("3872f146-868a-4d69-b574-a55a072d52fb")
                .receiverCustomerId("8ee8b7b4-3a77-43c6-93ea-e79a432fc347")
                .type("xBLsRpox6u")
                .setModified(false)
                .from("2016-06-02T08:58:36.000000+09:00")
                .to("2024-02-04T05:18:08.000000+09:00")
                .page(1933)
                .perPage(3775);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
