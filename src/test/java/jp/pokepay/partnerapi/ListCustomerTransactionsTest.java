// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.ListCustomerTransactions;
import jp.pokepay.partnerapi.request.Request;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class ListCustomerTransactionsTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "334c77f0-7cc3-4f70-890a-307a86dc273c"
        );
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "334c77f0-7cc3-4f70-890a-307a86dc273c"
        )
                .perPage(280);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "334c77f0-7cc3-4f70-890a-307a86dc273c"
        )
                .page(1243)
                .perPage(6527);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "334c77f0-7cc3-4f70-890a-307a86dc273c"
        )
                .to("2018-05-24T01:20:13.000000+09:00")
                .page(622)
                .perPage(4868);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "334c77f0-7cc3-4f70-890a-307a86dc273c"
        )
                .from("2020-06-09T03:03:26.000000+09:00")
                .to("2020-10-10T17:42:15.000000+09:00")
                .page(8648)
                .perPage(1595);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "334c77f0-7cc3-4f70-890a-307a86dc273c"
        )
                .setModified(false)
                .from("2023-12-02T13:37:37.000000+09:00")
                .to("2023-05-09T11:23:05.000000+09:00")
                .page(8917)
                .perPage(2538);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "334c77f0-7cc3-4f70-890a-307a86dc273c"
        )
                .type("7OUK0vKQ")
                .setModified(false)
                .from("2020-02-18T11:43:25.000000+09:00")
                .to("2016-03-02T07:20:01.000000+09:00")
                .page(1217)
                .perPage(3985);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "334c77f0-7cc3-4f70-890a-307a86dc273c"
        )
                .receiverCustomerId("94b385a8-f766-4987-8fb1-0651a70f5b24")
                .type("AIUc")
                .setModified(false)
                .from("2016-06-18T03:01:27.000000+09:00")
                .to("2016-10-25T09:18:09.000000+09:00")
                .page(2957)
                .perPage(2835);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "334c77f0-7cc3-4f70-890a-307a86dc273c"
        )
                .senderCustomerId("caece5d3-5a15-4a4c-aa22-33f5ff66369c")
                .receiverCustomerId("fce2f748-ea07-4fd9-a17a-f181dd8f4d06")
                .type("u2Ra1")
                .setModified(true)
                .from("2023-08-24T21:59:26.000000+09:00")
                .to("2024-01-26T17:56:56.000000+09:00")
                .page(4734)
                .perPage(7073);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
