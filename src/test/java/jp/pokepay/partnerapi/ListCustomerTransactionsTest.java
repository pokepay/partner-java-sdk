// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.ListCustomerTransactions;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class ListCustomerTransactionsTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "dc969a62-96fb-4956-a338-b3c142a6f4f4"
        );
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "dc969a62-96fb-4956-a338-b3c142a6f4f4"
        )
                .perPage(2287);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "dc969a62-96fb-4956-a338-b3c142a6f4f4"
        )
                .page(5274)
                .perPage(8740);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "dc969a62-96fb-4956-a338-b3c142a6f4f4"
        )
                .to("2023-12-05T00:25:25.000000+09:00")
                .page(2347)
                .perPage(6470);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "dc969a62-96fb-4956-a338-b3c142a6f4f4"
        )
                .from("2023-07-24T21:22:02.000000+09:00")
                .to("2021-12-26T19:14:15.000000+09:00")
                .page(4416)
                .perPage(9732);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "dc969a62-96fb-4956-a338-b3c142a6f4f4"
        )
                .setModified(true)
                .from("2020-06-29T01:14:39.000000+09:00")
                .to("2022-07-10T02:18:42.000000+09:00")
                .page(1723)
                .perPage(827);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "dc969a62-96fb-4956-a338-b3c142a6f4f4"
        )
                .type("expire")
                .setModified(true)
                .from("2020-05-01T18:54:24.000000+09:00")
                .to("2023-07-16T23:02:22.000000+09:00")
                .page(1384)
                .perPage(2626);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "dc969a62-96fb-4956-a338-b3c142a6f4f4"
        )
                .receiverCustomerId("abc1861e-7a8b-44bf-a569-2b43a0e25113")
                .type("topup")
                .setModified(false)
                .from("2022-03-14T06:58:22.000000+09:00")
                .to("2022-06-08T00:03:52.000000+09:00")
                .page(1692)
                .perPage(7642);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new ListCustomerTransactions(
            "dc969a62-96fb-4956-a338-b3c142a6f4f4"
        )
                .senderCustomerId("b26f162e-0845-4ee3-a174-2301573ff428")
                .receiverCustomerId("2cb41b88-7777-45ff-9cf5-3921d7c632d7")
                .type("payment")
                .setModified(true)
                .from("2021-04-26T23:56:31.000000+09:00")
                .to("2020-06-24T04:42:17.000000+09:00")
                .page(8071)
                .perPage(4417);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
