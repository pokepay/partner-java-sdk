// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.ListTransactions;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class ListTransactionsTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new ListTransactions();
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new ListTransactions()
                .description("zfWeSGQyB5L1bD8y2ZSg1nltCUTJzINOOoXrPDiAKzOvz32CR5vKUgqSlnTh5gHjZQw6XVWySrXcndolv2DgCapJpMeI0MVxekMxznghfcxnJnEBaQQtWXa5iKZOQkCCVbIbx3WFJ3bMnc9A6CtzifTMrHfxAhnXXBHWH5nOkJLNrvH8GEJw8BsA6r");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new ListTransactions()
                .types(new String[]{"exchange_inflow"})
                .description("0Ey942t8QsX36rZkKHdQIjRMJyREM8kVienNgsfQUQcGINJaE3Ezi6t2RwDkwzbDodkp0uAMPzW7fEhgUUiEsyJZTgLu9gywxpsjeE1ywRPhCkYCCIizcc");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new ListTransactions()
                .setModified(true)
                .types(new String[]{"exchange_outflow","payment","exchange_inflow","cashback"})
                .description("wWvjNmX8bBj0QR0AYIhgySLUdzfwRXjfH6r0Lbb5OTksXnMJlyY7aApUA8vX2brTWuGzDV05rrERw96RCAWfA4EMPahg60");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new ListTransactions()
                .privateMoneyId("031fc454-c8f1-43cf-a6c4-d66e34a8ac9e")
                .setModified(true)
                .types(new String[]{"cashback","topup","expire","exchange_inflow","payment"})
                .description("TXH1uVE1a2nchHox401xpAecii7f7spZKTDqsy02GtuIKAOrZHRXUvIctqQUox7A6b4toKbytHHSfP2bC0oKNX4YAl9lyp2nTvNI9xZigFhFHhXVXfTdcX3EYHciNl49BU24W");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new ListTransactions()
                .organizationCode("-")
                .privateMoneyId("f16ed45f-5071-4890-9c2a-0a05a09af888")
                .setModified(true)
                .types(new String[]{"payment"})
                .description("a1PUexR87c0hgxNDSVmMP3iIX57d542UiNHEb0K4DDahUHFnG7Lj");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new ListTransactions()
                .transactionId("w7q")
                .organizationCode("-39X---S")
                .privateMoneyId("051b967c-ba7c-4a13-921c-7e1e13c43ca9")
                .setModified(false)
                .types(new String[]{"cashback"})
                .description("vNLxaI0OYPvDqDVkQYtUnGW7fjEByowMmt6iedYxQQDgwvHOJvTJ2626Q9RtaIigxrsIo1oRTg2XbrxZdDQlJKBcN4yrc1Zww6Ud6k08cZL");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new ListTransactions()
                .terminalId("cfa006bf-4da0-48e8-adad-b2d6158c0e06")
                .transactionId("liy1")
                .organizationCode("XVFkWX-4376")
                .privateMoneyId("b78ce427-18ea-415d-9a52-15cca471163e")
                .setModified(false)
                .types(new String[]{"expire","exchange_outflow"})
                .description("inE4oDWGkNfx73YbEEFWwnOERMDkgqBhkZ05hd17YJ03ZWD8jIYFdEk84koADdKJuT4jrftM6unkobRiNlW8ijMspGsBWLIUob35W4cnouVNuKF5cQxN");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new ListTransactions()
                .customerName("amEt1JQxRiBjZ7NbOtUNIyG5i")
                .terminalId("815544f0-20e5-4fa6-ad0e-072289ab8007")
                .transactionId("pVLN3enC2L")
                .organizationCode("tC8------CuHQ---7845dK-j1Z93-")
                .privateMoneyId("a0abb24d-bb1f-4de2-bcf6-fe3995d97ce5")
                .setModified(true)
                .types(new String[]{"exchange_inflow"})
                .description("uGGUwosw5lNewO6f4I2raMAOKMQaiOhqxf76ZAjsSP5PF9BeZ3CsdnDE2fmbfmGPtVeXWHu2KBEhZWOlHv1fO87o6oU8Ge22C");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test9() throws ConnectionError, ProcessingError {
        Request request = new ListTransactions()
                .customerId("255412f7-e865-46ef-9b24-2070398c6eab")
                .customerName("bFOG8hsBoKzm")
                .terminalId("44be2e2a-5c13-49bf-a564-29cb0b633313")
                .transactionId("jhhbbMn")
                .organizationCode("RU0")
                .privateMoneyId("4744026a-336c-42ff-812d-22d17dbd4fd4")
                .setModified(true)
                .types(new String[]{"expire","payment"})
                .description("ywaeXBmOPvHHvtKYmyrB60r7Wc3JxvDITy6VOxTiQkqQviFKbwsQc4jNZ1CNIzGCac4FrmJwsHKvRec1Q9TCSJvtuyLKKZdayLZHrvQxO6l0p7IryvnpItFd9JdVdvENB6dSes8XU6KgxCbIDeuSGZQUljq");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test10() throws ConnectionError, ProcessingError {
        Request request = new ListTransactions()
                .shopId("23f31609-c058-4255-a6fa-07b4752db201")
                .customerId("66350e74-c034-4054-b5dc-c099025bf01b")
                .customerName("gd91BJXegKAPJ3wmxol")
                .terminalId("61de4330-965b-474d-a9a7-97f0a562c18c")
                .transactionId("hm")
                .organizationCode("sn8----Ao-q-M11")
                .privateMoneyId("107aaabc-56d2-43c1-bf38-07f739090e2a")
                .setModified(true)
                .types(new String[]{"exchange_inflow","topup","expire","payment","cashback","exchange_outflow"})
                .description("2W5FOAQD7ZWzdt2onhLYh7yxVxos5MeXpPbo0Hr7Ez7W1vt3mg0BdZNdsKMiSz8vOZJoUTrFwzgCTUV7NMUxKyzgjLT06DZ3ki7KFUTbFB");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test11() throws ConnectionError, ProcessingError {
        Request request = new ListTransactions()
                .perPage(2908)
                .shopId("9dd09094-e708-4cb1-a66d-e31e6c71ea5b")
                .customerId("1cba3a90-3efd-4488-aa70-f694e2db9727")
                .customerName("o0ja4PFDDSQ7SNAmQYzjXQAK8K60VjYrr5FgFmCJBqWEaG17NYMzJkqQ25vaIvzNU51PXjIuUxSFVfDUO21WgiIXH3goFeXKgDxng4d0tl3LRnzGBqTgU9cN2jRFLbKcqs")
                .terminalId("1b44d88d-4220-4ad7-97bc-c4523587dc6b")
                .transactionId("slBlV")
                .organizationCode("XMu24SG17Z-f-664u-1DR9q")
                .privateMoneyId("7fac5ea6-d617-4fbf-bfdf-77d16a97110a")
                .setModified(true)
                .types(new String[]{"cashback","expire","exchange_outflow"})
                .description("o0AAbzD");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test12() throws ConnectionError, ProcessingError {
        Request request = new ListTransactions()
                .page(7813)
                .perPage(3878)
                .shopId("9493bc1a-bb30-4e61-8dda-e724cf3315f3")
                .customerId("c0ae3a4b-0008-4cd9-b79b-7c9ca7da898e")
                .customerName("4XWaMqZUIGq4Q44aG0JmyNbzCrjTWS5s3SABnK4IObzq94Tg0tefe0T3QEyrPDbosE1IFjDa8xNRFGt7seNEyoZx3EFS")
                .terminalId("fbb225a6-fcb9-42ea-b4e2-78aa89be363d")
                .transactionId("7cG")
                .organizationCode("19xMd-")
                .privateMoneyId("99460d4b-6bee-4e9c-ae31-edfaf52f2fee")
                .setModified(true)
                .types(new String[]{"payment","cashback","expire","topup"})
                .description("gYRk2NWW2kqIx1lVOl4B8RQ9mZsqXxvIs8E63mvRJ9YU7hj98znuPsWJ2CcijpkcdZMZbZDcHjEdXOYsT0LxFQtRTJ3OWBIPxe5hcX9s8xijilqmpZZnQq1ewMCvR15Q3D4h1DHdWRN9ylIVNUWEx7DRWQ4RL4CeGOIctKy0VjQLYXIln");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test13() throws ConnectionError, ProcessingError {
        Request request = new ListTransactions()
                .to("2021-01-18T06:56:36.000000+09:00")
                .page(3805)
                .perPage(6790)
                .shopId("08fc7dec-1632-4cbf-ad71-4b5b950db4c0")
                .customerId("0ccb1e12-90ba-4e96-9ab0-092dda9d7a4a")
                .customerName("V86nbOI7")
                .terminalId("a13df360-97e5-4ce1-8d2e-6b1f3758be69")
                .transactionId("SQ0oWq")
                .organizationCode("-1-r-ic-B4-")
                .privateMoneyId("4509a65e-84c9-4439-a191-33848e8cbc08")
                .setModified(false)
                .types(new String[]{"exchange_inflow","topup","expire","cashback","payment"})
                .description("BNiIzCRXwV");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test14() throws ConnectionError, ProcessingError {
        Request request = new ListTransactions()
                .from("2021-03-13T19:22:08.000000+09:00")
                .to("2024-06-14T06:59:35.000000+09:00")
                .page(6510)
                .perPage(8093)
                .shopId("ec6fde00-51be-4c4e-8275-67438205b04e")
                .customerId("839f3cd8-b6e3-42b2-bd43-4e4ac368bba3")
                .customerName("uazAzb4vggo0Rj9HAiuj2Am5XCo3i9PznltgIDV4RKQSh3CsGvw1CETsyzmQnTPT1ealPKWXmd25v7NI6dtIDe1FprC0A0SZ3BV8xmrvN0k99WoFzupf1y75RJevi80")
                .terminalId("ded3ddbb-fb22-4494-a1bf-75447eb2e450")
                .transactionId("eOQ0ejMC")
                .organizationCode("HFN--AYO-J534HAbf")
                .privateMoneyId("60c97f09-33e6-4f66-97d6-04fc1c455b12")
                .setModified(true)
                .types(new String[]{"exchange_outflow","topup","expire","cashback","payment","exchange_inflow"})
                .description("4ZIJH0SB9CpUrvLejaudRg7M6j3dDnqrGXY4EdSnVKOapo3AJe1VxLsy6ZiI3uUi6gfl3X9y8rBn");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
