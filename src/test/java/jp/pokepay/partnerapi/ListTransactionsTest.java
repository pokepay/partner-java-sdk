// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.ListTransactions;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class ListTransactionsTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new ListTransactions();
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new ListTransactions()
                .description("eaKPydQtxKkPEiJ9F7s09s2D07ZJtROtnJyz65lsPnpU0js5rsIZ4cWpER3UtPkG2eq1I6SZr9Xo8DUROCVDxPSk72x92MmliF75MFhbZKuKGU7dTPisUgKnCVzFujd5tp1lylHobnm6HycWppeOG5c4bSq");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new ListTransactions()
                .types(new String[]{})
                .description("3Ank6BTTvgxHzzgdLIxgPMdYrCUsTg7mFBD5JyTl3OSbQF6o9LFFmkiVCdqahnfY1HR9DfMzD3LCASqee9bY3sHOGNF3Mai4m7no77RN8AasCH56gnyuHFpFsNPJmzuH1GHYOOmiU");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new ListTransactions()
                .setModified(true)
                .types(new String[]{"topup"})
                .description("QYSSoPK3N5ZGrmU0unMptspEioBBqGcJLaXcepDTPRHElLNQrvWUnk17KWAioiFIGH7shpxz5S2r82nr4Char2DsC6IOlQ3ZCa8lZmMT5mAFAIeN7EOzXnRCcbLOsMiN4tjoxBAROpiRc0j39oPNkDTFwGmGihFz2z0gAPfWDnSv3peMsqUtDBVf5JNW");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new ListTransactions()
                .privateMoneyId("40c0c1d0-59c2-46c0-bb70-f1fa7723c9d3")
                .setModified(true)
                .types(new String[]{})
                .description("Kx5V0IU1H2quyHwM52367FRSK6ZN3dPGJYhssMJ1c81K9V4uwaN6FqKGuMQEbIhSKLSxcJDAAH0jwIPbMhYlMMXruKsOetb8P3w3wpAlq46MRFhBa1KSF");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new ListTransactions()
                .organizationCode("bhtDRbU7-a--Qv4rj-2-18Ej")
                .privateMoneyId("b4c1c0d4-27b4-42a1-af30-8d49a6d59abf")
                .setModified(true)
                .types(new String[]{"topup","exchange_outflow","expire"})
                .description("sCcHMaDTHEOIiZjdOoQxmayWcgZvBQUAudiHvhALf0xr0Yedj");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new ListTransactions()
                .transactionId("9710a841-20f4-429f-8168-c17b1b169421")
                .organizationCode("m0PO-jZqVz52G0z9Zs")
                .privateMoneyId("537b1d89-a0b4-4c8f-bbe7-a132094d3e71")
                .setModified(true)
                .types(new String[]{"exchange_inflow","exchange_outflow","payment","cashback","expire"})
                .description("W1v6Ot04JjRtKJ3Y50yRgOZb7LyYKRMPV8lVcOO1");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new ListTransactions()
                .terminalId("9771b1f7-5d32-4cc7-97d3-12e8c7e7a98b")
                .transactionId("d732f05b-d31e-4ecd-ae86-61d1f844d678")
                .organizationCode("lL5U18-tw7--UchiiFa84Hj--9")
                .privateMoneyId("aed21271-1579-466a-8451-014350804076")
                .setModified(false)
                .types(new String[]{"payment","exchange_outflow","expire","exchange_inflow","topup","cashback"})
                .description("Loht");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new ListTransactions()
                .customerName("7YX7LIJvkHIDHAM5JdvPW8u4K9jehE0FIX2d1fsIJRaq4cseT3Jr8x9EZ1qV4Ufa8eDKBhpNX1jWPk8Z43B0y0B9mfs2NjGqIbT9OwqnkaPpwID0eLyZpFNZ79bus52pNLLPoSL84SGwACEhVooVmB4cFvbTIGcXWAqG4BSfipEZMFGhk16I7iXigWOnUAkBWGfv1h3SdKWf7Mk6q")
                .terminalId("09176af8-cf6c-408d-897d-8054f41d78fd")
                .transactionId("8d7939a0-f115-4d67-bd08-408e9a14a861")
                .organizationCode("-PQYVruHv11eB6w--EN--Bi0Igkg-wK8")
                .privateMoneyId("f4b0868f-854c-44d1-a043-d9eed6abce36")
                .setModified(false)
                .types(new String[]{})
                .description("pPY7uZKs5wMf3MBYDCuFCMBOgtd28MFakoJp4sttlPyu0hLTf3LV1FvqM27O2bqybT3XFSWXNEvBDebROkI568yn3vAdg2WzE6cQfJbdKVhYmdIeaGtyZiVBFtaHsVEu5jHLt1IIKsQ450xUM6O");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test9() throws ConnectionError, ProcessingError {
        Request request = new ListTransactions()
                .customerId("8498e40a-af35-4899-a8df-b7071d5c0fe6")
                .customerName("4vi32RsgmtpDzruBR2bpCJbWCsF1XOMwOMfbCbRi8MeoObjQBbD5vivOmPF0WWyAe43BTjYiVtdGDmgs4Vk2VUx2tI5N4bIOpNtWwRJ7taFGOOZNR9womkOYYXss1h0acoAUmABE9DWtANH45sfx8Sg9q1O62IQSAJ63xgskw6yfFQPcXHRn98CcSXK5Zlq5PBZ9vRV0xb")
                .terminalId("488e2785-d9e4-4c8b-afc2-d80dbb360dc4")
                .transactionId("c34bfa2e-9bc5-46aa-b6e4-3a28f9edd396")
                .organizationCode("6mE160SXN")
                .privateMoneyId("71fdf319-3dda-4a35-b8e6-9f7a851e6575")
                .setModified(false)
                .types(new String[]{"expire","payment","cashback","exchange_inflow"})
                .description("AlrcpNez8TuusjLCXuqGq9aXt2RyxOmHZB8Yd9TYL0bkCAVqSRIdac4BtBwC2bbOKrqEvtHSmLf6gZqSXb2Lr55RtyiRtGJ1HUxolj1KPz6vAaVd6Sg4zOt2LPb0nLBvCfu5QWsdUnRrH9KHVuXFGKt4lw9lRVMCAhIxweHf4mhVFw56");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test10() throws ConnectionError, ProcessingError {
        Request request = new ListTransactions()
                .shopId("57a1079e-6f52-41cb-84df-515ca23018e5")
                .customerId("13cfc56d-4b03-4aff-bd9b-b7bd01b81597")
                .customerName("YdfHKy6kNARZB0e7gSo7Ck5GjWL9QXL9sfwRokQiO2gJLOs7NWiVmOaSDg31Umvi1k0xZepHVlU5UCBk1mC260SZIPf7lUxpBEwOCUnBV1wl8i3xQfqNGTjhBSpAIG2GVjRLCF7S26ypTzMExe5LQXN3tfMMeaiTEdRlgPRLO6iu4xB9p9hHVjuFskSUixLpvflY")
                .terminalId("6e0e613e-2097-46b8-8dc6-2cd9634f4bda")
                .transactionId("b67bd6ca-7d97-4c20-b66c-97bdb07ca2e6")
                .organizationCode("Y03-2UWgF9A28O1-")
                .privateMoneyId("a4d353cb-7c4e-4de2-bec5-9ea434ece743")
                .setModified(true)
                .types(new String[]{"payment","exchange_outflow","topup"})
                .description("Uv3nTPZ701h3V5Qywi2pn04JUSx27eVHz2wOx9gOffBCzdPD5lY5ruzs73QnlHzwGBVLp2Vmg3eprOU7ktZcHWsZTpEtZX9770nlSO8H2DCl6imPJgn2XjYsZU");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test11() throws ConnectionError, ProcessingError {
        Request request = new ListTransactions()
                .perPage(9436)
                .shopId("c87f0487-4712-4c70-9851-2d13add88c2f")
                .customerId("0d6cc9f6-f74c-462d-a53f-32e2a156bce8")
                .customerName("65Hdtxmvs4SwxRthVVayjO1th3s3e6fayZ2E32vm3RMvvWttu1PJb3d04IfskzbRh2KXDkJqy1UyPaGHVkyMSdmemZcovbEUc9TiM3DTSa7pJlo8JS6mIVfCl8O6XTpGUPEJOaNnRanlNyuKHWuXq7zEzVgAAIhzrV")
                .terminalId("d098775d-b66d-43cd-9137-0e3dff74b5fa")
                .transactionId("1ea2c4d1-3a66-457f-b46a-45b1bf3c8d58")
                .organizationCode("E-751jH5TJjmR--")
                .privateMoneyId("47ef94de-66ab-466a-a305-042bc4aacc8f")
                .setModified(false)
                .types(new String[]{"exchange_inflow","payment","topup","exchange_outflow","expire"})
                .description("gDJcoagTJNb42JvVKNsj3zA7Dw0uibv6O0nFaLFwVLIZnC6rDyYuuG1XnlSIVaCTCoBzc3");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test12() throws ConnectionError, ProcessingError {
        Request request = new ListTransactions()
                .page(6276)
                .perPage(1213)
                .shopId("a344e1d0-5f6f-4c6c-bea9-14fec42d5e73")
                .customerId("7e433225-4a64-4003-a27b-9e7296bb7017")
                .customerName("xUTbpTkQr9CA458OFUiC0xNjD1g6ausYOsWjmgSVes0LvRpIOKLgAa2m76DTKceEBbKe1QbzWrTYvHigdBYvKVDdotVdsHD1HarFGRZ0Q28LywVGUz2sIRxtNbAYMzHePlwRHJLPebY")
                .terminalId("7f35485f-53c3-4f41-bf9d-9e33b1d415f1")
                .transactionId("93cc8961-0be2-42f0-a8fc-6d79e7879700")
                .organizationCode("")
                .privateMoneyId("b89dc1d1-c5fa-4b0c-9cdb-20d01edd7a9d")
                .setModified(true)
                .types(new String[]{"exchange_inflow","exchange_outflow","payment","expire"})
                .description("mp7HiQajpl09d6QIiaL5c40GPi4ivBi3eJhDgAiQ5RhXwEfmyakwCi2K41MKrJ8u3JtJHw13BJLqURa9CDG8z1r52NxmvSo3IMgKOG9RqgqLtsxscDVj4qDxwlIsjYdDsgNzWfM");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test13() throws ConnectionError, ProcessingError {
        Request request = new ListTransactions()
                .to("2021-11-24T12:12:03.000000+09:00")
                .page(1498)
                .perPage(6534)
                .shopId("367806f4-330f-45a5-9195-2ba133f57846")
                .customerId("a4aa801b-fe9c-414f-9f3e-a4d29efde369")
                .customerName("CKaN1GSBkTmsnETZgON7wI25XD4LDGgtc1eHQx1a38fcy9G2ru7CIugZBUKc64A8KJDFHDE0sPhVLSmxr0FU3DnW6KqsDEeelMkJvsg1mQveiZolVhKjCQVZwzstz19XaUt7HUg2vBtQ3icUlEOMImvGy37aG3VpRl")
                .terminalId("bed23e28-88f1-475d-ba4b-d807e81099a5")
                .transactionId("0eb2777e-c829-4aa6-a0d6-13621cb88acc")
                .organizationCode("aQY-mSWR")
                .privateMoneyId("1c7ce23d-7a89-47b0-af3d-1f155407895f")
                .setModified(false)
                .types(new String[]{"payment","exchange_inflow","exchange_outflow","topup","expire","cashback"})
                .description("DRVBADkHpYoJtK8deELoxPb8vCqW8ZrqfNGAkbzmAIScfq8JbwsUjFhr3NwoEyag2SfuJiolnAr0O5BazmKq");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test14() throws ConnectionError, ProcessingError {
        Request request = new ListTransactions()
                .from("2017-04-06T22:34:39.000000+09:00")
                .to("2023-02-26T03:46:48.000000+09:00")
                .page(5846)
                .perPage(736)
                .shopId("c26dbdf6-2cfc-4d49-b354-86cca5dca2d2")
                .customerId("95eebd05-2ec4-4516-9655-6ab280cc1f8a")
                .customerName("wR06BrqE4xR4GA8B6QEvmEtQTqfIDfhF08aWAgYKgMRg4eijui0x4AzukqXii06wz9NdLnaFp0d8NnYZXWwwPUfmYGEVrOM4dkj0diMGxwkBMFBNKhTrrGkGVnz7dW1L5JRcqW")
                .terminalId("6f7b183b-023b-440c-87da-416fdf201bc2")
                .transactionId("8bef939e-07ff-412b-bfbf-23374b9eea60")
                .organizationCode("ce5-o-6v-Mx23q-VjaV0fI")
                .privateMoneyId("35fad67b-5992-4942-ad52-b9b63d5cfc1b")
                .setModified(false)
                .types(new String[]{"expire","cashback","exchange_inflow","exchange_outflow","topup","payment"})
                .description("Qf3SzEAz6sFhOXUyleHUBygYLLJFfbbjnOxn1Ii4QyBabDj1sJ7k6dP6L13ja9VovumOjMgFfs83kBzSot4H9G2QRAYPymeRfFOHsPVjb9UCbPcYx5YXiYOW0oa5SUOR88F7Ubd6EIlmfbIWBjq");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
