// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.ListTransactions;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class ListTransactionsTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new ListTransactions();
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new ListTransactions()
                .description("V9sTjbq8Wo22UU1er3T1gBtfr20CiDsCwyLdW5AzEeQbE5VhNxjrtNh84WLuHKWoYQpDLtJyiWbDVy6Ss7attO0KDvZ2PuoFKU33PYYZTEIyR");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new ListTransactions()
                .types(new String[]{"cashback","exchange_outflow","exchange_inflow","topup","payment"})
                .description("72c26Cd6B3OB7swghUIdkqUOY2HAI87h7tC8vMnTzjNmFWDzLZEPN7HQXwymFrbXYvN3cal4RO9jT63dRDxKNVoewLoaJggIMA5wXB3CTdPu3I6Gb57N6Bfk723x");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new ListTransactions()
                .setModified(false)
                .types(new String[]{})
                .description("c2FLmu9RV4wTQ1eFfFoOmA6KgKFTgUMIqeaKPydQtxKkPEiJ9F7s09s2D07ZJtROtnJyz65lsPnpU0js5rsIZ4cW");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new ListTransactions()
                .privateMoneyId("bb9a3d99-d5f0-45c5-928b-b633359f55d5")
                .setModified(true)
                .types(new String[]{"cashback","payment"})
                .description("eq1I6SZ");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new ListTransactions()
                .organizationCode("dU57GxN0f8c2-v-hF--PuqM-")
                .privateMoneyId("c8374a26-8755-41a7-a74b-d5ee1e04cea7")
                .setModified(false)
                .types(new String[]{"exchange_inflow","cashback","payment","exchange_outflow","topup","expire"})
                .description("ujd5tp1lylHobnm6HycWppeOG5c4bSqVBGp3Ank6BTT");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new ListTransactions()
                .transactionId("gxHzzgd")
                .organizationCode("--GkKuYmTc31")
                .privateMoneyId("4b92e8c6-9836-4d6f-a7b9-7f4c35ab2f46")
                .setModified(false)
                .types(new String[]{"topup","payment"})
                .description("kiVCdqahnfY1HR9DfMzD3LCASqee9bY3sHOGNF3Mai4m7no77RN8AasCH56gnyuHFpFsNPJmzuH1GHYOOmiUvKwyiQYSSoPK3N5ZGrmU0unMpt");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new ListTransactions()
                .terminalId("2b7d3b73-f0f0-4e45-a569-baa40f7fe1a5")
                .transactionId("BqG")
                .organizationCode("aojS7--A81-X--")
                .privateMoneyId("24797288-b09f-4400-9cc1-cc6982e11b6f")
                .setModified(true)
                .types(new String[]{})
                .description("7shpxz5S2r82nr4Char2DsC6IOlQ3ZCa8lZmMT5mAFAIeN7EOzXnRCcbLOsMiN4tjoxBAROpi");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new ListTransactions()
                .customerName("Rc0j39oPNkDTFwGmGihFz2z0gAPfWDnSv3peMsqUtDBVf5JNWPBpzSQtetKx5V0IU1H2quyHwM52367FRSK6ZN3dPGJYhssMJ1c81K9V4uwaN6FqKGuMQEbIhSKLS")
                .terminalId("0d9e2ef8-d68c-42e3-8aa6-5444b0e69c3b")
                .transactionId("AAH0j")
                .organizationCode("3---0MU8Jts85b-BLd-6d")
                .privateMoneyId("caf3f0c9-bf5f-4922-adf5-49eb19ff3a6a")
                .setModified(true)
                .types(new String[]{})
                .description("0UOTifX7KrzTtAdseC51TTzGU05VTqLiAQDTT40IDYkIvu0sCcHMaDTHEOIiZjdOoQxmayWcgZvBQUAudiHvhALf0xr0YedjAtA");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test9() throws ConnectionError, ProcessingError {
        Request request = new ListTransactions()
                .customerId("e5552568-c17b-4421-92eb-fadd84d28634")
                .customerName("Q5ZEYWHc6DIDKem3xaXPio5o0q9x0iUyrfJOMPlYYA9d24g2qlkQeuW1v6Ot04JjRtKJ3Y50yRgOZb7LyYKRMPV8lVcOO1w2GShMQxP1XNaA4tMwkt9CEIs7P52Qn8Ps6rGg4gxhQE")
                .terminalId("619fdd50-ce40-4e82-8826-7a5d0f14b9ec")
                .transactionId("Mgzo7")
                .organizationCode("-6LEf9i1IKk8-70--o")
                .privateMoneyId("e00563f5-ff8a-450b-83b4-e24b0230f239")
                .setModified(true)
                .types(new String[]{"payment","exchange_inflow","cashback","exchange_outflow","topup"})
                .description("FIX2d1fsIJRaq4cseT3Jr8x9EZ1qV4Ufa8eDKBhpNX1jWPk8Z43B0y0B9mfs2NjGqIbT9OwqnkaPpwID0eLyZpFNZ79bus52pNLLPoSL84SGwACEhVooVmB4cFvbTIGcXWAqG4BSfipEZMFGhk16I7iXigWOnUAkBWGfv1h3SdKWf7Mk6");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test10() throws ConnectionError, ProcessingError {
        Request request = new ListTransactions()
                .shopId("44688d2a-c571-4af8-ac8d-4189ece75d7d")
                .customerId("851b8054-78fd-49a0-9567-ae3d4cb62d08")
                .customerName("asH11ZahWwt0KCw4FDQO05qLTqGDbzQDuaFv4VsaDUMga8HPHLfj8VAxLQCn6DppPY7uZKs5wMf3MBYDCuFCMBOgtd28MFakoJp4sttlPyu0hLTf3LV1FvqM27O2bqybT3XFSWXNEvBDebR")
                .terminalId("2f4460cf-a0eb-4549-b58b-1889f4093836")
                .transactionId("yn3vAdg2W")
                .organizationCode("A-uzMj52041tG6VVKmrD9A--")
                .privateMoneyId("a490bad1-0e34-48b5-a17b-2fb0fb07e778")
                .setModified(true)
                .types(new String[]{"expire","payment"})
                .description("hfI4vi32RsgmtpDzruBR2bpCJbWCsF1XOMwOMfbCbRi8MeoObjQBbD");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test11() throws ConnectionError, ProcessingError {
        Request request = new ListTransactions()
                .perPage(9975)
                .shopId("66f44fe9-018b-4676-8fa0-d3066203126d")
                .customerId("2d15d2d0-bb05-4c92-863d-37b0db460c57")
                .customerName("yAe43BTjYiVtdGDmgs4Vk2VUx2tI5N4bIOpNtWwRJ7taFGOOZNR9womkOYYXss1h0acoAUmABE9DWtANH45sfx8S")
                .terminalId("9b31a3e7-fc60-4e5d-9839-b6718f656803")
                .transactionId("O6")
                .organizationCode("3iJ-9dD---7-YolA58m-Vc-996y5l")
                .privateMoneyId("1750ab2f-d7c2-480d-842e-9bc53e6fa6aa")
                .setModified(true)
                .types(new String[]{})
                .description("S5KI84n4B4JwtxMbsrynF");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test12() throws ConnectionError, ProcessingError {
        Request request = new ListTransactions()
                .page(145)
                .perPage(2940)
                .shopId("867d627b-92fa-4b6c-a5a4-2aaa7d2bd1f1")
                .customerId("3c5db756-69fa-45da-bf76-ad3ee0e5b1d0")
                .customerName("rwaZ5xfzumz05DAlrcpNez8TuusjLCXuqGq9aXt2RyxOmHZB8Yd9TYL0bkCAVqSRIdac4BtBwC2bbOKrqE")
                .terminalId("d725cb40-cd76-4f74-8853-3bedcb351425")
                .transactionId("6gZqSXb")
                .organizationCode("-7--Wn--w1A-43n-n7u38w9")
                .privateMoneyId("64d19f8c-8ab0-436e-8c42-4c768fc463c3")
                .setModified(true)
                .types(new String[]{"expire","cashback","exchange_outflow","payment"})
                .description("sdUnRrH9KHVuXFGKt4lw9lRVMCAhIxweHf4mh");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test13() throws ConnectionError, ProcessingError {
        Request request = new ListTransactions()
                .to("2025-03-17T04:25:50.000000+09:00")
                .page(2712)
                .perPage(6520)
                .shopId("97080b35-75a6-4efb-a8b6-079e10576f52")
                .customerId("6314a1cb-4d44-46df-9ce5-c56d90b44b03")
                .customerName("CYdfHKy6kNARZB0e7gSo7Ck5GjWL9QXL9sfwRokQiO2gJLOs7NWiVmOaSDg31Umvi1k0xZepHVlU5UCBk1mC260SZIPf7lUxpBEwOCUnBV1wl8i3xQfqNGTjhBSpAIG2GVjRLCF7S26ypTzMExe5LQXN3tfMMeaiTEdRlgPRLO6iu4xB9p9hHVjuFskSUixLpvflY8MFYZJvlfPZ9XRs2DjUex8FZcru468uiy2IBQsKNbECUonyUv3nTPZ701h3")
                .terminalId("63c948a2-fd94-4223-967f-44359577ead1")
                .transactionId("ywi2p")
                .organizationCode("-Y--H-GGc-4e-M-")
                .privateMoneyId("c9294359-f03b-4735-bca4-6614975adc1e")
                .setModified(true)
                .types(new String[]{"exchange_outflow"})
                .description("s73QnlHzwGBVLp2Vmg3eprOU7ktZcHWsZTpEtZX9770nlSO8H2DCl6imPJgn2XjYsZUpQvLebh65Hdtxmvs4SwxRthVVayjO1th3s3e6fayZ2E32vm3RMvvWttu1PJb3d04IfskzbRh2KXDkJqy1UyPaGHVk");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test14() throws ConnectionError, ProcessingError {
        Request request = new ListTransactions()
                .from("2019-10-14T23:18:53.000000+09:00")
                .to("2019-09-15T09:30:35.000000+09:00")
                .page(8020)
                .perPage(9573)
                .shopId("ad87c623-4f10-4493-8bbf-c86d0235e0e5")
                .customerId("430728ed-f65a-4efe-ae25-13a668e4d098")
                .customerName("covbEUc9TiM3DTSa7pJlo8JS6mIVfCl8O6XTpGUPEJOaNnRanlNyuKHWuXq7zEzVgAAIhzrVmMQ7zQf4j1Xlnx61iQEXBdwXQXBx9CjvSgZke3VuPIIBeUSxLQqoj9SXP9EgDJco")
                .terminalId("f5943561-1313-4a83-a667-f692f05126d4")
                .transactionId("JNb4")
                .organizationCode("600")
                .privateMoneyId("8f1fc81a-116e-4a46-bc82-7822a7e551e1")
                .setModified(true)
                .types(new String[]{"topup","cashback","exchange_outflow","exchange_inflow","expire","payment"})
                .description("wVLIZnC6rDyYuuG1XnlSIVaCTCoBzc3PolsdbrxUTbpTkQr9CA458OFUiC0xNjD1g6ausYOsWjmgSVes0LvRpIOKLgAa2m76DTKceEBbKe1QbzWrTYvHigdBYvKVD");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
