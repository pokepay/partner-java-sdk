// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.ListTransactions;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class ListTransactionsTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new ListTransactions();
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new ListTransactions()
                .description("g6prTqrnnaGbRaGWPyZvXpZFaSVr8hUpXxlKQg8kTbyfLycHsyKv3tYhN5z0xOxzPtOI4MIaebFym4IGO0VuYNKqqfeqIsy7IZoYRvBg4Bgx0Nm2XjZwZXHFqr0h6c23hIX5iGDKC62Q9rzh");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new ListTransactions()
                .types(new String[]{"topup"})
                .description("t");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new ListTransactions()
                .setModified(true)
                .types(new String[]{"expire","exchange_inflow"})
                .description("1S63ng1i86B71tX49eeES4tELe81iVOXUen21DNs0QUwS7BUlQeCyOkRodV2va7aiFwp9eBM9d7Yr30ZALu3mRDBtjGEaDO0i3qGPp");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new ListTransactions()
                .privateMoneyId("9880e8b9-750d-489e-a56e-bb8aa747f339")
                .setModified(false)
                .types(new String[]{"cashback","payment"})
                .description("VYeAerXdLFWF62oMHauUCBC3xqKPMpGjAsCMCXt1fXBwuBdroM4zVFUWqpE2JGsifJNM1UeAnvo0SlEinGVcVoOJnqPGWYCHbbC5qzbfqSQNMgGuMwCqFpDrPePjWHivxVkdJ4f");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new ListTransactions()
                .organizationCode("WFhsN-pL--oG")
                .privateMoneyId("49bc8a14-fc20-426c-b08f-6e4de1fdfab7")
                .setModified(false)
                .types(new String[]{"topup","payment","expire"})
                .description("qa9lzoklUzUhqTzUWpbuIIyCrZXClFXuFrgCdWEt");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new ListTransactions()
                .transactionId("P")
                .organizationCode("I-pXb-")
                .privateMoneyId("2eddfb44-626d-47d3-9c16-cc00224a3a9b")
                .setModified(false)
                .types(new String[]{"exchange_inflow","expire","cashback","payment"})
                .description("sluZ1JaLt0Ar9075D63dQIaaXEiWYFu73pBYfUVlxiqFJJF5Pg1GAmBfUjvKfgtrS0Xm4QWL61J1VAU9PMLU4f6kwsSmYXx5owaivj2EBzQm0BkW15eY9NkHcJeR1GLDKgedXHEr87Akku6fDuWavVo8cwBrLs1gKONnTVrlHT");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new ListTransactions()
                .terminalId("60d5e180-788a-482e-8675-3497d53021c3")
                .transactionId("3DtIR")
                .organizationCode("U")
                .privateMoneyId("a5444334-0116-4731-9069-94d22d84a846")
                .setModified(false)
                .types(new String[]{"payment","exchange_outflow","topup","expire"})
                .description("1DiBwQ7ivRuUPzWYtyPIx3BMkZlk");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new ListTransactions()
                .customerName("3IEteUmZSZK86AoX7pnfiFAHF3yehnLEs4HbmLkj42hfELnCQXI8GDzQZTSh4a4VAcqW1rKvTCbEcCCTX")
                .terminalId("8b23f77e-dae4-4d2f-974f-570bc997b7ea")
                .transactionId("ZaRrHn")
                .organizationCode("4-WbRN")
                .privateMoneyId("4fed1c89-7db7-4b24-9d64-d1ff1834bad4")
                .setModified(true)
                .types(new String[]{"cashback"})
                .description("GIrVqeiZhTlwzwBSXdEJopGGTh5zS8K51GOpmivMdcIHUd0oGLG4pOMMohiTwGBj27M3bxtkQgUu3kT9jeO8fAPwT6OKyHOn5c0F0armlb8NpDj");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test9() throws ConnectionError, ProcessingError {
        Request request = new ListTransactions()
                .customerId("4644fa50-1b17-4fdd-b070-0ac890f07982")
                .customerName("YKFKrheAD1HR2PxiTqvE7iyCGOtBYka5j9lMOQLwdgUDVr7IPEG7hwi71Ew3t4pfu7BMvgt5exEwgHfwuMY5dzVeH1nmoDbIeRjpvUjOelgNfHiqpRc4TnwZxVX8id7rKELAveapJra5JsJ5thiOlzdPpvcGMXCEbLuj5VOtqw16OYAvkaMxaP5VFRdaugyF7MAfhHGuQhYWMGKGXQW")
                .terminalId("07b0e8a0-713f-4002-81a9-de578546c09a")
                .transactionId("QvVJa9")
                .organizationCode("-0u-I-Y9EQ3B")
                .privateMoneyId("872d0d20-22d5-40d6-9318-a6b2c65ad9fd")
                .setModified(true)
                .types(new String[]{"expire","exchange_inflow","cashback","payment"})
                .description("XVgOQnDi2E1c8f1DPjxM7HzYUYdLcPXwI862F0vyZM9kybz3jnKg");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test10() throws ConnectionError, ProcessingError {
        Request request = new ListTransactions()
                .shopId("bdfca77b-7f86-46b1-a0c5-29f01283deda")
                .customerId("074c3252-9b2e-4543-9203-622f6d9dd2a1")
                .customerName("yuZMigl7h3")
                .terminalId("e6770d0b-a9ce-4ee9-b822-ae9bc9354c6f")
                .transactionId("MUu0AKvR7")
                .organizationCode("xq-gz5O73w-2IA105vE")
                .privateMoneyId("ef6efa91-67d7-4e33-a857-b1e14e456578")
                .setModified(false)
                .types(new String[]{"expire","exchange_outflow","cashback"})
                .description("ZvBo");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test11() throws ConnectionError, ProcessingError {
        Request request = new ListTransactions()
                .perPage(597)
                .shopId("7d485d69-5b08-4347-b23a-f83b0b12e6a0")
                .customerId("963d4473-e3a7-46f0-a723-b15f72d802e7")
                .customerName("Jdd3yVSQgI8euf2zv8QwscHj9NOEH61cNYxcNEsffCdIZm2hT")
                .terminalId("bf74409e-b172-4543-bca8-806827f301b3")
                .transactionId("R")
                .organizationCode("P-tJNLm-NSH--JcpY")
                .privateMoneyId("a2c5119e-6c42-4f73-9d51-0b35007d2942")
                .setModified(false)
                .types(new String[]{"cashback","expire"})
                .description("peOi39AjB6zpWburnbo4K9atpiLSuluCLJmCVNNVqAZJFsBe46qOtD1RbZvNFgElti6W7");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test12() throws ConnectionError, ProcessingError {
        Request request = new ListTransactions()
                .page(6064)
                .perPage(7233)
                .shopId("fab44f06-43ce-46dd-b963-56485bcc892b")
                .customerId("ae667af6-b76a-40b3-8723-76d463c8330d")
                .customerName("804LOE1bQdV0hhJ3Z36RCaa6hiS9VFf0GVjM2qGxe1rW3cnruUgPNXoHTQhIeShy8eQhAYQIQu6l203bc09LwNMs5sUsk0HZYMNn1yG6f4QvTXPr8L6baqG4GFNd11UaAB9tScuxbk4dhKJ4SI95I02XbwFMQK9kZmqcJ9COh34sGjxcrftNHgZnNQo6mBcYzBp3W16pO")
                .terminalId("afeceeb1-5133-455d-ac51-c87e7ae84b44")
                .transactionId("vvnz")
                .organizationCode("-ej-Y--R1n740m")
                .privateMoneyId("4b61d20c-5ae3-476f-9edf-85f65955f073")
                .setModified(true)
                .types(new String[]{"payment","exchange_inflow"})
                .description("aProDRG2Qh8d9OryDt0yNlVGyJyCvKS3rJBRJDJpNswEAbBqRhLYJXjylrh3JIOr3nXxfQ5aRt92pl2GMqrua5Vy");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test13() throws ConnectionError, ProcessingError {
        Request request = new ListTransactions()
                .to("2024-02-21T07:22:33.000000+09:00")
                .page(4214)
                .perPage(8657)
                .shopId("f5667105-47f4-4909-82cf-ea5d8dbfa4c3")
                .customerId("78751204-eed0-4a1a-93ae-5095e50cae67")
                .customerName("9sbDsZOWMKRtLFGl1C6Tr1S9onbM35dtNrAA0VyYM7nf9aAA06J5HJ3QwFJY2yhLajsI7A6Bume0UMF")
                .terminalId("1bf0630f-b54e-4035-93df-45e1f91be6cf")
                .transactionId("HVaUKt")
                .organizationCode("C--s")
                .privateMoneyId("da30646e-e75c-45a7-a3e7-33b2e5e10ec4")
                .setModified(false)
                .types(new String[]{"exchange_outflow","topup","exchange_inflow","payment","cashback"})
                .description("y1qBLCXKkgTdaxofICf2cc1IIytHotvIgXOQIq6PtGyNYOhhl32Dsf3qUWkA2QJm6nEV6nwfjyPuwjI9jLJEeGCGPPSUtJSn");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test14() throws ConnectionError, ProcessingError {
        Request request = new ListTransactions()
                .from("2020-04-08T07:03:20.000000+09:00")
                .to("2021-01-31T23:41:41.000000+09:00")
                .page(5363)
                .perPage(335)
                .shopId("618eb9d1-d264-4ce8-8645-acb5fbe2e2f4")
                .customerId("9867a6d6-53d2-4609-80d5-d65f14c9c73f")
                .customerName("RhuW9olC3FxkLasLXfUD4zzk4ARe82azx4B5JxfIuJ6jeXkyDLl2fuiIDU7gXHw1vOVIXeTs6HoysORGYzcjT3re1qmxu9jTP4RKvGXLCrmn6sXhpC1XHnfihjLgJkCU4IYockrfuHWmg3CkVtY5jYPJGeLVnDrZlrArQ8vGDWOxqjudhX1KqpukZ0NF4uUq3qk4cAWeZbOXJ6zcNc")
                .terminalId("49d3a9de-b26c-4b5e-ab37-820091065b95")
                .transactionId("aa")
                .organizationCode("Ic8S-46rB-E-3s7-32kc0-1C0S7R")
                .privateMoneyId("8eb42f10-b8af-4430-9f4a-9c7c77b0708d")
                .setModified(false)
                .types(new String[]{"cashback","expire","topup"})
                .description("OCF34D7xXTxnteJznfid89nYvwcpcYpc46IlRB2ToZXhC4xuWzwblrYLxRsqfHduX88JK4upbIQ0PNPF4Jv0qZjJxNTcjiIugiCc6OIuUUDOx5lDl2IggJl");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
