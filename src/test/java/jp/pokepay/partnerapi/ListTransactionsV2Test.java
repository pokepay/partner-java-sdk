// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.ListTransactionsV2;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class ListTransactionsV2Test {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new ListTransactionsV2();
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new ListTransactionsV2()
                .perPage(56);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new ListTransactionsV2()
                .prevPageCursorId("6ec3602b-16ed-49ef-b318-6ef96409f313")
                .perPage(417);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new ListTransactionsV2()
                .nextPageCursorId("9682b023-856c-436f-8c5b-a6575dd512bc")
                .prevPageCursorId("30d42930-3212-421a-a74c-c179fcf65080")
                .perPage(396);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new ListTransactionsV2()
                .to("2020-11-29T14:24:30.000000Z")
                .nextPageCursorId("c4915b4e-4f7e-4b69-a78a-ebb5ec6ddaf1")
                .prevPageCursorId("febc69d5-0bb7-4f11-b7b1-2b7dc90a06d3")
                .perPage(509);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new ListTransactionsV2()
                .from("2022-02-23T20:34:33.000000Z")
                .to("2020-06-11T13:58:15.000000Z")
                .nextPageCursorId("6da1dac7-dc2c-4104-b9e2-944c31a1c0be")
                .prevPageCursorId("ca60b746-6ce6-4348-8983-cf6200f09690")
                .perPage(531);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new ListTransactionsV2()
                .types(new String[]{"exchange_inflow","exchange_outflow"})
                .from("2023-06-25T00:31:44.000000Z")
                .to("2022-01-11T20:40:47.000000Z")
                .nextPageCursorId("ab3f5867-04a3-49bb-ad88-c58f0213e999")
                .prevPageCursorId("33747763-ab96-4008-b870-adfc6b6b29ae")
                .perPage(84);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new ListTransactionsV2()
                .setModified(false)
                .types(new String[]{"expire","exchange_inflow","payment","topup","exchange_outflow"})
                .from("2021-10-28T01:03:49.000000Z")
                .to("2022-10-30T14:30:05.000000Z")
                .nextPageCursorId("9709490d-10e0-4189-a5a6-de5c36c6d29f")
                .prevPageCursorId("e5c7cdf5-bcfb-4fc2-bc32-e8d49958981c")
                .perPage(139);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new ListTransactionsV2()
                .transactionId("cJ")
                .setModified(false)
                .types(new String[]{"topup","expire","payment","cashback","exchange_outflow"})
                .from("2022-05-02T21:17:01.000000Z")
                .to("2023-01-05T16:53:50.000000Z")
                .nextPageCursorId("19df89b1-1bfe-477e-aec1-52b746eb81b9")
                .prevPageCursorId("bc91d8d3-1149-4aba-bcd6-861e8790a206")
                .perPage(703);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test9() throws ConnectionError, ProcessingError {
        Request request = new ListTransactionsV2()
                .description("4QucaCTIuwp4PaSBE0QhobjzNQVW3hP0Ve0rN3Em7q1SjNjatjjDZX7RIKgDX3b9oA142xLkpis0qy5MfISyoLqEQKhMnAGBrL3KeptreugpuZPDhn3kvKQdinTisU7JGahMN0pspm5VBpWaMfH3OlTb5uoxVylmhf3ESdF0EHZG")
                .transactionId("pE19g89r")
                .setModified(false)
                .types(new String[]{"expire","cashback","topup","payment","exchange_outflow"})
                .from("2022-01-06T20:16:17.000000Z")
                .to("2021-01-11T22:53:10.000000Z")
                .nextPageCursorId("755335b8-2131-4ba4-a02a-377d66f09793")
                .prevPageCursorId("96786e14-9368-4711-af8e-62b613576ee6")
                .perPage(467);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test10() throws ConnectionError, ProcessingError {
        Request request = new ListTransactionsV2()
                .customerName("4XXAReVSL8MjPf2nDJncUb7prKqWXHoSFTkZLdy8B9WWqNrXVXI1wRTqwqzVsahBGWwps3iARDJTRZkOOEQFC19Wtss23YjQBhHozeYJjV02y90GWowMI3ASCsApxBJptaJJRDQ6YTYkiFEIISprQ3cmpI6bh8YrVsWGSghDCw1Un7nnaTSFczRArCskatg")
                .description("SAk3a8TcT02JvhzyAvEGRwH1gqt79bzapcrIrLur4lrAgRY4qmYCDpX8Ny7Ex4zLyYmVuuwRZjnfSOf90ILh1")
                .transactionId("nEv5pCv")
                .setModified(false)
                .types(new String[]{"exchange_outflow","exchange_inflow","payment","cashback"})
                .from("2020-04-20T06:48:44.000000Z")
                .to("2023-02-26T19:52:11.000000Z")
                .nextPageCursorId("09dbf574-b78b-4a07-b131-3e057d13bf3b")
                .prevPageCursorId("d6351118-2b24-4094-8281-5ae38811514e")
                .perPage(301);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test11() throws ConnectionError, ProcessingError {
        Request request = new ListTransactionsV2()
                .customerId("2766f103-e37c-4697-b807-7407b7017723")
                .customerName("1w0fAXCRcSE6z5QHSLVITcWyXkWwNeThLpKI1N6RIMY7t0u9TuR54ZsbCHGDImjW34z4jE8W9hhkpYWEzZLn5uyvbNkfkqdGOYba42tK1ETZVrimXQx2toEzw7Z1gM6fgx4uEjyIUvTVKqmlOa23scUcryj4GBWTbDzAVeKXVTyNRuvNAUp6ljdawfubjQ03lDRu1dHypEu4pqRk9KXyywxfAsvQQw8eNXw")
                .description("tPfKAW4UwDxtqXzHNdytk1inQrWiktMK0FHLyLnvzTdFf0Y1JODoBhEEJFs7RURiJHf6mnglgKA3t551AWYy2EKxgIvudVQKM3ivlyVYA6fe68jtm2G7nC3SW8MPeFKTYT7eEYLwvHQFKDImV0W8uMWRziTXMumFeaEHdh8PePoMZwnAEmuUL6pb761IWS7zT")
                .transactionId("jmF3")
                .setModified(true)
                .types(new String[]{"expire","exchange_inflow","exchange_outflow","payment"})
                .from("2023-03-19T14:31:09.000000Z")
                .to("2023-10-06T13:10:04.000000Z")
                .nextPageCursorId("f2905bb5-4b6f-425b-b619-de211f09e655")
                .prevPageCursorId("0c2d729b-5df1-4351-b3e2-51904775b593")
                .perPage(789);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test12() throws ConnectionError, ProcessingError {
        Request request = new ListTransactionsV2()
                .terminalId("0b72d74d-4746-40a7-a834-0331c693385b")
                .customerId("a92fcce4-237e-422d-9988-ff9de450ef59")
                .customerName("UnemzRdROKbGph7rDrumGN6tQ3vZwFKRF7w7plclcWB9bNRwQ0LABzLS5AginlSJbgCOpN21EzYv53e8C68gL6nh3hboA1VaXQqYz47H8v5OYX2Bb7kgjpYtpWxkJ26TN1VktFjJy")
                .description("7P4SbKkoz4u4vqNtkYjPXUyJ1V0r5CHRNT2ecfLdc33OSn94wpSCBGnb27KI1Ko9Ro9P2UOPHKcZd7kJ0a09BOfpTrIxahzBDxgf0eAPjokEVHRFLghiMn2sJjV2bGnLruRc9c27Gpu7iWb08UbIXfazIWog")
                .transactionId("xJNEf")
                .setModified(true)
                .types(new String[]{"expire","payment","topup","exchange_outflow","exchange_inflow","cashback"})
                .from("2022-02-14T02:07:44.000000Z")
                .to("2022-04-14T22:36:42.000000Z")
                .nextPageCursorId("046ecadf-cff8-4325-8b36-3688c4b817b2")
                .prevPageCursorId("f9b0a39d-2d66-4a04-b8c6-f3ce2fdcd824")
                .perPage(635);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test13() throws ConnectionError, ProcessingError {
        Request request = new ListTransactionsV2()
                .shopId("1405e00e-41dc-4d61-aa2e-c644530c2dde")
                .terminalId("fd911c65-54ec-48b7-b219-846f216e4c3e")
                .customerId("004fdcff-868e-477e-97b4-baac1cd8db7e")
                .customerName("JT6XY3Y33ek4ahxmsrZJPb5B1K9ZLJjlQzrcG4cFx990D5go4dBLdUCSZVd4cTqnNfSRiXLw6IXxof4N3bX72yEerLNEKMYsRf9vriYiP8HndtLKgFWIeB413C8zcpa0a0ipuLt3IQKQQHb6fikVg8U3XBigR3")
                .description("a01cL7edhmrVi5NIsblUeDquiQL8YRreNoLAWMJdywYSICtYcbHl2ktF16gpa54attROZcBbejZS9wdnnNKINI7vj8qEDPsdJ8JkL6K4fbUtzmymsdzvhUXmrc")
                .transactionId("10V")
                .setModified(false)
                .types(new String[]{"exchange_outflow","topup","expire","payment"})
                .from("2022-01-28T22:26:50.000000Z")
                .to("2024-07-08T05:08:04.000000Z")
                .nextPageCursorId("0b55d70c-3509-4322-8e02-6477d2c2cafc")
                .prevPageCursorId("1e04ee52-1d39-44db-9dbf-734750fe391d")
                .perPage(615);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test14() throws ConnectionError, ProcessingError {
        Request request = new ListTransactionsV2()
                .organizationCode("01-q---Ii-0W-2-2O1H-j-uOY4")
                .shopId("3e46d0e3-1045-4438-b965-948ecd13622e")
                .terminalId("5cfa8838-7805-4fbb-b824-e1e9ad2f9e23")
                .customerId("5d9cc243-1d70-4974-b240-677ea3ea2e99")
                .customerName("X3OQSs9cvMVMzYpfEHHq4AVCPhpFJVl2NE9OohrFLhvABt92YjeNGkeRy")
                .description("CxDwnyuzPdWfYw482S6oHFsZh9ksnqTSKQYaLtgBF21Mao0iMx72McbAtuQfbwPK5Ol2Udeu5ClBnNsqGtwvAjO8SQr")
                .transactionId("T")
                .setModified(true)
                .types(new String[]{"cashback","payment","exchange_inflow","exchange_outflow"})
                .from("2022-07-30T13:12:06.000000Z")
                .to("2022-12-07T10:05:29.000000Z")
                .nextPageCursorId("36968778-cd24-47b6-b699-e8447c2bc3bc")
                .prevPageCursorId("9887a933-2cc2-425c-8454-8eeea473aa82")
                .perPage(32);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test15() throws ConnectionError, ProcessingError {
        Request request = new ListTransactionsV2()
                .privateMoneyId("2df6c314-68a9-4aa6-8ee3-fc6190413dc9")
                .organizationCode("22jpm8L3yO-")
                .shopId("97561118-b881-426f-9d5d-41538867dc45")
                .terminalId("5449caa6-73f7-493c-aca3-f5344b5338d9")
                .customerId("8eac5466-cc8f-43ee-93fa-8d2b1eeb97b5")
                .customerName("3bjXKldANGzSZe49qKV1rholLnfHAgpNJKDDEjuzSmETPUL6TDRxNmjKWPDEzen9VEh9JKwUlzsxb9tQKSZdMATJHlP3s2aiyvcn73")
                .description("2KUYpvpwWJTv2DUcm")
                .transactionId("sWBT")
                .setModified(false)
                .types(new String[]{"payment","cashback","expire","exchange_outflow","topup"})
                .from("2021-07-29T07:10:06.000000Z")
                .to("2020-06-15T07:14:52.000000Z")
                .nextPageCursorId("ede25bbf-cc95-4fcf-8ee8-004edb94a50f")
                .prevPageCursorId("a88ee06f-c452-4985-9569-02ef037dece5")
                .perPage(227);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
