// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.ListTransactionsV2;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class ListTransactionsV2Test {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new ListTransactionsV2();
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new ListTransactionsV2()
                .perPage(136);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new ListTransactionsV2()
                .prevPageCursorId("fc527984-a5e8-44f2-a31f-4c7f0cdfdd95")
                .perPage(313);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new ListTransactionsV2()
                .nextPageCursorId("fb22ffa1-f122-40d1-a829-257fab34ceea")
                .prevPageCursorId("3ccd8c04-5759-4eec-bb42-5cb460baa4a3")
                .perPage(307);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new ListTransactionsV2()
                .to("2022-06-12T16:45:46.000000Z")
                .nextPageCursorId("b59dafbc-912c-4bef-bb8d-474796f0ec41")
                .prevPageCursorId("61cefb16-141f-40a0-a8bf-97792c4e46ec")
                .perPage(369);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new ListTransactionsV2()
                .from("2022-05-13T22:51:50.000000Z")
                .to("2021-03-13T23:51:09.000000Z")
                .nextPageCursorId("fece7a94-33ac-43dd-8b1b-1ec60b163d4f")
                .prevPageCursorId("4caa26ae-5ef7-4ec3-a49f-d4a4805d1b3f")
                .perPage(831);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new ListTransactionsV2()
                .types(new String[]{"exchange_outflow","expire"})
                .from("2023-05-12T04:41:04.000000Z")
                .to("2021-06-07T00:06:19.000000Z")
                .nextPageCursorId("8cf2e07e-679f-4d8f-821f-65dac7d4c4e4")
                .prevPageCursorId("f2538a72-d81e-4e67-9198-2d9d4a0aa3e8")
                .perPage(442);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new ListTransactionsV2()
                .setModified(true)
                .types(new String[]{"topup","cashback","exchange_inflow","payment"})
                .from("2022-10-11T10:49:34.000000Z")
                .to("2021-12-28T16:25:23.000000Z")
                .nextPageCursorId("cb3e846c-d7c4-41bb-a404-c55fc895efc2")
                .prevPageCursorId("27a88a14-4475-4cbe-af24-ad0171a19d4a")
                .perPage(645);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new ListTransactionsV2()
                .transactionId("IFUr")
                .setModified(false)
                .types(new String[]{"cashback","exchange_inflow","topup"})
                .from("2021-09-05T06:44:01.000000Z")
                .to("2020-10-14T01:18:45.000000Z")
                .nextPageCursorId("6dd14e7e-5638-4902-81cb-a0185959ff6d")
                .prevPageCursorId("e93949cf-e08a-46ce-bbd9-55031442dcd8")
                .perPage(281);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test9() throws ConnectionError, ProcessingError {
        Request request = new ListTransactionsV2()
                .description("ce6NgXmM6SU8mT9N7YdoyhvIOK96oQgvpt3OE4bGWfPwqWxwC3DU0ZYNIFrYHkTuOzry")
                .transactionId("GRNkAeSH")
                .setModified(false)
                .types(new String[]{"expire","topup","payment"})
                .from("2020-05-01T18:04:20.000000Z")
                .to("2021-09-07T23:55:30.000000Z")
                .nextPageCursorId("5fcd5437-265b-46d8-8081-5f3706143e05")
                .prevPageCursorId("1a0a7af2-ad93-4e89-9e39-0928d69b0d5c")
                .perPage(423);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test10() throws ConnectionError, ProcessingError {
        Request request = new ListTransactionsV2()
                .customerName("8K62vZdczxzKDF7OzztIRdIBCYTSHrtKwDRbFJx9qY9kB8kVDqJMjy6rf4CluMJ3q8UHdGY9c6av2inoQmoszzzj7gjncZRjG49ZyE9dB8fCGfTM2Oyolj4kfEe2uvMtiKxUivt9MIJ97msI3tBe6ti0SO07EXHC5hQ61pWDcVyEH0QvPCR5IiYZhX71qxxCDFjWtGssb86D9XZfo8j2fPJCGzVYdohDRxcepsSsdecspEcH6zAIM8ju98")
                .description("f3eDqYA5vYg7TRPpd99WNI7yrXSKnnTIb76zTEtm8AaIiuGx9L9HalOMU5vigXX7Icn5jXA5QxJPbbGkUILhTXtRt")
                .transactionId("mknLVk7hQO")
                .setModified(false)
                .types(new String[]{"exchange_outflow","exchange_inflow","cashback","expire","payment"})
                .from("2020-12-02T05:29:29.000000Z")
                .to("2022-02-09T17:20:58.000000Z")
                .nextPageCursorId("e5b630a8-6881-4a04-8d83-81465bf9cfa5")
                .prevPageCursorId("bdbe4cff-86e8-422a-a0a9-f10b73fdd11b")
                .perPage(827);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test11() throws ConnectionError, ProcessingError {
        Request request = new ListTransactionsV2()
                .customerId("9d99c341-5555-4bb2-894c-ad6eb8ec2dca")
                .customerName("GL09rrRBaBOdWWGJsxArgIuumMVdl31leH5Dl7ZUHzS51rJLdw2n2tQfnXr078yWrpzKRIJrBD5D7CpK")
                .description("eG53Xpalhw5eupOSaoLetupiLJGKA08kULtDXm7mGq20CccqYOFtqhMLy1fSrOZfnZ2mwTeB7HbtOFrcDL7mosyloW0gLyNig5qU771SYwG")
                .transactionId("9bLFf")
                .setModified(true)
                .types(new String[]{"payment","cashback","topup","exchange_inflow"})
                .from("2022-09-13T20:18:07.000000Z")
                .to("2023-09-26T20:31:25.000000Z")
                .nextPageCursorId("6abc9db9-7c38-4cdd-9601-a9f053d20a4f")
                .prevPageCursorId("ab3f5867-04a3-49bb-ad88-c58f0213e999")
                .perPage(868);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test12() throws ConnectionError, ProcessingError {
        Request request = new ListTransactionsV2()
                .terminalId("15cbab96-7008-4b38-b0fc-29ae27c00c53")
                .customerId("98d4869b-13b7-42d7-955d-8695dbb97e9d")
                .customerName("iumuB2TNJcJGvSmksA1MuW1A79SIV4QucaCTIuwp4PaSBE0QhobjzNQVW3hP0Ve0rN3Em7q1SjNjatjjDZX7RIKgDX3")
                .description("9oA142xLkpis0qy5MfISyoLqEQKhMnAGBrL3KeptreugpuZPDhn3kvKQdinTisU7JGahMN0pspm5VBpWaMfH3OlTb5uoxVylmhf")
                .transactionId("ESdF")
                .setModified(true)
                .types(new String[]{"exchange_inflow","payment","expire","exchange_outflow","topup"})
                .from("2022-06-06T10:38:03.000000Z")
                .to("2022-11-23T05:39:52.000000Z")
                .nextPageCursorId("5d685570-9b2e-403c-850a-60b143b8297c")
                .prevPageCursorId("bd2b7e86-c9fd-459e-b9e7-5db8278cb9b9")
                .perPage(627);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test13() throws ConnectionError, ProcessingError {
        Request request = new ListTransactionsV2()
                .shopId("006d11ab-04d5-4f0b-bf1d-902772835f67")
                .terminalId("55325684-d1fd-4d11-96b8-2131a83d9ba4")
                .customerId("95901060-912a-477d-9314-936851642711")
                .customerName("6fR4XXAReVSL8MjPf2nDJncUb7prKqWXHoSFTkZLdy8B9WWqNrXVXI1wRTqwqzVsahBGWwps3iARDJTRZkOOEQFC19Wtss23YjQBhHozeYJjV02y90GWowMI3ASCsApxBJptaJJRDQ6YTYkiFEIISprQ3cmpI6bh8YrVsWGSghDCw1Un")
                .description("nnaTSFczRArCskatgTSAk3a8TcT02JvhzyAvEGRwH1gqt79bzapcrIrLur4lrAgRY4qmYCDpX8Ny7Ex4zLyYmVuuwRZjnfSOf90ILh1FnEv5pCv1ztILSktq1cNxb1w0fAXCRcSE6z5QHSLVITcWyXkWwNeThLpKI1N6RIMY7t0u9TuR54ZsbCHG")
                .transactionId("ImjW3")
                .setModified(true)
                .types(new String[]{"exchange_outflow","expire","exchange_inflow"})
                .from("2022-04-02T04:19:54.000000Z")
                .to("2022-09-02T08:24:37.000000Z")
                .nextPageCursorId("63e5715b-e038-487b-9715-19b9ff9442aa")
                .prevPageCursorId("9a3946e8-cfe8-49eb-b09f-c5596e9aa017")
                .perPage(728);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test14() throws ConnectionError, ProcessingError {
        Request request = new ListTransactionsV2()
                .organizationCode("1sxp-")
                .shopId("5afd0db1-785d-48fb-85d4-5797d56626da")
                .terminalId("713d02df-bad6-45fd-b269-b22386f4452e")
                .customerId("4ac97787-846d-4758-99bc-153beaf7ae51")
                .customerName("2toEzw7Z1gM6fgx4uEjyIUvTVKqmlOa23scUcryj4GBWTbDzAVeKXVTyNRuvNAUp6ljdawfubjQ03lDRu1dHypEu4pqRk9KXyywxfAsvQQw8eNXwtPfKAW4Uw")
                .description("xtqXzHNdytk1inQrWiktMK0FHLyLnvzTdFf0Y1JODoBhEEJFs7RURiJHf6mnglgKA3t551AWYy2EKxgIvudVQKM3ivlyVYA6fe68jtm2G7nC3SW8MPeFKTYT7eEYLwvHQFKDImV0W8uMWRziTXMumFeaEHdh8PePoMZwnAEmuUL6pb761IWS7zT3jmF3XMzgKDKO5")
                .transactionId("UqQsbMF")
                .setModified(false)
                .types(new String[]{"topup","expire","exchange_inflow","exchange_outflow","cashback","payment"})
                .from("2020-02-03T08:11:05.000000Z")
                .to("2023-06-29T18:25:12.000000Z")
                .nextPageCursorId("30f1ff9d-ef59-4f88-953a-1d6e057e9d65")
                .prevPageCursorId("4860306d-5194-4efa-9c52-df967e6670e4")
                .perPage(861);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test15() throws ConnectionError, ProcessingError {
        Request request = new ListTransactionsV2()
                .privateMoneyId("037875d2-a2cf-48cb-a21d-4c4705c5bba4")
                .organizationCode("-X2-C07GVrnb4d-B4--")
                .shopId("34dc55ac-a31b-4d3e-ad69-82ee07a1bdec")
                .terminalId("301a1fbb-1b9e-48be-938a-00ff3831334a")
                .customerId("41652a06-e107-4103-a2df-97e77f4ab73e")
                .customerName("COpN21EzYv53e8C68gL6nh3hboA1VaXQqYz47H8v5OYX2Bb7kgjpYtpWxkJ26TN1VktFjJy7P4SbKkoz4u4vqNtkYjPXUyJ1V0r5CHRNT2ecfLdc33OSn94wpSCBGnb27KI1Ko9Ro9P2UOPHKcZd7kJ0a09BOfpTrIxahzBDxgf0eAPjokEVHRFLghiMn2sJjV2bGnLruRc9c27Gpu7iWb08UbIXf")
                .description("zIWogjdxJNEfM7ZphEzx62f8FNzaDel7ro4JT6XY3Y33ek4ahxmsrZJPb5B1K9ZLJjlQzrcG4cFx990D5go4dBLdUCSZVd4cTq")
                .transactionId("NfSRiXL")
                .setModified(false)
                .types(new String[]{"exchange_outflow","payment","cashback","topup","exchange_inflow","expire"})
                .from("2020-03-21T03:35:25.000000Z")
                .to("2021-01-28T09:27:41.000000Z")
                .nextPageCursorId("eb184385-8def-41e0-a634-4d0f5c103d4e")
                .prevPageCursorId("1c990833-aae0-4762-985c-e437b7a43332")
                .perPage(122);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
