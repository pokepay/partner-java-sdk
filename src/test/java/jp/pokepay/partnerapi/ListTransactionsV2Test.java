// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.ListTransactionsV2;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class ListTransactionsV2Test {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new ListTransactionsV2();
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new ListTransactionsV2()
                .perPage(584);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new ListTransactionsV2()
                .prevPageCursorId("680e1ec7-f7fa-493a-806d-353e1e8c3b3e")
                .perPage(820);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new ListTransactionsV2()
                .nextPageCursorId("041a5de6-f8c8-4ed3-ad02-aff41001fcdb")
                .prevPageCursorId("f106bc9a-382f-406d-935a-05d44e05d0f0")
                .perPage(597);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new ListTransactionsV2()
                .to("2020-06-18T15:41:52.000000+09:00")
                .nextPageCursorId("588f99ff-ece7-41b5-b0da-5bca9f89b680")
                .prevPageCursorId("0b57883a-a60f-47bb-a5f4-b61be3a34da2")
                .perPage(715);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new ListTransactionsV2()
                .from("2021-10-12T19:20:00.000000+09:00")
                .to("2024-06-27T16:08:46.000000+09:00")
                .nextPageCursorId("7b369155-b628-49f0-ba72-c74364f1e4e8")
                .prevPageCursorId("fd96b689-76e3-4a6c-a470-5ccdba06f605")
                .perPage(268);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new ListTransactionsV2()
                .types(new String[]{"topup","payment","exchange_inflow","exchange_outflow","cashback","expire"})
                .from("2024-06-14T02:17:54.000000+09:00")
                .to("2021-06-02T21:52:43.000000+09:00")
                .nextPageCursorId("d84c2e22-e822-47ef-b66f-3937c3516d80")
                .prevPageCursorId("79d7d40d-51f6-4ccb-86a3-64e550692069")
                .perPage(88);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new ListTransactionsV2()
                .setModified(false)
                .types(new String[]{"exchange_outflow","topup","cashback","expire"})
                .from("2021-05-29T14:03:43.000000+09:00")
                .to("2023-03-31T10:44:49.000000+09:00")
                .nextPageCursorId("48cf7a06-5c1b-46ac-9461-611eb8593170")
                .prevPageCursorId("4aab982d-96a6-4540-a28c-3cbf898e0c42")
                .perPage(845);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new ListTransactionsV2()
                .transactionId("kwhF4")
                .setModified(true)
                .types(new String[]{"expire","topup","exchange_inflow","exchange_outflow"})
                .from("2021-01-30T16:02:30.000000+09:00")
                .to("2021-01-23T11:35:49.000000+09:00")
                .nextPageCursorId("4e627e36-7457-46cf-856b-35b360dde915")
                .prevPageCursorId("0a3a08d9-0916-4cd0-89d1-137bd2957c98")
                .perPage(109);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test9() throws ConnectionError, ProcessingError {
        Request request = new ListTransactionsV2()
                .description("elU93")
                .transactionId("77NW3CjNBU")
                .setModified(false)
                .types(new String[]{"topup","cashback"})
                .from("2022-09-16T09:50:13.000000+09:00")
                .to("2023-07-12T22:33:18.000000+09:00")
                .nextPageCursorId("bb7711eb-7977-4a8a-ab05-ba3be7677c4c")
                .prevPageCursorId("0f281e32-d5db-45c0-bdc1-a1fadb3803e5")
                .perPage(861);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test10() throws ConnectionError, ProcessingError {
        Request request = new ListTransactionsV2()
                .customerName("kFUWtmWlh2EHbyOgcDZ8OfxUslVCeSYgj0ovPeIZTosxGWT72mHk2ajeGZbHRGE0c6qoZVvh07io71hKqnRp8HCgXuUTeXdXFBTAVbZq8X8jyslLJFQRNjL735TqHmb4VqFLRowSSVHOf2MKOsZwvpJNLyJPYo08kYWH0Yff0SoBNANrctkECJFpPwnceNueSPus1C")
                .description("XmfC59XLP6SLnfsrwOc8up4hqOeXWb0wMQGP9bTKWpE6Jcep801TxinI72HijUh3fRKmK4eHGuf5j5geSAFGfhYNuhQPpOZFqLPQfV0dCEbQoJbYYxJQ569Pe8hUTD0d1M0wkw6WjFAp")
                .transactionId("NViBaTbCHA")
                .setModified(false)
                .types(new String[]{"cashback","payment","topup","expire","exchange_outflow"})
                .from("2022-05-11T21:16:08.000000+09:00")
                .to("2024-08-02T20:45:32.000000+09:00")
                .nextPageCursorId("84b85b10-bc25-4f05-8d9b-4e1aa308397c")
                .prevPageCursorId("b94be536-23e6-484d-95df-68aa333046c6")
                .perPage(187);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test11() throws ConnectionError, ProcessingError {
        Request request = new ListTransactionsV2()
                .customerId("6e89db19-0d40-42eb-93d5-f502c54ac07b")
                .customerName("iyMEsK5sKPpovxbOKzV2rKtCMobtEba5wf9Li10LO6qFzlCRQpix56cKMQYH7RM6p6W2VZcfrswvOCRy37J161kSshM8o38fTP7QABnIoMVx0XL3HUOJQYOdKOea2T85MZdgDileU2gqW7VkbExk3xqzOthmXD")
                .description("BRUibusDUvSPz1FwS71VI6ph6G5Yn6fJJo8pVQa0ZDjmmhETgpyCl9UGxpYqZ5zV0xHonuPpBRacgCEqi0kuJ3XZEQuXUUdYvAR8ht6auyjDVQqRkMohFk3l")
                .transactionId("cqLuObyCKY")
                .setModified(false)
                .types(new String[]{"exchange_inflow","payment"})
                .from("2024-06-24T15:36:09.000000+09:00")
                .to("2023-02-10T16:32:00.000000+09:00")
                .nextPageCursorId("042867f0-86cc-4da2-9b1f-9b29ef000bc9")
                .prevPageCursorId("408c2231-2ca6-4694-9063-73b115423652")
                .perPage(543);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test12() throws ConnectionError, ProcessingError {
        Request request = new ListTransactionsV2()
                .terminalId("86b03ada-fa97-48f9-bab9-a65740f6db50")
                .customerId("08cbd4e3-2614-4e9c-b000-cc9568a40122")
                .customerName("d5tn6t0PKPN3xDAxGaLT3saHqxB1hk")
                .description("WoPmIOXrjj4IBay1LD2TU71XeDSgYcVNR8SjipeZb")
                .transactionId("r7Sav4")
                .setModified(true)
                .types(new String[]{"payment","exchange_outflow","cashback","exchange_inflow"})
                .from("2020-11-24T21:58:33.000000+09:00")
                .to("2021-09-08T07:46:20.000000+09:00")
                .nextPageCursorId("1913afd7-cfb3-474c-b005-e67068693558")
                .prevPageCursorId("e973cd81-6db8-43cf-ac2e-b68597f07b85")
                .perPage(917);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test13() throws ConnectionError, ProcessingError {
        Request request = new ListTransactionsV2()
                .shopId("799d7f73-c1c1-4af4-8a13-fe1af820a6b1")
                .terminalId("7515b576-fc90-42eb-8477-412aa78c84e5")
                .customerId("f081731e-3250-4539-9b63-7570ab75f10b")
                .customerName("TTt4ox831ZJNf87pOwYlWXcIu5ugonzvhToMz5Bds8vXUde9GRNSO8TveYKzAbbqgmIvyjGy2D1q8qfFJrg4qNX4k77W53R7vVGhMHO7qriyLM2e5jK2t5HlFpe")
                .description("gXT0m7UypGkSovSxxM6QfY4uvnnIrOxNuseiEMSyHMlIhqo57SbDtm6RgplMzUZL1gokbAWei7FaU28QBPJ")
                .transactionId("U0r0IaP0xb")
                .setModified(false)
                .types(new String[]{"exchange_inflow","payment"})
                .from("2024-05-28T04:39:59.000000+09:00")
                .to("2023-05-17T08:20:46.000000+09:00")
                .nextPageCursorId("e7b5cc08-f0e8-4068-838b-3872bee2da8e")
                .prevPageCursorId("14b134fa-c620-4518-92eb-79181268a0e9")
                .perPage(364);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test14() throws ConnectionError, ProcessingError {
        Request request = new ListTransactionsV2()
                .organizationCode("-8-9I6-")
                .shopId("a14a04d5-082c-40c9-b3dd-b0416cdb67c8")
                .terminalId("9416049a-7f96-46a4-bc00-93658cbdcffc")
                .customerId("bebae8cf-8181-454b-9772-9f01df1e25e4")
                .customerName("rRoqDsP64LFjWKmfQehHB6q6w0xATxdE1BhgR4QIviy9ZflsovwShGDjn8NkIVLqNfXI4tikbLuhEpZQnBNHOfGXMEYKRcMri2E7PFHa8CFCuf36FQy5lcaEcZfHz1PbqVhB66g1y7YNOCKZLmePvjZyqrTDlv0Q8oBHlrjyjdGcRXFV9NwzCUqbnlwNTkJSTJW")
                .description("JMo3EQLzkStPvWV3UXuul94Wv86xzljp9KqovEPrbPCLQ7egZxJEmc")
                .transactionId("Y71wB")
                .setModified(false)
                .types(new String[]{"expire","payment","exchange_inflow"})
                .from("2024-01-20T22:49:22.000000+09:00")
                .to("2021-10-25T01:24:54.000000+09:00")
                .nextPageCursorId("ec17b1a2-fb02-4a1f-9ae2-9a29606fbda9")
                .prevPageCursorId("ce2e5fc1-dad6-4fbe-9682-5ebc136214b7")
                .perPage(472);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test15() throws ConnectionError, ProcessingError {
        Request request = new ListTransactionsV2()
                .privateMoneyId("2d2f3742-ae8c-4f67-a934-89dd1672f616")
                .organizationCode("-b-b946-l-vWS--")
                .shopId("956c071d-c05d-40d4-b6a2-be8a28e74b6f")
                .terminalId("44513909-b0f2-4500-b72e-1469043e8167")
                .customerId("0044eaf6-fe4c-4eed-a5da-d4cd64288b44")
                .customerName("w8lP5EhMjx73eJhYrcJBQI6jICXZWMb7AIB3IAOrcVBT")
                .description("BJAxWyq5zf0G2jN7JDtsFI2XsPcETZgEIq63ZfjfXdsAh8KI6BvISuqTDjtlZf2VEt2i5vf1NTDszVXhElHj3bOqh6c9MKch5qSGJnVR3qQ")
                .transactionId("aH3Cf")
                .setModified(true)
                .types(new String[]{"exchange_outflow","topup","payment"})
                .from("2022-05-06T20:35:23.000000+09:00")
                .to("2023-12-16T21:05:20.000000+09:00")
                .nextPageCursorId("977250e1-28d7-4c63-ad77-b159d252e909")
                .prevPageCursorId("3a1ad64d-599b-4f66-a6a5-090117081f55")
                .perPage(675);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
