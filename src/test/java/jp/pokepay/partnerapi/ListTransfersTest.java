// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.ListTransfers;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class ListTransfersTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new ListTransfers();
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new ListTransfers()
                .description("rmq5IOWxTMvoQn184hOnOyz0AGMcwK6w3py67SNGmX8Di2pdH8RGKChALNh6gLvq9lh6aWfc8isTfG48vxB9aOOXCCxtmguu");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new ListTransfers()
                .transferTypes(new String[]{"exchange","payment","cashback","transfer","campaign","topup","expire"})
                .description("9lcrEgSe7kdaAO95UH42Tz8MzJdoacTArquC5Dkmcl0nbdkXn05MJOturfNjtMx50sWCsPMqey3iKBcjE03RLAbaewztoSecKF0GwEQBxRZYaIOU74fVdvxavMqKpT0uBeadL5TbJjopiciDKCEmabsJCIaV388A5Vp773TEewLutfj");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new ListTransfers()
                .transactionTypes(new String[]{"topup","transfer","cashback","exchange"})
                .transferTypes(new String[]{"coupon","campaign"})
                .description("kS");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new ListTransfers()
                .setModified(true)
                .transactionTypes(new String[]{"topup","expire","payment"})
                .transferTypes(new String[]{"payment","expire","campaign","coupon"})
                .description("bfnfJnV1aKG06mgNOwkugNbDlIerO4uqZ6S49GfBUjMBHY8MeMD6TKeZJCFHolKrxt1lcxwiKIKEhv3yCrI3p18DhwSProEoMxebEQYtnvidzklsCzMYMeZ0wJ5OuytoY0xtZoLI1IXcx4qzcUU08ThSIkab7VEuirR1uLIEImCOGSW2uRJswTmtuu2UcM");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new ListTransfers()
                .privateMoneyId("ff87427b-e0ee-439d-b081-ea5423ce0d22")
                .setModified(true)
                .transactionTypes(new String[]{"expire","transfer","topup","exchange","cashback","payment"})
                .transferTypes(new String[]{"payment","transfer","topup","expire","campaign"})
                .description("Z8");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new ListTransfers()
                .transactionId("126d329a-9854-447c-a704-ef99c89f2187")
                .privateMoneyId("3bb8065e-407d-4ada-843c-924fdc02adad")
                .setModified(true)
                .transactionTypes(new String[]{"payment","topup","expire","exchange","cashback"})
                .transferTypes(new String[]{"expire","payment","topup","exchange","coupon"})
                .description("FhDvg2cDHmRV39NMQH040hKo0a9h1s6JU17qip6Wdje7ZKAQ5CKxzNSeRMPsU7ag5N8hK3nC0ZU2CCL78Tt8znuqWFG0pXEdJH");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new ListTransfers()
                .customerName("bmdsFE4GaxSASuDO3eeXy8SQmJGj9v8NIDcLEKkBybMkIoFGjC5VbOYgUFzw259b5sLaKzU9qS1E8KW5LBgVqNxHGbRcUJBPeu0UfSfakeTWhiRmkclCYRg4qMO9VxLEPkUdXcEhAcGjSl4S1BzAogdEj5ORHF5A8zYILqtzlaOrlCYkUaimIcaLkwxbmKmgtQx9OhNoKVzSYRCrGbiESG5alCoQycLwxjS6tthHm")
                .transactionId("6c8c8aae-d899-47ba-90c0-80e31debfbc5")
                .privateMoneyId("f4f40897-f975-42ed-8d78-141cff58bc96")
                .setModified(false)
                .transactionTypes(new String[]{"topup","exchange","expire","payment"})
                .transferTypes(new String[]{"cashback","expire"})
                .description("du4dKDgRhB2lrUXcZSGaLmkO1x4yT80bZIA70jTGHte3mZWXTYnCqI");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new ListTransfers()
                .customerId("c3260001-0b12-40c7-9977-f0025e04d192")
                .customerName("V98l6VQ2ytPnHseX0g4B2CcXs4ofKPNT16OmaWBR4ACdGRAERMfestVuKevPRkZrwNpcli4slznItUYjSLjfOJSvNzXP1Vk0JH9zvfEY3duMz4gOFrKRtuhN8HQZXgpTQU45MTeWBZJw46skOOgjMAVSVKFf4KxDiPJc5CsRjuhWAkxpXYQIb48pD")
                .transactionId("ee2e01c0-025d-4a69-b3e1-8a904ab7fc34")
                .privateMoneyId("186c2eab-567c-4d4f-8a9b-e341afe2a16d")
                .setModified(true)
                .transactionTypes(new String[]{"transfer","payment","exchange","cashback"})
                .transferTypes(new String[]{"exchange","payment","expire","topup","campaign","cashback","transfer","coupon"})
                .description("ttPZrZCqzzijLMZCYirTG6");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test9() throws ConnectionError, ProcessingError {
        Request request = new ListTransfers()
                .shopName("ieRCuYr4oTFW7FpIRbiTRirlXY2OXwrAhUyarUXI4FSvfqAY3HXl1Ps2oxog4kbsOiBFSUndv5bPGuukkoa1F4B5hzTJNejIN7UpI6GbX07XtYYFjMrUOUUfqqzYy0z1Y4Bnj1NCqhI6CZLO")
                .customerId("a090c329-a465-4b94-9725-e4ecd2522971")
                .customerName("aURqYPWnDwpaX520U0rC2e2MJ3cxokete7OqnJp6zeFTEIAZV5iLlukryw5OlhA9Jjz6ZuJyPr1pk8KjnPS1btFxxyS9N0l5rjSuwOzguBfylJieNgmAimhtG7vRodtJZTNkYTVQVN0VwOV5R7PwgPnLYADlRbvsqhoP2E0j6iOT3fduTdkMHBOsA9dA")
                .transactionId("1fae2012-61b4-4179-bc05-c96345dca6b0")
                .privateMoneyId("677c2269-0658-40a2-86fd-c40d0f608949")
                .setModified(false)
                .transactionTypes(new String[]{"expire","transfer","payment"})
                .transferTypes(new String[]{"topup","cashback","expire","exchange","payment","coupon","transfer","campaign"})
                .description("tooV0Tw6DZGG9X89kQl6nYoOMhk69jLrXK0ib3zPWHPSJS9s1NKmx80MK0v9tMiXosDT8Cy4vbEnLFeKXAF9zk8FllnnI0ZdPuk6kKCdrxF5K3QD5rrnRdmXZ4T57RNn9D");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test10() throws ConnectionError, ProcessingError {
        Request request = new ListTransfers()
                .shopId("6b9a39e0-abbb-4949-92e3-1c8931c07e02")
                .shopName("g0s19vBRMM3nUWCU62IMkETRv0FYRpbVHWIkeycDC8Kp4iFHUAN4paHmiC3xu7G4IY1Xev3ttFIVPU3yJTxuY5K2OHGVrz0yli46G8iaJw6rzFFCCTjpsiYlTwkb3qRBGVv9QWtipPYSoXyyTJGLafh1yz9YLfueowxIj48NBDyaSANbV9gL21zezMWO032Dqdste5i0kJBTk7vSJoLF1XmbKyD0KdJeOywz4gAeCjPv8IlgrJ2rrFqEjVMuLKj4")
                .customerId("0c6a272e-7053-48b8-9839-a27e3f7d2834")
                .customerName("PknZjNVO3gBCFyro0xIrRXEbExYb01NGP0v4wgawxslWUgMBQO0i4JNgay71fk9qYWyob9iSpJ4uC8RWj53GREj6tfEQBVmDoTaCsDSkfR5DKyetckoRR7WRXSYcxOGjtqoXBwcQtG2k4BoSH2gNcy0vMl65658ECucsNuanp2GP4BdnwR7UpCnJ14SqYRkWkQ8IV4qSrK9dXwfb92bCC63e0uzQqNUXdpk8n7")
                .transactionId("5bf6691d-d83e-4bcf-b08b-0558f614ab55")
                .privateMoneyId("c4711b99-06ee-4913-a2e6-e8d2b6f1e1b5")
                .setModified(false)
                .transactionTypes(new String[]{"expire","payment","cashback","exchange","topup","transfer"})
                .transferTypes(new String[]{"exchange","cashback","coupon"})
                .description("Ogpe92P1mkEfIGyNBPdntZWb8BowzilPMzW5OU9SxREy4QhpdsEQmn4SZzNIQZN1UOTLLSe9qyXTn3klzQtO5drnrxX76DDEnCgZ3VsKVLsiKGhC");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test11() throws ConnectionError, ProcessingError {
        Request request = new ListTransfers()
                .perPage(6079)
                .shopId("49a2dcac-9934-4f52-8568-f4c8ba367b0d")
                .shopName("YUAWUARg7OUI71RlGB1YF6cpAwIm6AR8nyi5Dkoql8N7kf32kO4bXevN3OXQM2AHjKAhiBN6a0h6")
                .customerId("0b06be54-af6c-4e3d-b899-edfa90700737")
                .customerName("WkDGmeOSwy6YEgqPxmFM2toVW5ZHmUxgIMdxkAPCRxo9Skzy")
                .transactionId("33e63bbb-f695-4de0-ae25-6bcadf4479f2")
                .privateMoneyId("cf3f0f94-5753-4864-bcb0-19ed1034c0e0")
                .setModified(false)
                .transactionTypes(new String[]{"expire","transfer"})
                .transferTypes(new String[]{"coupon","payment","topup","cashback","expire"})
                .description("KypyC1VCCs1r0");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test12() throws ConnectionError, ProcessingError {
        Request request = new ListTransfers()
                .page(3658)
                .perPage(9411)
                .shopId("59595f96-921f-45f0-a7e4-d100fba84af1")
                .shopName("40Sf")
                .customerId("3b83d27b-ff89-4349-9dd1-ec27f9696c1e")
                .customerName("r327OU0iYPYSFCrDqXeUCOdyMfS7YWWOgFJRp6Fl00J1sjS8atPX8dqEo3mhn9d8emaI6p4NxwKd45AtAeS4sJsi3oLRKSgiboxTNMEOWBUellyU4WZzeHCApkXlE4V3eLifpjyxiqcPCe8c2R92PvBAuLWN6RuBfby8COA1fshG4KzrmWhtRkXFNmDMeOp8ADpGaNBrALjZqO")
                .transactionId("6c7ea1f2-b02e-4de9-9b8f-87e2993efe93")
                .privateMoneyId("646d633b-7f5a-4bca-b556-0765afcd30b1")
                .setModified(true)
                .transactionTypes(new String[]{"transfer","exchange","topup","payment","cashback"})
                .transferTypes(new String[]{"expire","cashback","payment","exchange","coupon","topup","transfer"})
                .description("eKkWp6IM3jdcOHFnpPJLBWCll6t3uGrzaa3cu9dXiE6bnqAPQTa0fMqoUj2dm5p5hbIjdQiJ4EsxzxWMcg1XOu6id");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test13() throws ConnectionError, ProcessingError {
        Request request = new ListTransfers()
                .to("2023-11-10T09:17:23.000000+09:00")
                .page(4873)
                .perPage(8293)
                .shopId("ebca3778-9fb8-492d-9a8e-04e6b901f3a0")
                .shopName("24NMoayvV1dmdRgB2AIj61K2z6JCQmBIzLDOQWMZpTpDBuugsfxyGDY31V7aOyoTFhmAOyf92zQkyeceXJvU1wv80swRYejWU3KuEOMKhw7sxcFrncyOhR2RNlWyQejR0BwgPklUoKMqhG35OoxNLo")
                .customerId("a7938c92-38db-410b-a5c6-21477d4b240f")
                .customerName("ilKOPM3R0rn2jIKC0x5IRWH8ihuxMpTaql0sO7odcdnCo1sXu5dRXrkuKC85srXxNNlYerWYVFn1uY5QK6g1rYpSyRFKTO9i7AvbL0UMeaV5eYuFx2srRg2DznGdh4kqeyvueqUJxb44B7zkpHIEWOlPsicfr6WKs7PrHoyy80nnZCw5yUumErfTANWPMSrm8l62AADXF8ZnuUPTZeKgFmi04pLAnEx2ETRQVRUP3PnMVWofh9FRMi")
                .transactionId("9a652c3d-c6fd-4b23-843a-2636bfce204d")
                .privateMoneyId("80678cba-b6f1-413f-911a-24e236f4d40e")
                .setModified(false)
                .transactionTypes(new String[]{"topup","expire","exchange","payment","transfer"})
                .transferTypes(new String[]{"exchange","transfer","topup","campaign"})
                .description("9ZemwOab9nxo");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test14() throws ConnectionError, ProcessingError {
        Request request = new ListTransfers()
                .from("2018-03-28T09:02:36.000000+09:00")
                .to("2020-08-03T16:43:27.000000+09:00")
                .page(4806)
                .perPage(5940)
                .shopId("7e149284-8efa-460e-a4d1-048c35b92990")
                .shopName("4MuxonTO83IeICGBWPXxNyRcYmQggQ8cO7nLnT4v59laYCQzRP6ei4j403aQIWEYyY4z8gt7xYn1P9BqtEn7TwiyCnCuiCcOEttTRbLsH8PfspIheXknMDkyZGSevYqc1UUZC4QDRCjCaftyeSHiQ9soH1p1PecoRfoU9a6OM83o6UFoURRNtZ1xdMj7wGxI5Yn2zXZBN9kjGGdHS")
                .customerId("46cb4bf2-8fb8-48c1-94f9-fa4a6ea29d8d")
                .customerName("WpCLYztleVn0aWGUKWpkZ55lc77LAQz2wGOSVfQ6AVfh2zA4bWFnzKjOUgQCJaqQg37AtLlgb1zThRmw9Fo9NLHfOfzbvMw3mOpCWHr")
                .transactionId("b9a65ad0-defc-4080-b114-f8f93aaf1dda")
                .privateMoneyId("3b21698e-068e-4c63-bd2b-854f5ce1c5fa")
                .setModified(false)
                .transactionTypes(new String[]{"payment","topup","transfer","expire","exchange"})
                .transferTypes(new String[]{"exchange","cashback","expire","payment","coupon","campaign"})
                .description("BlAtjs6Wcr570T7rm4nT1n3Folimsv03lK30l8fAzoXv3YAx");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
