// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.ListTransfers;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class ListTransfersTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new ListTransfers();
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new ListTransfers()
                .description("GWisyohwHRxTKHsqRs0ZnJ3AJOXAgs8wBwrz646HYxaCadmiPust58dS6ykiHK5ui2y2K4FgVEDSPIqQaPN0ohY7HoinOt3N2180Pmd5zgFOBqia4Qo6AhKEg1rGR4X6kYhBt1B568pp8iAFjiSCuuBqWKCz1rhHrpZJGwT9d");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new ListTransfers()
                .transferTypes(new String[]{"expire","coupon","payment","topup","exchange"})
                .description("M02Gc9cHJ5bV2VU5rk0bhfZP7vOnN4Zaru7M70RwV8877T9dCHqfzczK6iPkbm80S47pPd6ZGGFnrvSsS7TiDcm63mqNOTAfvR6ef6emRKm3VvvtKTe6clSr7cIWFiLmT3KhYWkWfoFzobJOM7zlS8Zxx44j8vywtmHhjx0dVjEppv3GwvyFc1rUnCbb");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new ListTransfers()
                .transactionTypes(new String[]{"cashback"})
                .transferTypes(new String[]{"expire","payment","topup","transfer"})
                .description("7g8AvQToiPfx");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new ListTransfers()
                .setModified(true)
                .transactionTypes(new String[]{"topup"})
                .transferTypes(new String[]{"topup","expire","payment","campaign","cashback"})
                .description("akWu1cXOJ3XM3VFkiLMYg7XuPeeI4T2LNNcCHOCY3RnEln1l302SzGdqiuSKv6ThYhMaHsfum6j2Uo62lqTOEG4Kwj3JtFqHn5l1Kh0srjAivifBxllqljhN99UNTO6gJuHmtJQQE");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new ListTransfers()
                .privateMoneyId("62ad7b67-97cc-44cb-8e72-ca79bd94a28c")
                .setModified(false)
                .transactionTypes(new String[]{"payment","cashback"})
                .transferTypes(new String[]{"expire","campaign","payment"})
                .description("C1WEl7uwa8D775E3sc0CmcCLDz2DSJEt2OROAVgaqsl76fbxl");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new ListTransfers()
                .transactionId("b96cc8b1-6e50-4894-a64d-3163639ec5ce")
                .privateMoneyId("7e55931d-f090-48c9-862d-2b0226165491")
                .setModified(true)
                .transactionTypes(new String[]{"cashback","transfer","topup","exchange"})
                .transferTypes(new String[]{"transfer"})
                .description("eAOJNToqCH902jiVEzFQazusstnQhkWDeEtQ4XpHy2AtotcJjPjxLUYtK6o2HrT8YHc2BGgj27AeQMlkTVNAEhH27BXRd2piHyQEdhYWajRFKPcLUd31tDMKOP351CbZXzy9pKjUljdBGEMOotoaAaeLMTzRaXNj06rSSL3Q7mywbhahezWxsLHGzeY7QerbcKk1mQWG");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new ListTransfers()
                .customerName("InknYZfcgMK4Ql7OGxGw4KYA76fCwdPxUtSwFiTQdQXL2n3Q5m3Bss0388GtCDZvJvvrb4BMmZ1uf2C0N8s1fGLLT2qAXjOlDwoefAhEOXeuPSBHdbK2euVKB2qd3IJP8MIejMPhCJh0d5nZ5QqiZ3gIHXcZ72")
                .transactionId("98d29e54-d662-41d9-a9b5-dd9aa5e50a55")
                .privateMoneyId("ade95984-48f0-4858-988b-aa1b839f281d")
                .setModified(false)
                .transactionTypes(new String[]{"transfer","expire","exchange"})
                .transferTypes(new String[]{"exchange","cashback","coupon","topup"})
                .description("WbKIHDUsi3fueiwPdzBT5pYNvHXZNNfvDz7D7eF0E16mC6YhOhGp97fRMcIrCYRlHdwVC");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new ListTransfers()
                .customerId("f7cf6afb-56aa-44d4-ac74-6834440037bf")
                .customerName("QGYYqJnG2rQKJDixU8uskSZ9ZzMtlUDTj8lEQAVYmYbJphWYUH5jODkdF93zLsHaozU81SZAqWBeuuq41u0Qqa0l50L2qusx1OW5DWEe3dl6OBVXcTQ2p3wVFritbFd26FxavKh2bx0aw0mn7m4dNbIFvy104NZ1Nmz5NakQ0jkrB575BhkSm2QXcrNH9xrxcpsbYR1djZIncrxhueuPjvF7lv86")
                .transactionId("856822ba-7378-49a6-afca-40d0d2a06167")
                .privateMoneyId("2bcfd990-a577-4212-9e6a-ff2d525f5834")
                .setModified(true)
                .transactionTypes(new String[]{"transfer","payment","expire","cashback"})
                .transferTypes(new String[]{"payment","expire","transfer"})
                .description("HDQqIW7rtjknrdOd85piK1tWW5KwIq1V48Wh3ClZ2nNOIbURl4jHCViRMZW9y8U9BSyXA3YrhYNxZZYTALvEIeIpQ9RKdisSbklMhavIONhGLKGKt3Jn3MQ6WHMZuaVdPqb1n93VmwpzZDkZ0QS2B27bfq5Hc7ZJmKc9WWr0EGMkd3MhN6lHjGEnYter76d0");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test9() throws ConnectionError, ProcessingError {
        Request request = new ListTransfers()
                .shopName("a3wDSyeUqsBpnAX1cztabawHPJsLzXB8uWfMFbxR3syaR3KgsaiUVVY0rwme4n4ASSoRKpBE5YzZaR1DxjFTW33aDghQfxDVfVYpJDgj31o")
                .customerId("0bc68aa9-c612-4073-be88-aa416340d714")
                .customerName("VITdI2LRDAXcMFsSErPhhx7GZqvGZbwUXw746138SuzypbWMWbIuUb2Zt2dudjNLOCalBbYrL9G7uvlDknYGKNNI1eLl")
                .transactionId("e2e29737-dad4-42ac-9c90-f377579cd597")
                .privateMoneyId("db1101bd-36e2-4f7c-a367-7391ee58dc74")
                .setModified(true)
                .transactionTypes(new String[]{"transfer","exchange","topup","expire"})
                .transferTypes(new String[]{"exchange","payment","expire","topup","coupon"})
                .description("iE9uXbKdPlvYKx6Weikm8jYbWoupX2DTn");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test10() throws ConnectionError, ProcessingError {
        Request request = new ListTransfers()
                .shopId("5b63a2be-57b3-4bbd-ab0e-7ad361d42eb7")
                .shopName("jO3Ci5ba54CKq1sLPNnjf3dCtfng")
                .customerId("c8d5e0e0-b6fe-45f9-a94b-0788b68ecaf0")
                .customerName("np")
                .transactionId("f6e261f3-1e58-4285-9c8d-1de7ecfbe0c2")
                .privateMoneyId("f04eb4e4-7676-4b63-ad9c-76b937bdf848")
                .setModified(true)
                .transactionTypes(new String[]{"exchange","topup","transfer","cashback","expire","payment"})
                .transferTypes(new String[]{"exchange","coupon","cashback","payment","campaign"})
                .description("ASTI1LzndxLlwx");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test11() throws ConnectionError, ProcessingError {
        Request request = new ListTransfers()
                .perPage(5180)
                .shopId("c4bae2df-fba2-42eb-9a70-aace29041aa4")
                .shopName("8XntzKrkdqydUuPgiVn4ENYXF7HnT6fEf34GT3mqi2C9Dkhfe3KomCkK2SncX7VokIsUOpZQRBp3JsBDB1M6zNG3W2C")
                .customerId("513d0870-d721-4d05-b3c7-c8c298bf11cd")
                .customerName("BIz2onJdDubCJkqwUT8nzzpJGSC6XjOko0rJIZCD4w1Tksc6jXVowGfNNPwVexCFNHXCUgMh6pgLLWfNHlQQlSGQIuzBkRwIfJISMoRH3gKZufQbBxPYZi")
                .transactionId("abd262f7-aa4d-46b4-81f5-bfb03a33de5a")
                .privateMoneyId("b9c5eb52-ef15-4746-b7eb-373771e82fe6")
                .setModified(false)
                .transactionTypes(new String[]{"exchange"})
                .transferTypes(new String[]{"cashback"})
                .description("sQ3kUdg5mgoWa75Y4ytp4IDDPuOQC79Vokglp5YaiuITyQMPVTCe92m1");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test12() throws ConnectionError, ProcessingError {
        Request request = new ListTransfers()
                .page(7752)
                .perPage(288)
                .shopId("57f90146-a602-4c95-bc40-babc300148bc")
                .shopName("FSnnJr0AKluhRST")
                .customerId("911be70f-1faf-46ff-bd18-28d6e6f53a04")
                .customerName("dKKTtnIGb0YDGd6cxWqMvH2mhOK0OK653tishJp8wSHVmgpzUAtk9CBIhGV7X4QIRfKkNHvOR3LiZzlh4PRT3ROFoesH4iU5CObZsKg3Q83cWGQi")
                .transactionId("c456eee1-5c3a-4670-8f48-26eafd545d09")
                .privateMoneyId("d6ba81c1-d960-418a-99c6-8e92a7018448")
                .setModified(true)
                .transactionTypes(new String[]{"payment","exchange"})
                .transferTypes(new String[]{"exchange"})
                .description("ZlrM6F");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test13() throws ConnectionError, ProcessingError {
        Request request = new ListTransfers()
                .to("2022-12-05T16:36:14.000000+09:00")
                .page(4320)
                .perPage(3326)
                .shopId("2af2539d-c39e-4b36-83ce-fcdfa608cdd4")
                .shopName("hRaup0JUZaTkRCZ5y8PJY6XsGVOPCbbUv9eVdchlwTnwGGcDqzTeZEVWxk2QfRVv1Paij5yzKazqo50TrkDGlylWSpLRfs2UqmQbydBjm2D6GPkzRSnid8I4zgjgTjLIFfQtt5Tn")
                .customerId("99637fbf-30b1-4a0a-adb0-9e7e3d585475")
                .customerName("fYu6CKGyHPIhrfsPY7mip6qJaiYP0u3zQINqvfmRV5r9qDrRep1DFfGNYVS0SG5rjSiJdBu1Jp6aOdb5LCLH9D83Jg5D9h4j8nWKfOq9XFryD9IZKEUbZJeRbbXaSP0vmHZxSuWYALIU0g43JRY0gz1k1cgrOemHSalI8oXCKf0SnSxKdfUUeV")
                .transactionId("731ab4bd-20cf-4ef4-89a9-a8a867659ea2")
                .privateMoneyId("d2c32a62-8414-4a21-b431-b4b8e9ac5385")
                .setModified(true)
                .transactionTypes(new String[]{"transfer","exchange","topup","expire","payment"})
                .transferTypes(new String[]{"campaign","expire"})
                .description("NhgwqmHI6iUaLS64JAmc");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test14() throws ConnectionError, ProcessingError {
        Request request = new ListTransfers()
                .from("2022-08-19T19:25:35.000000+09:00")
                .to("2024-02-21T21:23:18.000000+09:00")
                .page(5253)
                .perPage(2528)
                .shopId("6c007359-7515-4a74-8961-a6fba82c86b0")
                .shopName("xRBZ2atpm59PKfjqKKZS7Ycdm6HzZ1bHyFRGDDL8k58mJ2YqGx4uspkIK1JX7xtVzVGocJrcGC9MiTj7ugDLAUWqsMIGoosFMsWMIDL5rICp1sFIYyy2dNaOECwdga9B6GsIc0RNw0ChJkb842rnIndEWHfwTPQstHG4vQwb2ptMitd6AbDBDcopvNJV5mmEQch5NQk0F5TmVHlBy6y8vXJQBNnOgAchIQSDHeynj5JP5D2gqco1BeGgumOgO0")
                .customerId("ef03b9b1-daa4-4d16-a28f-d81181246072")
                .customerName("7BdaU7JWKMswc4lp8yTKZWPg5gj3zsQ7X5oAseEcKA93MtdhdLTNBcIJJ96ZeSKzy4E9wTzwz1hLdrZdxZjwlM0fmGVKTnzW1cygBuu9R9z8XpQozpIE2MwggYCfGIIJpRIFBYUL1bGwQrrpbLA3d7")
                .transactionId("54a0939a-3980-49ff-85be-b7197e6ece4b")
                .privateMoneyId("f6f80bdf-58c1-40fb-a694-48ead37dd1a1")
                .setModified(false)
                .transactionTypes(new String[]{"cashback","payment","transfer","exchange","topup"})
                .transferTypes(new String[]{"exchange","topup","expire","coupon","campaign","transfer"})
                .description("oz8Xcivqw3jFEw");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
