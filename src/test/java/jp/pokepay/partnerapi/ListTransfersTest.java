// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.ListTransfers;
import jp.pokepay.partnerapi.request.Request;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class ListTransfersTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new ListTransfers();
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new ListTransfers()
                .transferTypes(new String[]{"exchange","transfer","payment","topup"});
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new ListTransfers()
                .transactionTypes(new String[]{"transfer"})
                .transferTypes(new String[]{"payment","transfer"});
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new ListTransfers()
                .setModified(false)
                .transactionTypes(new String[]{"exchange"})
                .transferTypes(new String[]{"topup","payment","transfer","exchange"});
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new ListTransfers()
                .privateMoneyId("4678c95e-ac54-41b0-8027-adfdfe70e053")
                .setModified(true)
                .transactionTypes(new String[]{"exchange","transfer","payment"})
                .transferTypes(new String[]{"topup"});
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new ListTransfers()
                .transactionId("9cd796da-3a7c-442c-bd66-c48e44b582fb")
                .privateMoneyId("a8dab200-6eaf-4c0a-a6b2-10550572fa69")
                .setModified(true)
                .transactionTypes(new String[]{"payment","topup"})
                .transferTypes(new String[]{});
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new ListTransfers()
                .customerName("HlgHdbJXZSmfwWt")
                .transactionId("a918072c-6132-4c15-b431-8f176fd42484")
                .privateMoneyId("dbf21d23-8767-4a0d-9a21-8fa049a102d2")
                .setModified(false)
                .transactionTypes(new String[]{"topup","exchange","transfer"})
                .transferTypes(new String[]{});
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new ListTransfers()
                .customerId("5a819458-3943-4af7-8b49-e9fe18b663d1")
                .customerName("pLBziknfu8obSqrUfHXD4YGLIr6vxuQE1CrbzlN9ZNibZpKkGigi8r")
                .transactionId("12b2204a-22ad-4a07-b270-42286ddcb640")
                .privateMoneyId("28d4c8ba-cfc1-4a57-b161-1a7f95180bb6")
                .setModified(true)
                .transactionTypes(new String[]{"payment","exchange","topup","transfer"})
                .transferTypes(new String[]{"exchange","transfer"});
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new ListTransfers()
                .shopName("lk43OjlR2gbqrzrnPwVl8pNdUoiX8BcFXiZgj35r4tbmTFM5zlBQT54xv9yx5QvIVMAZu5DQlT1ifEdRaarhvYDXlrR6TLOifiKm0M5UcJhgbf4bPaRxpmck06RZpJJIdWUlBEpB8A3nGs078QvGlHVWUoO7D5UobUozeGxPjdm0xyLxfAkONPpBmCjk9Vq8zS2UjZ6cW4ZVC7YZAE3G5BVC0Ckx9KykiARrdjr9W4wSCwCrsVUW4r3s")
                .customerId("089438f2-0910-4dc9-a4db-45460ab04937")
                .customerName("SpAJS9G776cAUB6h5rLR8JwCzRF2ncyYFtKZdQ9H3LW3fYOndMMW")
                .transactionId("bd2afa2b-0da1-4558-8350-467b758a6856")
                .privateMoneyId("6d6cb36b-9a30-43f8-904d-b38a16897d77")
                .setModified(true)
                .transactionTypes(new String[]{})
                .transferTypes(new String[]{"payment","transfer"});
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test9() throws ConnectionError, ProcessingError {
        Request request = new ListTransfers()
                .shopId("25595674-c82c-40ff-8501-7f59837bf136")
                .shopName("ciAB1N61E1z2BGjZgjxvEgf5fCpQiJ66nYcG44oRAnX7okApsqNXA7H4WWMb5tN01jGVBthhl7H230Pg6OgnS0Qgh9ccpsySyYoyhJMj3nmsUYDYBfb1VHQSEXd9vy")
                .customerId("255b0da7-9bbd-418b-8d5b-8d55f932ce71")
                .customerName("G68TLcVSITQDB5GN3jgXi8LiBebX8SzDjFffbDAqzz9AlqoOfxi1BeDmAQtqa0EKrWmgm10SGRSCwnxIP6tTuIVXw5kAwAGgiQUPfMns4t7TuL3BYVI78F6zGjwaGgT0jCIRWhdIxYalBoRIrx2adPjd37dXD1UdIUsS9Pm76as98guxxY2RnIh3ByfitaQSuWbbjY0VFkOgYdAQvkcPfQTEINusfJC276iok7ww0qGAyDav")
                .transactionId("fe78930f-350a-4ece-8e31-cb6e524434b3")
                .privateMoneyId("baa19541-7e86-4f47-a415-d3f2f4ef9877")
                .setModified(true)
                .transactionTypes(new String[]{"topup","transfer","exchange"})
                .transferTypes(new String[]{});
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test10() throws ConnectionError, ProcessingError {
        Request request = new ListTransfers()
                .perPage(3631)
                .shopId("cf18a98b-6a59-4fbb-bb4a-6a8a8ab3c0d4")
                .shopName("a401eYsEOh6S2OCaWMvdt5yNVLViOLH7UCHQbN1gRhGPfOdW6yv45Qow73Na12zb6dGWPwIh5LumtXvSGLjBTrHevwSF5hIQm1nWzOM1HpI")
                .customerId("8d3222ca-d42d-4278-bc13-79f871b03263")
                .customerName("gS8Uk4qCGT9LyUuOO3fr54WST7XBp6sXEWYNmgX51FVuhJWQNkA0maGbYZon8FUKTBNTv")
                .transactionId("0b76bf1e-1b6b-48c3-b5da-3f6e45179d4a")
                .privateMoneyId("9279cc7f-4f5d-4e77-af66-a0e6f641295b")
                .setModified(true)
                .transactionTypes(new String[]{"topup","payment","transfer","exchange"})
                .transferTypes(new String[]{"exchange","topup"});
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test11() throws ConnectionError, ProcessingError {
        Request request = new ListTransfers()
                .page(3848)
                .perPage(3159)
                .shopId("e41c542d-0b2b-40b3-88f8-ffff61ec60f1")
                .shopName("V7JH3V0bFYdvW9g5DNs6nFROShW9OTyp7fnly1cm3UuJlIfeVkjc9PhbSnRPCxxRg73n9u4INRlxnMDEMlXjRXIRoDaj4cfRPZnfPrZrPD6SYUXb3oYDgiMvcO7iaYyaermHBbwLhQpR3k6vlxKYEnHCbCyC5Td9eLU7qdr8jbiHHxuCeCFZZnvpTw")
                .customerId("47809f5d-874c-4956-9656-d9cfd46b1629")
                .customerName("OoIiBRNzmqMrpl1crmQvbV3TzQ4qFcQ9CxUYKTcRM0OWL6Mzv05LtqXS7uQOXkv148a57IrZyHdgfFwo2W2FBeZSNeRfnxa8bkmO1TjE")
                .transactionId("f39d636f-da94-460e-b547-93b6ad4bf7d1")
                .privateMoneyId("3de1ff68-c452-4a39-b33c-f923c0a02674")
                .setModified(false)
                .transactionTypes(new String[]{"topup","exchange","transfer","payment"})
                .transferTypes(new String[]{"payment","transfer"});
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test12() throws ConnectionError, ProcessingError {
        Request request = new ListTransfers()
                .to("2017-03-23T19:03:05.000000+09:00")
                .page(5318)
                .perPage(1471)
                .shopId("78466561-4fd4-43f3-838d-e475dc30e160")
                .shopName("hYeku9VQbW5GaSZ")
                .customerId("1c3871f3-b5a0-4054-8cb4-778ee9f8c5ce")
                .customerName("aI8nunUOQVA1QHQopz1aDpT1YlaZPpL1ynjdIqKBI198vgCp3iu0MCWYybPGnJLlvXRRoOH0jCyzcfqNfecexuzWGETO395D1NCKBJNAvcCPCgKdgAyUFQoMNgpesgxoBDZlCouCmNE39LFK5Q56W44FL7gOHFsELHiHSsWp8TMo4HFSdpWJf5hfRP3tMu9vTpTl59r3Yryv1XtygIfk5UuLny2ReusZuG8NuKgb7ZQL3UB3GF8FCuauUA7l94")
                .transactionId("102ff379-e87a-45a7-b2e9-230e65bcd3da")
                .privateMoneyId("11cb594a-7d72-4081-b380-490551d5369f")
                .setModified(true)
                .transactionTypes(new String[]{"transfer","topup","exchange"})
                .transferTypes(new String[]{"exchange"});
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test13() throws ConnectionError, ProcessingError {
        Request request = new ListTransfers()
                .from("2016-07-28T18:57:31.000000+09:00")
                .to("2022-03-29T11:14:36.000000+09:00")
                .page(1081)
                .perPage(51)
                .shopId("970af6bf-db13-441e-b66f-280eebf9e901")
                .shopName("dEjJIxkBAm5sBcpKgmt3tV0kfx")
                .customerId("52634c5b-aadc-4730-b19d-2b1b89e9a694")
                .customerName("8VzJvx0oxfOL16SUAOOsPy")
                .transactionId("0ba8783c-a6a6-44d6-b06f-25cd6afb281e")
                .privateMoneyId("dd4022f3-6d69-4d31-9645-41c2d335912e")
                .setModified(true)
                .transactionTypes(new String[]{"transfer","payment","topup"})
                .transferTypes(new String[]{"transfer","topup","payment","exchange"});
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
