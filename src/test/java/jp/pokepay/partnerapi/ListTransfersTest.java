// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.ListTransfers;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class ListTransfersTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new ListTransfers();
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new ListTransfers()
                .description("raHdF9Won0mZkPbnivWhC1LuNwVG8YWrVi0Irr5ok");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new ListTransfers()
                .transferTypes(new String[]{"campaign","coupon","topup","cashback","expire","exchange","payment","transfer"})
                .description("QT49IhsYe7wb0CkHuXEQGm7oPhSdZhM9rZch5eCsK5mTzyO8uPjLyEVlWd5eMsIa5G6z2mpoAFnHVMUS9glJcIzAZx9Nhq5gFYIEs96QPqsAzdwUghntmEdSxhd4AY9cOk4e9cAPXKejica2kosU3WaIBr5");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new ListTransfers()
                .transactionTypes(new String[]{"exchange","topup","transfer"})
                .transferTypes(new String[]{"campaign","expire","exchange","payment","cashback","transfer","topup"})
                .description("jQX0NZ7PeTPhD260myngygD2fmca");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new ListTransfers()
                .setModified(false)
                .transactionTypes(new String[]{"payment","transfer","expire","cashback","topup"})
                .transferTypes(new String[]{"topup","transfer"})
                .description("ZJthxDXsw178HxX64HEniVROFjki67OBFwkVjQ7yBfpgyvHUeg5h3hOD53GABaZRwkUoFelM1RxbMhFlFnbHQvXHC10HcXoLOk8hhQprwVpdnk1l0onDtCWF0FG");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new ListTransfers()
                .privateMoneyId("6cf7a694-d501-48ab-9704-f5b8a59ce002")
                .setModified(false)
                .transactionTypes(new String[]{"topup","expire","payment","cashback"})
                .transferTypes(new String[]{"transfer","cashback","topup","payment","expire"})
                .description("HYcJoRcwCDF4BbCd5XPHPRhRji2GGzTOJlDeVI7dkbdjswEGBVtWzLTIgcKloLRgc");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new ListTransfers()
                .transactionId("b08bffb1-20b1-436e-b283-0eb73375456f")
                .privateMoneyId("78d1ddb1-efe4-4640-9a62-e1bd9d2e2441")
                .setModified(false)
                .transactionTypes(new String[]{"expire","exchange","topup"})
                .transferTypes(new String[]{"exchange","topup","coupon"})
                .description("r8X4AD441vq19IcFsJxHasShWAzW019xm6ZHFVgq6OA4cQbm83pwOSpcTQ3CcN8g2fWy6tgEk7DcHK2afCFtDWWe04TWMoFvl3jxCxdq5MMKqfyCG2kMvzKYiNPTXmPI9BAYPz5P2EJXOIv8RdyA0");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new ListTransfers()
                .customerName("J5Apc0yrbfzonWsQ5IXNWE1F8DhpTP30QKHUBVwLp8WpRDQGCoVAnIEDdsab1UVbRnTmxdkLMnQSoCUUzTAacAH")
                .transactionId("878a0803-2bce-4ef1-ac24-177189f890ec")
                .privateMoneyId("366a7329-6091-424d-bc49-c397d50af7d2")
                .setModified(false)
                .transactionTypes(new String[]{"payment","transfer","cashback"})
                .transferTypes(new String[]{"transfer","cashback","coupon"})
                .description("hwj5qhtNmU9VFeMaBrPnm7tlpHkABdpf0gp4hQZ3RTbK7ZmMSAPrYKz7XpB0cB7");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new ListTransfers()
                .customerId("97dcabff-9c21-44a8-80e9-39f71daba125")
                .customerName("gt16PUVNBENNEdjjEF94nSipL4HcIsvwzs5jKRJLBZ87WHs1zi")
                .transactionId("516ea059-7172-4cc3-aa6c-f952e6d4b8cb")
                .privateMoneyId("b0af6ffc-ab9e-40ae-98b9-f5335b4fe72d")
                .setModified(true)
                .transactionTypes(new String[]{"cashback","exchange"})
                .transferTypes(new String[]{"topup","transfer","campaign","exchange"})
                .description("1uRYy8GhIlf20uSVXIRc1pIsxhZ5nL");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test9() throws ConnectionError, ProcessingError {
        Request request = new ListTransfers()
                .shopName("AIqqD1ADpJuXNGvvPA2RQIfTcfce053Suc67CFUuQKNPFgT0uZ9Fxgeb86yGFTn5Vn4hQh61aQyumKFGtK3g5A164k3AZ2SlzxBpILQ9edHiHxf5wM6Ha6JjAwGvuuqWD5bo8pykOrDYAuquudFVpYsZstuEugil1d7W6YGSFyqLIfCZ1XB4oIzmmKP96WXVsXCChljB9V")
                .customerId("24812449-7edf-4b78-910b-8b9b9bdf9fd5")
                .customerName("xUUxYRzKdPXVdTrc8symsNcIn4hmSmIdxZLI75bLuxI3aERbJQWq8K0EIPe20Nebv8h52qNbVSBuH1HPv7nxIfNugRFwWYNJ0H3rB6RdzHxdjkoK7hn1cbTiESub1aY8zpJav8BSPga0tJQKbs5D5f87i0rkl7rtwfOsTetYJNTLjeKZKU9ZGy0I8Pp54v7IA68")
                .transactionId("8698d7da-49d6-40f7-a9e0-80d8655968d3")
                .privateMoneyId("7d7a4aaf-4cd0-4491-9b77-70e7fcccd572")
                .setModified(false)
                .transactionTypes(new String[]{"topup","payment","expire","cashback","transfer"})
                .transferTypes(new String[]{"cashback","expire","coupon","transfer","exchange"})
                .description("cwgxpIVRb3m1SNSVptBciQBNXjuUumYn75XNW5ATryLHa3ntGTYVImYEsf69z1Bj6uY74OpZKo7gESNfWtwCe9o3KrUuydjRiTggC0wHZPPNdn9Y101HWTaMAvuEPXB5odsbKdUNAaaN3Qn5Ard9OVLNMwkms4bUCfp1hWYSL3MT0U");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test10() throws ConnectionError, ProcessingError {
        Request request = new ListTransfers()
                .shopId("95282ec9-ff4a-4a7f-863a-bdc9b1b319ca")
                .shopName("LBQSIm3WW9sabo01gADtj8ETPCJM5TohTEZLpse36I0ywjOBmI7mI5ZSNrEN86Fn4v71ixnAcdOnZGzqRFcXkCK2XMKbRCitPLNGSylQQPTeglRx2g21hPeDq0n7xF66PHxYq8k6tTSsK6qGTxahmsx61gPtqS3MSxRNyM2DDjKywrGVDB5tPSvUuuY")
                .customerId("a157a5a4-aafc-4a6e-8dfb-f62295f41fa6")
                .customerName("PVKfs8XyZyC2ndbyIVDEzoCKCqridPjrqe0Cj8zBYW2dQJZq")
                .transactionId("1573ad86-ef4d-497a-b0d7-8671748f2279")
                .privateMoneyId("5da0bdf3-f26c-4992-b5a5-00a4bd350c78")
                .setModified(false)
                .transactionTypes(new String[]{"transfer","payment","exchange","topup"})
                .transferTypes(new String[]{"exchange","transfer"})
                .description("O2EnhtboqjSriX5bkf568PEvPeBUcg4e4GZ8RLXvCbKYQhEoq00GMcFRWxar2CJJQlZFcxvwNLwAqgOopnHPlGbnJotR9Z1p78ufOfYT");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test11() throws ConnectionError, ProcessingError {
        Request request = new ListTransfers()
                .perPage(5794)
                .shopId("cd098b59-a2c6-4079-9a9d-262a76dd0d3c")
                .shopName("Ut4LIBfQ31x2DqcNfBsRyHGhDNU1huDHMU7h5Oj5h8V9Q84L8rQqw9Ev71ap0SXFDb8c2b6SSU38coTZx3IjTMOmVubCU0TcgzbeOEmK0G3oobORaISqVT6pKfjAEwt2Syk8Xae8TCg1gWsl7C9hYjGHIkl1mC9VuBI48M1dFevvdYWY7sQDiwAwviIZ6rvXcu3tfj2KE9x84EW")
                .customerId("aae2a069-d5e7-45f2-b37c-a2801aa36052")
                .customerName("Hi2vJMR2f8OngKSgUJBp0NVNgvaof5AY3DbmWa81t9rXsoPXNJ3ttrZWTyp3t7liSgNCEYKKDAR8bZwIoeR9vgSnHl1D47bq4H4koeVjFqqf")
                .transactionId("f8d5b8cb-f727-4447-9ccf-6a514dabe628")
                .privateMoneyId("b114230f-610c-4e9f-8012-e39b0dd659a9")
                .setModified(false)
                .transactionTypes(new String[]{"topup","exchange","cashback","payment"})
                .transferTypes(new String[]{"coupon","exchange","payment","topup","expire","transfer"})
                .description("FzDG3iSUedLIof3EvvV9qGCaAiZTvCrFRgtMlQvP6irVV8F546pXiEmop9wNnnJIQl1g06kYcx4akOLsFkJ9YvTOUKLk1uvnD0eo3ntXtGS85WLt7OXtxCXhrf5gfGG4L1egwXAI012fiqgZUeSuwxrPxgvK2xpXDiBYeEJNe6DkBIpYSqq5JqNda1nL97XGpWTeVZCR");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test12() throws ConnectionError, ProcessingError {
        Request request = new ListTransfers()
                .page(3894)
                .perPage(9238)
                .shopId("8ec9af63-70ab-4cc1-81d4-b856b6b29702")
                .shopName("hMsQnTrbNSACZFmdcDCqnnZdFx2RkhOahr1zgwKc2EQWWmyRtitG2oyeRj80zt2VTvoxMQjScC0Ly9RNXo7QzQyzDivWFwKEkIYT8jTVVAMldzXhs4WcBi88kAVOwo0GakCqTSVlKimg49GMZS2lyIqOq7kgGZZSLWvMX38moHxtdAssX3agQSjyTmrZqWnz0")
                .customerId("08ceaf39-6d57-405d-8ba0-f4a1c9b33b4a")
                .customerName("FP1uqNbnPvOYWQK4eOB8K34sy3UaOxp4NDV18hrC4lQi0cr3QKQQsFZP62tGgBxFZWXCGRdt1ZB26xjxeh8rum5VWA6dXCD2pRrEGTvBHW5Te2T4OEmVD69SLb2QQ2nGSenQcL2BInTT9b4pF2b1jLZyEcczd8vpJPBlVj9a3YuakAl1lGJKTFlWwIH3bxkLN1QSTZzeALiLfhqXJLrxX3mXOeGOMgq")
                .transactionId("c0cec9d5-261d-4c46-b095-ac2240d522ba")
                .privateMoneyId("85963c54-12b8-4aba-912d-624be0b940f4")
                .setModified(true)
                .transactionTypes(new String[]{"transfer","cashback"})
                .transferTypes(new String[]{"campaign","transfer"})
                .description("qZhzpUSRtWKuG6DBKa4WePt320fDDE1t70SnHX4z0WrajSuv4dpyaEmoW95Zbwu1G0eq4GUOudf6hHb2QTt08wwNAtqwzvJLrYlErHnGcb4o9qEIV8cBrs4uixrD3rR0K8wXl75WJLfpTl4uoob");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test13() throws ConnectionError, ProcessingError {
        Request request = new ListTransfers()
                .to("2021-07-19T01:16:59.000000+09:00")
                .page(1749)
                .perPage(5897)
                .shopId("65cdd5d9-523b-409d-a8f1-5183e4116249")
                .shopName("Fr1GY4vnhPVfDZn35XPXdNCbqusthjHRmfKn1giNpNlz9gJDJe2x1DYoz58uU8OozjpHKZxADyT1tn5S0UvOgHejsYUvQi0ei72Eydl3wd9hBngnh9DnFCTA")
                .customerId("75dd9c68-8718-4328-b806-6e22fd844585")
                .customerName("2dp1sgbENA2qpmMbTAIcYDVVBY8xmbV9lmZtCFzHXMmWrSCKCiL7UhFgMXlxDqgoM1uOM4E9bCvWXwwIu")
                .transactionId("26951d98-348e-4c3f-8a90-b128595c4b39")
                .privateMoneyId("c18f850f-2050-495e-a6ac-8c9146693177")
                .setModified(true)
                .transactionTypes(new String[]{"payment","transfer","cashback","exchange"})
                .transferTypes(new String[]{"cashback","expire","payment","coupon","campaign","transfer"})
                .description("6GenGl050wG620f4vyGzmkpKmnUTM6Ej6BinLho08hn66U");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test14() throws ConnectionError, ProcessingError {
        Request request = new ListTransfers()
                .from("2021-07-16T08:01:35.000000+09:00")
                .to("2020-07-31T07:04:08.000000+09:00")
                .page(2116)
                .perPage(9203)
                .shopId("35b53188-8a29-49b0-a675-b1e50a697a67")
                .shopName("Pz3dKM0YqGToz2xTkaGwejLe70nKYzVwzHsCMCP2qlqVpXiSDWNd02yoLDghPlEmG6rM7dF4eONKPrOyR6ANd0Je040GrsJYosLDEGNcY7FlLTgwQymsyB")
                .customerId("0ba9a4ee-ee45-4d3f-8b66-2566f701b2cb")
                .customerName("FxfXCb1Tc9lU6ZXg1zGKrppJvmYygZzuFRVpMzgVyJhADs0EJ7jNPKwsQHKReSIoYQTqUzFABxgHN5qFd64oTzlHmSZQa4toZxY4bv6prBpdazia7CfBwGqeTy2DvjIQZoHySdUHTNHJ2bNHiSZwzqIPjDlk5DVBqQQHASNbIwknqMu124zF6D1m6T03PtornXdqaF8Q72UNIFZtyfSzM6TsaeKUb6")
                .transactionId("f12fa959-b22f-4779-bcd8-cba2f4c6a233")
                .privateMoneyId("8d556dc0-6c0a-4f16-8438-5d4e407d68f5")
                .setModified(false)
                .transactionTypes(new String[]{"transfer","exchange","expire","payment"})
                .transferTypes(new String[]{"topup","transfer","exchange","payment","campaign"})
                .description("J8zagTFP3ZwTnT8QVOR35OCWLjuIsgjVPA2gBzeZplp0L1gJsz2yQv7dBuXMsX4rLbvFxyxG2LJcpEQSniZz2EjXV9K21ZMNGDhAROrm5XJJNwwmRtzBFRE3GieMGfR1PmA0fYVKggRXVO");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
