// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.ListTransfersV2;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class ListTransfersV2Test {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2();
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .to("2021-08-19T09:40:54.000000Z");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .from("2021-06-29T12:37:03.000000Z")
                .to("2021-12-08T00:35:28.000000Z");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .description("yGfjAlvbOwBRftL3mTfJhTjDs9c8QNUGvnht1Uy")
                .from("2023-05-04T18:11:47.000000Z")
                .to("2021-03-13T04:02:07.000000Z");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .transferTypes(new String[]{"exchange"})
                .description("e7Rve16qe5BUa3mrtCxkktMbdZ0Ff5nebRZC0vDYNEWMfxXSVHRY4YZdsEswklf9tWgAr9KxjsUzeefEvU98BI4BdtnYVFOF5IXA6lNw66Yqs62ry4")
                .from("2020-06-04T08:56:37.000000Z")
                .to("2020-09-02T23:21:56.000000Z");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .perPage(297)
                .transferTypes(new String[]{"payment","topup","transfer","exchange"})
                .description("jBGi2vt3IVLujfoeXIyA6Ao821XE55hc29pv4sZBooZY5wA4Og2kdAYLVTxSOsaSs")
                .from("2022-06-21T00:34:38.000000Z")
                .to("2023-01-26T05:28:13.000000Z");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .prevPageCursorId("65886f64-2c16-4b5e-99fb-6b8d8458ed96")
                .perPage(177)
                .transferTypes(new String[]{"campaign","coupon"})
                .description("UMFSIdEJMG98zC6otpSw3LnpbrPkZnNjPWO55U7DSfY3LgW5M2IvR52CgIBy3eLTys12HHDFFeqLoUtYmfM0XLYceQxhubY3")
                .from("2022-01-05T07:30:06.000000Z")
                .to("2022-09-20T11:11:38.000000Z");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .nextPageCursorId("672d3cd6-b0a8-4d1c-99e8-a6e2786c5ce8")
                .prevPageCursorId("d2e01834-8f52-4a8d-ac00-450c88ec6fd7")
                .perPage(677)
                .transferTypes(new String[]{"coupon","topup","payment","campaign"})
                .description("Hu2gIp7HlCgxYlFZzBuHZ8tjsh68ScZg3aAMErPcV9o0TcGJkIJgRMahTjY4B83KCbssdnciBK2yKUyBp")
                .from("2021-12-11T01:14:52.000000Z")
                .to("2023-07-19T13:57:18.000000Z");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .transactionTypes(new String[]{"cashback","transfer","topup"})
                .nextPageCursorId("71a10e9c-187a-4707-b33a-b446ff587ac8")
                .prevPageCursorId("627187ae-eb4c-4e7b-b9d0-62683691a03d")
                .perPage(496)
                .transferTypes(new String[]{"transfer","exchange","coupon","cashback","expire","payment"})
                .description("kH0DrThI9ndCARX9iZh")
                .from("2023-04-15T01:18:56.000000Z")
                .to("2020-06-27T04:09:49.000000Z");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test9() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .setModified(false)
                .transactionTypes(new String[]{"payment"})
                .nextPageCursorId("edffb40e-1a9b-43bb-9db8-cf55d7d5c222")
                .prevPageCursorId("c89b84e9-ec6a-4f1f-850f-3693c4fe4126")
                .perPage(351)
                .transferTypes(new String[]{"expire","cashback"})
                .description("iBxXbKWYhqIQcADAJhWFwASll2hGkEzja1NmQHCUA")
                .from("2022-06-10T13:23:32.000000Z")
                .to("2022-04-23T08:03:19.000000Z");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test10() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .privateMoneyId("e56cdcc7-1bfc-447a-bb2c-7e9111b2eb35")
                .setModified(false)
                .transactionTypes(new String[]{"topup","expire","transfer","exchange","cashback"})
                .nextPageCursorId("5d38423f-2fe8-46a4-b5e3-6fa2e3178dbd")
                .prevPageCursorId("cc78835a-29a4-4328-a4b4-2aa7de9c2765")
                .perPage(957)
                .transferTypes(new String[]{"topup","expire"})
                .description("0f2MmxJUnd92RrjDmsbpR1t9xme9U0GR2pRvNpULEoTr6H5p2Y5YBaOZdS1seolNILNbVpFGvZ3N4x3uvaLnbw12Ii4C82SzJJG4lODNS2Ij7U5b72UTWbjXGfzCmZ2vkYmrCrWwA7IkDmk9acr8tX9JQSHyiFoseHqYyK8GIOW0PGU45uzPdd0dJ")
                .from("2023-02-21T18:00:02.000000Z")
                .to("2020-05-02T07:51:01.000000Z");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test11() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .transactionId("9c7e72ce-9e99-46ce-8094-8676f95241d5")
                .privateMoneyId("7e366dc3-7d1e-4b30-a271-44099d6dc000")
                .setModified(false)
                .transactionTypes(new String[]{"exchange"})
                .nextPageCursorId("16cc8c94-13f6-42df-9219-346dde3ce47e")
                .prevPageCursorId("0f6eaf64-0989-4e35-80c9-d304590cdca9")
                .perPage(185)
                .transferTypes(new String[]{"coupon","cashback"})
                .description("GpnYomE2cpD4cThkIOO2LW0e3G1sTmjjHcN57ZbAikJ2opGyr1ja3zumve771kQ7mwZnfGMQasC1yb1Dq2UL9Kx0jYk7sZRicOTg23f5GXrX6ozTzm0HG0TosxKz4jitwHtujKhwCFGwi")
                .from("2021-12-13T09:20:57.000000Z")
                .to("2022-07-11T16:53:15.000000Z");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test12() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .customerName("v4vlRBRxfHZeKBVf4jVtecQNubIdHetIBPUrvpeN86f46tWgyM43AJZ0KTwWOYBSX4EzfsIiIDCSxoowqwobMRj4K8plKuk4zON6lsKCXAkk07Q9YuV27x2ZZwJNPJ0aXH1uRW")
                .transactionId("bc1e782c-abc3-4059-ad73-53f73a4ea6df")
                .privateMoneyId("da553f85-d736-4a56-92c2-0f95e9bc6266")
                .setModified(true)
                .transactionTypes(new String[]{"topup"})
                .nextPageCursorId("28058465-86ae-48ef-a0d4-aca810e6a992")
                .prevPageCursorId("75d6bb30-4079-4e2f-ad0f-4bb6f0b251ae")
                .perPage(109)
                .transferTypes(new String[]{"cashback","topup","payment","expire","exchange","campaign"})
                .description("yMV89HUL5OwvTmfkSpdcLQvsJQRiuvWpRkphzntqbTr2vHF1iF0Y7dBxe8hiTzwkLtzBfAa7kaQm6vUL")
                .from("2020-04-15T05:25:39.000000Z")
                .to("2023-08-01T18:44:38.000000Z");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test13() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .customerId("f9e3f1bf-b679-4331-8689-01cb37ded2e4")
                .customerName("Ttu83N0tnRGbdpbMjOs6NsjUaiDroY6Q3IK7BQ6Amswd")
                .transactionId("7c9090c0-2b41-4ecd-a81c-611f42162e33")
                .privateMoneyId("8d8c83c9-134a-42f2-af77-70d6ac0fd2e2")
                .setModified(false)
                .transactionTypes(new String[]{"payment","topup"})
                .nextPageCursorId("886f57cd-b8c3-4574-bf68-1c8c6d131169")
                .prevPageCursorId("b3d7d3fd-6bf6-44bb-b124-78e1020de332")
                .perPage(838)
                .transferTypes(new String[]{"cashback","topup","exchange","payment","campaign"})
                .description("mJsXraAGliEBPmHrH76ocsr7yZptwOIMGRxZLktLdV7uiWarFr5GP0wp4l70ZsGyPlyZYRURgUMf0P5o")
                .from("2023-02-06T21:30:34.000000Z")
                .to("2021-07-10T19:40:56.000000Z");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test14() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .shopName("n0iOeoWIRRMyR0nQkh8Zz7eaFGoiOPKR0rUW9UTcnGDBsZuPfABdiNvfS9Anufij6THno")
                .customerId("e39440a4-a963-49e9-baeb-a2423dd79910")
                .customerName("JOk")
                .transactionId("852fd018-fd23-481b-9cc4-a333ad15e046")
                .privateMoneyId("1589b225-610f-4e5b-b677-e4abeeaa079e")
                .setModified(true)
                .transactionTypes(new String[]{"payment","transfer","topup","cashback","expire"})
                .nextPageCursorId("39868594-5690-4157-a312-0714d16fcf5b")
                .prevPageCursorId("523ae08d-4892-443c-8a10-e7edffe29c6d")
                .perPage(681)
                .transferTypes(new String[]{"coupon","cashback"})
                .description("he3TxnuKac7CS1DK4Gnrr3oBLGMXHrz9mqfRhRmUp8pN9pjtBKEK15Dd3XxCT0Zmu6u7tOxquneNatGolCf6SjeF7SeZXyMS6WkNJ2GvSwQUcruYP4H5cCw5ExNqh41OXXFwVmaHYw6oEFbK8qER1LlAIi5qYTqeIN9jftsBTkZDKCnQigIBcgyeHE0tecRrYBgXoYNa")
                .from("2021-09-22T02:26:26.000000Z")
                .to("2023-06-20T15:39:02.000000Z");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test15() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .shopId("9e72d8c4-4848-4989-b378-16e1c362db35")
                .shopName("ZXl3L94kmDiQZVmfdCV9wGJUROgp1VTNstKsbk2wvZcZmJCZwuee4w9Rkvag9C19xRl1IlJpGXqlhd5uwOg53j3Qic0iyK")
                .customerId("03721c8e-3199-4ccc-9e08-7f5b43c17edf")
                .customerName("nZxaZi9iCa2kj9IDD4FLU53H4cTCafuN856J50SdiADG37eydGENMPuSUGCPNHip0Y3dBWcNdXe1sIjLSVztCspdpKcDGU85LATApzQ2dQG1XtK0UfX1fzmKZw4jAX5TdVMZA3FsBWHTaR7q8iHovbTWoPNbCUX3WmvU")
                .transactionId("1adae630-42ec-4a6e-8a93-fabd82af7659")
                .privateMoneyId("5b332c25-6f7f-43d7-b7db-2bcd67e65e57")
                .setModified(true)
                .transactionTypes(new String[]{"expire","topup"})
                .nextPageCursorId("8b5b9e65-d196-4f6a-bc45-6407db70a31d")
                .prevPageCursorId("f7242d6f-92ad-43ac-98e9-548625533f65")
                .perPage(921)
                .transferTypes(new String[]{"campaign","cashback","coupon"})
                .description("TP2wtSY9IoDSrJUA2sSTBsOwjVmr0bTbO79fqhITnnz7WaCAiQd9B8sle88sl7rSWKN9oQjHsNX48VkSyiuzE1L2wv36YuE4jwp0IiR44I5KLiOrRKq3qxtTGifN6K")
                .from("2023-04-01T18:42:52.000000Z")
                .to("2022-12-31T00:33:54.000000Z");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
