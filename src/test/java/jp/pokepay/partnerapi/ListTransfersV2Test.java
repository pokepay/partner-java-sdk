// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.ListTransfersV2;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class ListTransfersV2Test {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2();
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .to("2024-06-19T12:34:58.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .from("2022-07-21T00:08:52.000000+09:00")
                .to("2020-11-21T21:13:41.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .description("g8BuNXbQ3DNThOKlZSA8NXNgEoYYii46QjFsn6NBFYPfPAPZeqyyWLt89mX1TGTwh4USjy81TtVw72PPIKtGZa0lcYuo6DyPumzoGJfahtayHpEPlkfCUVDwGe20yfjCy1B9CwOYBL9Yv0vtHgEO8gTGMXr8gxgprKV4HKRreA2ygdq9qqmgSywo6AZi")
                .from("2021-07-16T17:34:51.000000+09:00")
                .to("2022-06-06T23:14:14.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .transferTypes(new String[]{"transfer","coupon","exchange","payment","cashback","topup","campaign"})
                .description("P8Y34o79V0OcVaTyOVxcn8CyIdGCmdHlisZWkLN0YrneAd36C3TW43kIUkpHvSrt9pSudk30tsbbebdq0gYQG73ROv20sdXbR4Fl2zDvgkw")
                .from("2024-05-12T15:12:20.000000+09:00")
                .to("2024-01-23T14:07:29.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .perPage(178)
                .transferTypes(new String[]{"topup","payment"})
                .description("baNXYWgAzONdgwaEyvytRzsU2TveLqCzDxwrEv0FWphPP265DA19e9GmdQ1CedHR")
                .from("2023-01-26T07:29:02.000000+09:00")
                .to("2021-07-23T14:25:12.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .prevPageCursorId("30a0a79f-7ddc-44ab-be8c-6d208c5c1286")
                .perPage(956)
                .transferTypes(new String[]{"expire","transfer","topup","campaign","coupon","payment","exchange"})
                .description("4")
                .from("2023-08-25T18:45:38.000000+09:00")
                .to("2023-02-27T08:49:33.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .nextPageCursorId("ddbd07ea-7d54-441d-a6b2-d46aa6944290")
                .prevPageCursorId("c83fcfa1-9a17-43f1-8939-beb79a2a4efc")
                .perPage(244)
                .transferTypes(new String[]{"coupon","transfer","payment","exchange","expire"})
                .description("BtCmJ6cA1SA6ovHvWLGDKxa2xCzgJta6hjsCGYGOXQTgvgOVARWbRyxVz")
                .from("2023-09-20T09:43:05.000000+09:00")
                .to("2021-01-21T01:12:46.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .transactionTypes(new String[]{"topup","expire","transfer"})
                .nextPageCursorId("37802357-b352-4885-af5a-6987105da39b")
                .prevPageCursorId("cebaeb7e-216c-4655-842a-b555f8520d20")
                .perPage(808)
                .transferTypes(new String[]{"payment","topup","cashback","exchange","expire","coupon"})
                .description("dCvkQ3iBffH0M23nZgKYMoNiL5cB1nRO2A3aNKyvRJjQmlMm9KOZgtOxZgUdtMV9JCy75V1LIsqIQbnET2KKWfj4P2O45SEqyiEFKEigTm1oWH6aqnYK90EjJlwASjSQLXMbfY3jnzIFVdnvaU3FJtHR3zSput5vucpQLQ1bdvfO5h")
                .from("2023-04-08T20:48:09.000000+09:00")
                .to("2022-10-26T18:26:30.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test9() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .setModified(false)
                .transactionTypes(new String[]{"transfer","cashback"})
                .nextPageCursorId("e769b3d4-bdfe-49ab-94e7-eec1f907198e")
                .prevPageCursorId("3243cc91-e8e5-495c-81c9-d0c105e5811d")
                .perPage(244)
                .transferTypes(new String[]{"coupon","exchange","campaign","transfer","topup"})
                .description("1vY751KYo")
                .from("2020-08-12T11:04:50.000000+09:00")
                .to("2020-03-09T22:58:19.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test10() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .privateMoneyId("ec09e967-6d87-42d3-aa3a-0e9ca3c4c12d")
                .setModified(true)
                .transactionTypes(new String[]{"exchange","payment","topup"})
                .nextPageCursorId("56cccc47-6067-4604-8071-7397b3bc56e3")
                .prevPageCursorId("606e0e04-8c09-40c7-adf7-c389277d4266")
                .perPage(977)
                .transferTypes(new String[]{"coupon","transfer"})
                .description("7xV6s74wch9iUpqAReFj2a2hb6whQkcIF8gTMB7gRnueeh5KvCeBmm8j03HtPXHSdl27yjYYQl6ZNgCsqneWodKxDYMBoRHpBjfUuxG")
                .from("2023-03-26T21:16:43.000000+09:00")
                .to("2022-01-31T13:13:00.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test11() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .transactionId("01ecbb3a-ea5e-47b3-86e6-d33d4731dd68")
                .privateMoneyId("b31ec0c1-9eeb-4a59-8583-779e5c4c73ee")
                .setModified(true)
                .transactionTypes(new String[]{"expire","transfer","payment"})
                .nextPageCursorId("9879618f-d6ff-4c05-b87d-393ab3f7a062")
                .prevPageCursorId("493fc455-0f2f-459a-8c8a-6e4ca763dc61")
                .perPage(159)
                .transferTypes(new String[]{"coupon","topup","cashback","campaign","transfer","exchange"})
                .description("n85HaO3uMGwqfJcxY30xUGE7sWqnIVkjLhaWBWquJGlcpxxO4HqYu1MVpsu5sIbK6d8nmUu0QFyxeYr6s5784cwLTlUWiRgzDwhmwB6CqC5F0o7ZGmBPgFLnFYx0RS5NYY649mb")
                .from("2020-06-29T01:52:26.000000+09:00")
                .to("2022-03-13T02:56:02.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test12() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .customerName("noAVMQjpbdajbmqDFEnDEW8hGhyZ6iQGal8AcRl5OOKlQtes20egYMMgRNjkHNjlxSpoZgh1Iq6J5LOd0dAmnyFs9SzZukXwF4lqnCRus1ftVsAlO5Y9PGKnnRi5NGsEXOC0YONo7JgyzfOb24Lu5TLK6zYHC33hnjKyfX4fyGo5d0TAZ1WuG5juKvG")
                .transactionId("5c753197-4507-4221-b378-b80d1e25f511")
                .privateMoneyId("dd0b977e-8b1b-4c34-87ef-2ac116dd9f85")
                .setModified(false)
                .transactionTypes(new String[]{"topup"})
                .nextPageCursorId("00a25024-f7e0-4411-99e9-f73a29835bf4")
                .prevPageCursorId("8d5f917a-760b-4958-8cd8-a0cfbc849047")
                .perPage(691)
                .transferTypes(new String[]{"transfer","exchange","cashback","payment","topup","coupon","expire","campaign"})
                .description("sBUUXKAv8PF5tZbVUAlGEbnrN")
                .from("2024-06-25T07:39:12.000000+09:00")
                .to("2022-10-17T09:41:43.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test13() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .customerId("1a76e77d-3f61-4727-915b-38a3636ec1d7")
                .customerName("ZP98XRh2jOftVccg2cckwPtfN3yTAzT5Vh2N0UyvUNuXBsaN54X4JMFdl8ts1yu3waAxoqn4506wCKFuYbGZgoNZz8E8gDXP5IdAXKHiGIqNmjjedcRSd7iNFu5VRlHL0XoQUJAJoL2WnuOoU0XmNd7K7JjFYReuJwtU6Ht8nCm7KpCk1KYdDjESSEXh9ac6JDGvhEW22FERQT2QMexZnFv2k6AW2dVUM5dCG8")
                .transactionId("d5a5b964-4041-4243-b692-b6e1d96bcde8")
                .privateMoneyId("b0bca727-93f9-4398-9b6c-53e8535cdc2d")
                .setModified(false)
                .transactionTypes(new String[]{"cashback","exchange","transfer","payment","topup"})
                .nextPageCursorId("4f261e63-bdd1-43fe-befc-c6770d7903e6")
                .prevPageCursorId("52e4ba6e-5ab2-4f6c-b710-bf988651f690")
                .perPage(894)
                .transferTypes(new String[]{"coupon","cashback"})
                .description("fxflDs9iVTdDnfhyKAyTEb9lcdBgiluGCtEK2hai")
                .from("2021-02-05T19:22:33.000000+09:00")
                .to("2023-09-16T19:07:49.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test14() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .shopName("fDzh8h2nsOa9RwU6RLKdWpcBnq9yNROGTieAJbhwiq4MCvCyjcs9q")
                .customerId("e9e67453-c50f-4f8b-96a7-9d85d0922b22")
                .customerName("GqQAKy9pjKTj3XXKWvvDbH664ZFX5F")
                .transactionId("66c88534-9f8e-45a3-8ca6-8ce1919a94f9")
                .privateMoneyId("5078ed3f-14ef-401e-b271-9a2280df98e1")
                .setModified(true)
                .transactionTypes(new String[]{"transfer","exchange"})
                .nextPageCursorId("82526d21-c08c-4c38-acfa-ccd4258617ce")
                .prevPageCursorId("bedb3c46-fa50-4f30-827c-1bc618efba62")
                .perPage(215)
                .transferTypes(new String[]{"expire","coupon","campaign","cashback","topup","transfer"})
                .description("aBhGW5Wz34di5TAfgh0TKiU9poZ4I6svwGSzXld38LsC9sDDLFEjAZ4dkgmMJgXjWq83b4lemjc31Dlwpws5CGvsdCOIgk47nRnWfNoH4O4bGxKAmcLf")
                .from("2022-06-29T05:04:48.000000+09:00")
                .to("2023-06-24T08:03:51.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test15() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .shopId("5bb85ada-15fb-4a0e-8311-01b05dff120b")
                .shopName("sElkiYeiBjxl7aYPdm9lOgYdAuVcH6YJaCtdacDfgxJs0CsPmVMKKlVy0hW7mXBY0UtntxHQj1vp0JwsIw741uKRj9cE1kuIFB1ztO2GaXhDJEFOEQt0wo6KjTPTP8YB9yKOHSC56Ki4ZygY754Q924jz7bOBR00uMCjIaZkq1tbQKpFaEgmJZCvEqrgrzwP5xrBNCglg44zw")
                .customerId("1220cc90-c785-4d60-89dd-889502409925")
                .customerName("HpLAfs5bDPYNId1rL6QTVBuOyxzU1YfBzzo9LN")
                .transactionId("174845ea-93f1-4609-b12b-4ee5c91aacf7")
                .privateMoneyId("d4dc1184-5f8e-43e8-8acb-98cdab877462")
                .setModified(false)
                .transactionTypes(new String[]{"topup","cashback"})
                .nextPageCursorId("070ac2c7-ebbc-466f-8d8d-8958cf4f382f")
                .prevPageCursorId("9931669d-41a0-44b0-92e1-cc24731e09d4")
                .perPage(81)
                .transferTypes(new String[]{"payment"})
                .description("UpuGiqBP6hcCyB6gumgaMRbH9v1r8fOhaCwrXzFtuFCbqUhypX7FmvJD6wMn1NWOY467F3DyTbiS1fE4XpStkZTV6Qc48yvp5zcEYMnD9bOr76MY2vjSxtCdZPHP28vV")
                .from("2020-03-30T10:45:22.000000+09:00")
                .to("2023-04-17T01:28:21.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
