// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.ListTransfersV2;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class ListTransfersV2Test {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2();
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .to("2024-03-28T12:45:52.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .from("2021-07-31T09:28:46.000000+09:00")
                .to("2023-09-02T15:21:12.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .description("fil4NdZXTUOEPmRMvADQKZoEX1LJKv56X1ESlihFEteyB3tgpH9gpqEpHNVy6Xi8uvQmBTPHrAhD")
                .from("2024-07-24T00:57:32.000000+09:00")
                .to("2020-09-20T09:05:34.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .transferTypes(new String[]{"campaign"})
                .description("MeXc08A48Wm9k0R0oBSyIfoAR1rSMZraN3H1O0kFXnCk7f1O6Pgoq9mksvszZ3DdBkcZffgjsFrI1rTdgLlB58PKKdlpuNuXWEkIAT5j5iVKYV9AIsQNa9mZTC2jk1nd")
                .from("2020-07-29T09:19:51.000000+09:00")
                .to("2021-01-04T12:10:30.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .perPage(40)
                .transferTypes(new String[]{"campaign","expire","coupon","topup"})
                .description("pXAtn1xraYvRnWwv0BQApvoFk9lTMU1nvHGLlHD00ieJZsidbdpztkYCEMQLPCB7FnLLHR")
                .from("2023-04-05T03:03:53.000000+09:00")
                .to("2021-05-30T07:45:57.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .prevPageCursorId("0fea79e7-e236-40bf-a193-e5249c399a14")
                .perPage(344)
                .transferTypes(new String[]{"coupon"})
                .description("RXXFJMQGb5yrnbidveTyxiJi856nsYi3r4gjyloiGzKEzwUVn5W905G7jMtRPGcQo1Ra3LFQL9BywEL8eN6LuCA8GuFoU6HEZR8yYJ48A6Y0nzvHfFNskch6mxrexlt")
                .from("2021-04-12T18:58:08.000000+09:00")
                .to("2021-04-05T13:51:25.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .nextPageCursorId("10d25957-9d2d-4525-8445-8c4ee969ebe8")
                .prevPageCursorId("0f4cbc48-46e0-4098-be22-634afa134315")
                .perPage(248)
                .transferTypes(new String[]{"campaign","payment","exchange"})
                .description("hEyHOK80I4WZwd26XRydlmiPHQV0THiKCMfy95joDyjX7PGrMAlqz")
                .from("2022-04-06T11:18:33.000000+09:00")
                .to("2020-03-24T05:21:31.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .transactionTypes(new String[]{"topup","cashback","payment","transfer","exchange"})
                .nextPageCursorId("a7099438-d9e4-4e88-8fea-d5d3d070d1bf")
                .prevPageCursorId("b3fc4afc-17c4-4da9-a38c-838883af16a6")
                .perPage(848)
                .transferTypes(new String[]{"payment","campaign"})
                .description("p8GT0njlXxPx9gIrGJS02LGECifZvl9cJUpjidYgEmQ3e8pfYCKnKgzyoPoRo0fv0jM")
                .from("2020-12-25T16:18:01.000000+09:00")
                .to("2020-01-19T02:39:32.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test9() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .setModified(false)
                .transactionTypes(new String[]{"topup","transfer","payment"})
                .nextPageCursorId("c09d01b4-7ef1-434a-b16b-736da02e27ba")
                .prevPageCursorId("cdd1d881-7d86-4972-b5ab-e0bc306e2321")
                .perPage(128)
                .transferTypes(new String[]{"payment","cashback"})
                .description("sjuAUr3BLmV3gexYZ9fKZCOzd1n5FzwtuhzPJ3eGwVWLZ8SJfhcVhOcMhcwAyIGwuMdooVqsDrr9uPw8IFDZFf2MBRFqfKFflD6bwmSJYT8lM4wG4DyM3RYn8NGBP5JfUjM0bDCqAj4Lh6aBlXU1lV")
                .from("2021-05-01T21:46:09.000000+09:00")
                .to("2024-01-23T12:30:00.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test10() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .privateMoneyId("83efc1ef-187e-467e-865f-6a7b8a095db7")
                .setModified(true)
                .transactionTypes(new String[]{"expire","payment","exchange","topup","transfer"})
                .nextPageCursorId("28b7b7d5-a2f1-4a90-9f62-f2ac679bd1da")
                .prevPageCursorId("82d2baed-70d8-4189-b459-55498d82ea08")
                .perPage(600)
                .transferTypes(new String[]{"transfer","cashback","exchange","campaign","coupon","payment","expire","topup"})
                .description("rgBNZcJMuTPQgAPI")
                .from("2023-08-28T01:59:31.000000+09:00")
                .to("2022-07-26T09:31:15.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test11() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .transactionId("da773839-5814-4472-921d-5fbf1c6eacc7")
                .privateMoneyId("e7aaa105-6987-4f3c-bb05-bf29cf6698f1")
                .setModified(true)
                .transactionTypes(new String[]{"cashback","transfer","expire","exchange","payment"})
                .nextPageCursorId("22e69250-0868-49bb-9403-062f80a75ede")
                .prevPageCursorId("3224cf3d-1275-4db0-a3c0-67c35cf0ca68")
                .perPage(307)
                .transferTypes(new String[]{"exchange","campaign","expire","payment"})
                .description("5LFfKDmdcbcWO6ox3ucqgc3KNWMvaeotdzzdGa2QREzIh5s9GroGpbGJcKTmgkPyEup4JOeucZes1CKcsOuUFVTXn650i7Ybqc9wXQcZicJa2WQVxvrUsg2Il")
                .from("2020-11-06T01:19:04.000000+09:00")
                .to("2021-08-17T06:13:50.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test12() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .customerName("LVdVRdCAqMfiLktm4JlXyL1suUytAA4qoetS125QefoP3ZDYrwUDe1YmkOh3amlRYYzxpusfyK7h7Wza4htpOWEHYwEgqDm1xQ8TRD6uWCRqhb6teZEyLXqXVoAfB0OuMgNWvFMEqnhvnWPlv6T3DHOlRgDZFhICyg4uJbYumVN")
                .transactionId("5d1bc795-4dd5-4735-ac0b-61fb5e8ec3c0")
                .privateMoneyId("3739538a-a0a7-4b83-9a38-034aedfa356f")
                .setModified(false)
                .transactionTypes(new String[]{"cashback","topup","exchange","payment"})
                .nextPageCursorId("096c270b-9390-4284-8a17-0f1fbaf4b711")
                .prevPageCursorId("0656a559-0675-4479-bf6c-470e51bc3b81")
                .perPage(741)
                .transferTypes(new String[]{"cashback","expire","transfer","payment","coupon","campaign","topup"})
                .description("sGQth4R40J57LnMZGAWDaqbnxQO2doM8ABQSbmKDZmJkL1ChUSPcvmmzXf044Xk0nEomMZGRSvxVwoweX3bMgVE1xEhCervUXUI9USsmbwv2o3Kuq5AK01M5lMWUIdd4bbxdFXt3qGFC4dyPjUG")
                .from("2023-03-21T04:16:38.000000+09:00")
                .to("2020-05-09T05:36:08.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test13() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .customerId("35982134-9775-4fce-aa0c-c5524a86f963")
                .customerName("bobYXQXHMLtuBdDzZbCEQmdkeAf6JFWVVVpNuu")
                .transactionId("e0285698-cab7-48a4-8f18-a14232d8c288")
                .privateMoneyId("18906434-14fc-433d-9cf6-be9168e916dc")
                .setModified(true)
                .transactionTypes(new String[]{"topup","expire","transfer","cashback","exchange"})
                .nextPageCursorId("cd8b5b67-ef06-41da-a45c-938cc554b6aa")
                .prevPageCursorId("b128ed60-1253-42a0-b33d-612521d713f3")
                .perPage(484)
                .transferTypes(new String[]{"transfer"})
                .description("Puyebo6xJs9TH0FKkIK5yxcnHxfpo7tZiZTbSBaXkl1tgAlRjxiBimkJKYskSF3pVbq")
                .from("2020-02-16T18:32:14.000000+09:00")
                .to("2020-09-19T06:36:41.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test14() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .shopName("KlRhgerlM25rrKs1LqRINAC4UOGCve3w5Go9ZjqlDG5Rfi0WVZhLHD5Bvbsj1gmz4gh6hhEo86GRiLhiO5BBNCrowCcXNeItnWArimhAw4BZ5xyflzsUNvT3DA4Ttz5KnN7Amdyjx3nfMB8lczcDdQ9Wq8iEtS0H7jKJFf4KVR51u20BuXVFqV0GS9vV319gRWvX3XCE81XG0b0l9tp4coVE")
                .customerId("07912339-372a-4152-9388-ba6976281b59")
                .customerName("q2S")
                .transactionId("0ea31fee-9156-4d67-81f3-7ecc41389737")
                .privateMoneyId("e6b257ec-9a97-4fbd-8e65-ba7cb3087c01")
                .setModified(true)
                .transactionTypes(new String[]{"exchange","cashback"})
                .nextPageCursorId("07c1c643-c265-4a08-88f4-ccdd39c0d2f4")
                .prevPageCursorId("d008ba46-8610-4d35-ad75-d470acdb2d79")
                .perPage(192)
                .transferTypes(new String[]{"payment"})
                .description("v4XEhWFffrK3sVV0PdnaazfQ7xE2h7XOIUwsqJ5bSSidsVu3AbX30v")
                .from("2022-12-09T02:59:40.000000+09:00")
                .to("2024-01-27T23:41:43.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test15() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .shopId("fe559c48-1b97-4a77-9407-5cbcf8a1bb51")
                .shopName("OjPfs5mLGlzuAsVPkYXVeZA14L5ojO3OTw1nL1QKyzHNATakLy82zHXaYO1Fv2NTfcKhVknD8Fwd1cXyHvmUW5fwsp4J0OLhmotghP8Z0TLWjhouEZK64nOCzfcaW4K0QkPQHyanj025EUv5FHqyJhbVN47eDMytHwBVhYhR0qvtZPdRWpBWweKCczOsn3m6")
                .customerId("8597b80b-16cb-4775-ade9-31e1e18f7726")
                .customerName("Es1WVkFxHTFn2KkR36LwykuGOJCQrq89K4VxPdgyjr0tPCdJ1w5erk5UjbBwZQzDcxnD")
                .transactionId("e9fb3735-1d4d-45ec-b4bb-57fc87adb7a9")
                .privateMoneyId("e634d264-5795-46b5-873b-4302e9457850")
                .setModified(true)
                .transactionTypes(new String[]{"payment","transfer","expire","exchange"})
                .nextPageCursorId("8ca2aea8-17e4-4082-b3c1-1406dbecfd74")
                .prevPageCursorId("d0bc2b01-b804-4c4b-82c0-f1d3589b2ab1")
                .perPage(333)
                .transferTypes(new String[]{"exchange","cashback","expire","topup","coupon"})
                .description("7iXJQgxJlS0GJQjpatGRnXG6EqB7Y2K9AZi5geoCEcvNneEp6YDvz69soKLLWFdLmg6dz6xoLu4zyaSPSM5")
                .from("2021-08-08T05:33:00.000000+09:00")
                .to("2023-07-15T21:20:21.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
