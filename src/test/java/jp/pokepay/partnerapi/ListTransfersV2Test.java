// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.ListTransfersV2;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class ListTransfersV2Test {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2();
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .to("2025-03-18T15:22:24.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .from("2016-12-30T14:22:26.000000+09:00")
                .to("2018-10-19T19:42:43.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .description("j6MGuDCQRgbbh69IfOOqdFvcvTYHWhMSc2JtDSCuxpXIBKjX0wbEINtuhWyJmxhctiEpL1KlL20SY28CEIpXvCz2lX0WFgkUTJYHHOr63hjnglJCcSZdRjCOwyap0lsb8d")
                .from("2023-08-03T05:01:48.000000+09:00")
                .to("2018-02-01T03:51:32.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .transferTypes(new String[]{"payment","transfer","expire","coupon","topup"})
                .description("TN0yX6wxY6IPoPyEr8klncfGkEwHBWOqOmjPQjCJIqduyEzfF4")
                .from("2020-11-16T16:38:09.000000+09:00")
                .to("2015-12-25T02:41:42.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .perPage(462)
                .transferTypes(new String[]{"cashback"})
                .description("8T5msTmgqj81RXJ34GFY2SrpQfm9Le0rSPWlrPa8fbLwdjVaS9JydpHqXjqW7D3uCGCdE3Z7gIcLS")
                .from("2019-07-16T13:28:36.000000+09:00")
                .to("2016-07-16T02:31:47.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .prevPageCursorId("ec44cf7f-3612-4664-906c-26b496687e4a")
                .perPage(901)
                .transferTypes(new String[]{"payment","campaign","coupon","exchange","topup","transfer"})
                .description("JxcGB9NLriuIsMTY")
                .from("2016-03-01T13:38:52.000000+09:00")
                .to("2018-04-24T06:23:01.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .nextPageCursorId("4635ff6f-ec87-4e20-8fac-d1075fa8e516")
                .prevPageCursorId("a4c82287-b0fd-4945-a1bb-eb395dcc53d9")
                .perPage(283)
                .transferTypes(new String[]{"exchange","expire","transfer","coupon"})
                .description("T")
                .from("2016-06-22T09:58:19.000000+09:00")
                .to("2015-10-26T22:06:53.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .transactionTypes(new String[]{"cashback"})
                .nextPageCursorId("0c8bb8df-063f-4dde-bcaa-7acc63773e88")
                .prevPageCursorId("8530c3c7-368e-40c3-913e-d4c731d5ed3a")
                .perPage(260)
                .transferTypes(new String[]{"campaign","exchange","cashback","payment","coupon","transfer"})
                .description("gqbqCIdoPTyGfjAlvbO")
                .from("2020-10-08T23:21:35.000000+09:00")
                .to("2025-01-12T12:30:38.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test9() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .setModified(false)
                .transactionTypes(new String[]{"cashback","topup","exchange","payment"})
                .nextPageCursorId("1f87438f-bd66-47ca-a8d4-fafbba69d06a")
                .prevPageCursorId("09c9e744-8773-4dae-b991-11631958c938")
                .perPage(82)
                .transferTypes(new String[]{"coupon","expire","payment","campaign"})
                .description("1UycVdhwjqe7Rve16qe5BUa3mrtCxkktMbdZ0Ff5nebRZC0vDYNEWMfxXSV")
                .from("2019-11-11T22:48:32.000000+09:00")
                .to("2023-04-06T21:53:37.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test10() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .privateMoneyId("921a08d9-c01a-435a-a290-a80faec05664")
                .setModified(false)
                .transactionTypes(new String[]{"topup","expire","transfer","cashback","payment"})
                .nextPageCursorId("6a955c0e-6406-411b-99ad-b5a62d96143b")
                .prevPageCursorId("67ecd6eb-689f-4112-aa6c-6f3bdf90b8bd")
                .perPage(103)
                .transferTypes(new String[]{"payment","campaign","cashback","coupon","expire","topup"})
                .description("KxjsUzeefE")
                .from("2021-08-13T09:46:49.000000+09:00")
                .to("2023-02-02T22:18:44.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test11() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .transactionId("34d03176-915e-409f-95df-321cad4c00b9")
                .privateMoneyId("a5470038-45c2-4517-9c2d-ee1e9d0512c9")
                .setModified(false)
                .transactionTypes(new String[]{"cashback","expire","topup","exchange"})
                .nextPageCursorId("c9026aee-8094-4359-96c6-fbcfa3095ac6")
                .prevPageCursorId("1c08ed35-3b16-4310-8881-e74999dabad8")
                .perPage(450)
                .transferTypes(new String[]{"payment","expire","cashback","topup","transfer","coupon"})
                .description("6")
                .from("2018-06-19T21:22:14.000000+09:00")
                .to("2020-09-01T23:43:19.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test12() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .customerName("2ry4EX0H5SsjBGi2vt3IVLujfoeXIyA6Ao821XE55hc29pv4sZBooZY")
                .transactionId("e8e04ab5-2877-458e-a23d-fd41f51f6cde")
                .privateMoneyId("77de3c34-d74f-45e7-b298-708385e750eb")
                .setModified(false)
                .transactionTypes(new String[]{"cashback","expire","topup","transfer"})
                .nextPageCursorId("7f2ff9db-b1d6-4754-9d03-17f82d115dbb")
                .prevPageCursorId("ee350688-c31a-470f-934f-eb73c15c0ce1")
                .perPage(830)
                .transferTypes(new String[]{"campaign","topup","expire","cashback"})
                .description("Y0CLcfoUMFSIdEJMG98zC6o")
                .from("2017-02-18T03:09:41.000000+09:00")
                .to("2025-03-13T11:50:44.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test13() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .customerId("ea8ad670-5753-493b-8bf7-ea24a78c2f33")
                .customerName("LnpbrPkZnNjPWO55U7D")
                .transactionId("a9d0b953-cabd-4c66-85d9-71331aa2a04c")
                .privateMoneyId("204f8012-d1e7-4a3f-bed7-59b58514e04d")
                .setModified(true)
                .transactionTypes(new String[]{"transfer","topup","payment","exchange"})
                .nextPageCursorId("1c18eb52-17b5-41dd-ba32-4e2dfa768c88")
                .prevPageCursorId("3508177b-d9c3-4b67-8993-bcc2057f9ca7")
                .perPage(149)
                .transferTypes(new String[]{"payment","cashback","campaign","transfer","expire","topup","coupon"})
                .description("Tys12HHDFFeqLoUtYmfM0XLYceQxhubY3jVYhbh4RW4SjcPHu2gIp7HlCgxYlFZzBuHZ8tjsh68ScZg3aAMErPcV9o0TcGJkIJgRMahTjY4B83KCbssdnciBK2yKUyBpazsFHLyPhoCqWWrzikH0Dr")
                .from("2018-12-23T22:12:04.000000+09:00")
                .to("2018-04-28T18:04:16.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test14() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .shopName("I9ndCARX9iZhUIwUrsQ8Uijo55dyiBxXbKWYhqIQcADAJhWFwASll2hGkEzja1NmQHCUATGGz590dtBhucZ4e0BzAWy80f2MmxJUnd92RrjDmsbpR1t9xme9U0GR2")
                .customerId("3e86fff0-413f-4d87-9298-5aab9d755a3d")
                .customerName("NpULEoTr6H5p2Y5YBaOZdS1seolNILNbVpFGvZ3N4x3uvaLnbw12Ii4C82SzJJG4lODNS2Ij7U5b72UTWbjXGfzCmZ2vkYmrCrWwA7IkDmk9acr8tX9JQSH")
                .transactionId("2a22e2f9-d169-4646-ab22-c66fbdcf9ef3")
                .privateMoneyId("8e008ebd-a2dc-4a07-a5a5-c415cc574e88")
                .setModified(false)
                .transactionTypes(new String[]{"topup"})
                .nextPageCursorId("8fe43825-321f-4a4b-95b8-2cc7fffaff03")
                .prevPageCursorId("bbf414c9-8b4f-4b57-997b-f12f911dc1b0")
                .perPage(721)
                .transferTypes(new String[]{"payment","topup","cashback","campaign"})
                .description("uzPdd0dJeNNvUC0bqs1hvmd5I8evbrAQGpnYomE2cpD4cThkIOO2LW")
                .from("2019-12-11T00:16:24.000000+09:00")
                .to("2016-10-17T23:48:45.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test15() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .shopId("4bcb7294-99b3-417c-86c7-5688e133d3b1")
                .shopName("TmjjHcN57ZbAikJ2opGyr1ja3zumve771kQ7mwZnfGMQasC1yb1Dq2UL9Kx0jYk7sZRicOTg23f5GXrX6ozTzm0HG0TosxKz4jitwHtujKhwCFGwiyv4vlRBRxfHZeKBVf4jVtecQNubIdHetIBPUrvpeN86f46tWgyM43AJZ0KTwWOYBSX4EzfsIiIDCSxoowqwobMRj4K8plKuk4zON6lsKCXAkk07Q9YuV27x2ZZwJNPJ0aXH")
                .customerId("e39e2d97-ee31-4df5-92d7-782ce0acabc3")
                .customerName("sw6VRBfXAF7xeoT0y6lNlDnKEOyMV89HUL5OwvTmfkSpdcLQvsJQRiuvWpRkphzntqbTr2vHF1iF0Y7dBxe8hiTzwk")
                .transactionId("ee9ca24c-eaf4-43fa-bf42-653bf7320266")
                .privateMoneyId("8ef918c1-99e1-419a-b75b-c0a536abbfeb")
                .setModified(true)
                .transactionTypes(new String[]{"payment","transfer","expire","exchange","topup"})
                .nextPageCursorId("0799570f-160b-4788-b61e-f1aa91d1a281")
                .prevPageCursorId("1b515276-705d-46d5-8acc-b9d396bd7196")
                .perPage(448)
                .transferTypes(new String[]{"payment","exchange","transfer","cashback"})
                .description("u83N0tnRGbdpbMjOs6NsjUaiDroY6Q3IK7BQ6AmswdAM3IJrwVbs9pMxfMCthiv1a2EEHFmQw4OmJsXraAGliEBPmHrH76ocsr7yZptwOIMGRxZLktLdV7uiWarFr5GP0wp4l70ZsGyPl")
                .from("2020-01-16T18:22:42.000000+09:00")
                .to("2018-08-17T00:59:16.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
