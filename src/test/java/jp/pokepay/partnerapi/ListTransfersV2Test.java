// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.ListTransfersV2;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class ListTransfersV2Test {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2();
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .to("2019-07-06T12:25:17.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .from("2019-05-24T10:08:21.000000+09:00")
                .to("2019-06-09T03:40:29.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .description("3x0Fi8zTw3qIo6DuYu8xdGWiNWKdaZZkMfGcr3rO6jJNlfWlTRSEUG7vepo3VhxVgHGrhuwDcUhFxY0KJsp41UTE1wxkf2Wi4N8nnHY0uSG7X")
                .from("2022-01-16T18:08:06.000000+09:00")
                .to("2019-01-25T03:32:45.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .transferTypes(new String[]{"topup"})
                .description("qTI")
                .from("2025-07-07T22:18:46.000000+09:00")
                .to("2017-04-02T04:18:50.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .perPage(882)
                .transferTypes(new String[]{"topup","campaign","transfer"})
                .description("yx35oYDSTas0RtMxELHCxI0dXiTKvCqmBRIqIWQXndECqWcMLe9L1Aw9ffjtPYcqr9pU9Zb0RLXTiDNfVAIAbbc4JiMKhbcHedPvjeTi670d3fMgDKJXeEbm50i6FQzWZOIJcQ0RulNhDHEaRPWsgSzLX8YT")
                .from("2022-08-02T04:22:44.000000+09:00")
                .to("2020-07-15T06:12:07.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .prevPageCursorId("960d5754-6c4e-465a-b382-b0b2ef831983")
                .perPage(12)
                .transferTypes(new String[]{"transfer","coupon","campaign","topup","expire"})
                .description("LIKTYuuLE5UWftaGpypu")
                .from("2025-06-11T20:35:11.000000+09:00")
                .to("2023-06-10T16:42:25.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .nextPageCursorId("927945c1-9338-404a-825e-02f47568fb34")
                .prevPageCursorId("0e60d55f-afe2-41a1-ae25-7bfa770e7c86")
                .perPage(830)
                .transferTypes(new String[]{"campaign","coupon","transfer","cashback","payment","topup","expire","exchange"})
                .description("ym4LchIK0Mx2")
                .from("2024-12-22T05:41:46.000000+09:00")
                .to("2021-11-04T10:37:34.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .transactionTypes(new String[]{"exchange","transfer","cashback","payment","expire","topup"})
                .nextPageCursorId("9db8b779-a842-4cf6-a444-3604f3a1ec00")
                .prevPageCursorId("1e544ff0-760c-432d-a343-6581fab08a5d")
                .perPage(323)
                .transferTypes(new String[]{"topup","coupon","transfer"})
                .description("iCGwGGeelujHeiU9z1tecyQU24u9LY5BuKcPrUxJBuSs5F9jzcrXXcr46wDOD367n2dMwtUpNSw5yB76mH1LnyTzrBZG8SWo7qKwqfhBlF1oD8zCJC7BArwjaAMYGwtyO6lpBcwNXC2QKA5O")
                .from("2018-07-30T04:48:27.000000+09:00")
                .to("2020-11-29T09:45:31.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test9() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .setModified(true)
                .transactionTypes(new String[]{"expire","transfer","exchange","cashback","topup","payment"})
                .nextPageCursorId("f702fc82-d8a0-4d45-a911-d1094102cfbe")
                .prevPageCursorId("00e09506-76a6-4d0c-bd5c-0b6af503e99b")
                .perPage(41)
                .transferTypes(new String[]{"topup","exchange","cashback","payment","coupon","transfer"})
                .description("wXXdpbXR7t472AvMobRvbqKXotERrLhd8vqYSID4ouS8HGkGzRUFUJMtPsf1fLNU4iOLJJlIB4F0MgykxcPMg8TC9hNCbfrlOLjJC8hfkasWD7ZglNkhosmRvwRXMdBWf")
                .from("2022-02-05T03:36:45.000000+09:00")
                .to("2018-09-24T20:38:26.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test10() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .privateMoneyId("e0ab9fbc-6efd-4bcd-aa99-de55237f4453")
                .setModified(false)
                .transactionTypes(new String[]{"topup","cashback","transfer","expire"})
                .nextPageCursorId("a37a8733-e85b-4ab2-8e2d-118a11e1d4af")
                .prevPageCursorId("80136596-74d5-44cf-a0d7-4e3791ae5b62")
                .perPage(465)
                .transferTypes(new String[]{"exchange","payment","expire","campaign","transfer","topup","cashback"})
                .description("kMVBWnVa25fdVYwLRhgHhaWiFyibVWI3Uc0YMv2HYUsPrgb0gujOF3UDbCiwYAakM7o11YCkTfXXxlmsBiPcswM6tgHVzBTqqztCHG8BDJM4wmPPjxO5WOAj")
                .from("2017-07-14T07:27:59.000000+09:00")
                .to("2023-07-06T11:50:24.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test11() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .transactionId("9f4c8996-29f8-4750-993e-c3dee0881748")
                .privateMoneyId("4c94f53c-f7ed-45dd-8908-f95676e65710")
                .setModified(false)
                .transactionTypes(new String[]{"cashback","payment","expire"})
                .nextPageCursorId("eda6a63b-33d1-4ef5-a4d5-f56802599639")
                .prevPageCursorId("d9a4d2a2-ddbf-424b-93c0-d6808f4a442d")
                .perPage(137)
                .transferTypes(new String[]{"expire","cashback","payment","campaign","exchange","coupon","topup","transfer"})
                .description("En2Amf")
                .from("2019-06-02T22:18:19.000000+09:00")
                .to("2022-05-08T10:01:43.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test12() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .customerName("SV1cso06hLgZTrNJOh4jBAHOg1HgdsfjcyvTYlstGaeVNHoffKogKgyoJWNI3yb4FZ4e6gnhJ8dtwesSRrvV4H6VC5Butymlgfo2qIzo3zJg5hiEzWJIKwScQGd7eMynQmgBmho06U6ikVOpOMn6k1V6jk8031ZHSa4eePrPfO4S4YAGYArsCA3isIj8q0749toV3HAVxAxs2adPEqTtrNSONkglX9e")
                .transactionId("46e61faf-61a6-4b7a-aaee-50d1ee28ba13")
                .privateMoneyId("c1864de3-97db-460e-88d4-eceb261332f6")
                .setModified(true)
                .transactionTypes(new String[]{"cashback","transfer","payment"})
                .nextPageCursorId("43149137-9785-4ab1-bb33-7afaaf03a5ea")
                .prevPageCursorId("5f2f7c8c-e4c6-4ba1-8e00-6e50e5129073")
                .perPage(835)
                .transferTypes(new String[]{"coupon","campaign","payment","exchange","transfer","expire","cashback"})
                .description("OdVqEgKy4FtKt5i9JOWo8lzhOHo6vB1")
                .from("2025-07-26T22:28:29.000000+09:00")
                .to("2020-10-18T22:20:24.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test13() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .customerId("b8757db8-aa60-490d-9dfb-02cd52444ff5")
                .customerName("fvoecRbdxIYMSHcMq7doVLs9SP6pBkq7tTRiftpHMs0Fh2Hmk6iIoHUVuxNolpabdn2BGP4xGavJqDZ97H62fb8VKNweQK")
                .transactionId("58d471dd-422c-4d0f-8955-0574b3c91bb6")
                .privateMoneyId("501038ab-09b3-451d-9734-8a71e167e647")
                .setModified(false)
                .transactionTypes(new String[]{"exchange","payment","expire","cashback","topup","transfer"})
                .nextPageCursorId("b2f963e1-9284-488c-ae8f-89b4c127971c")
                .prevPageCursorId("876bfae4-4663-4600-ae25-371cf72a65de")
                .perPage(611)
                .transferTypes(new String[]{"payment","transfer","exchange","topup"})
                .description("lN2N1hSQymm0mf9xEvpR1tYnjT1LVMikCOYh2VfK4vnuyhYI3R1HLuR5HgwK0qMrOUHZt4EUO6HEvfLMUzkYyuYlDWCGijGolJEfEvkm8Ed10nLcCv2ILlYHkh2dvVv04Wr8iKyRs8RWRPnMYR7fACMl")
                .from("2023-10-18T11:43:29.000000+09:00")
                .to("2018-09-10T07:35:44.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test14() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .shopName("dswgofzob3OzdbwpxO7RJoTTguh58Af803jRcbxdphIMLuzePcktTmstD7J4LLVLtb1lmo8lPvs3wuNoanGpQSYZ54T")
                .customerId("f5534152-5c3c-4219-ae61-e086bf0cf2f2")
                .customerName("EH6vQq0QNDTfrZs8Uo0ZRYjl1u5F26PYS0MOSmyeRw8r3ED1PdhPCDQyJcJoGuvlVqtm29z673BXa3DSi5fPEI0bQQo3IsERvg2fuM0IuPcffl4Pc53RIUuzYqHExnijB1XqgoQxa4GMSPDOSAcSB6wNALC0APnIXAY0uWZeSHLOdRFur7OVi7J2iqxSoHG")
                .transactionId("e20772cd-661a-477a-b502-a99f8b1bb1d4")
                .privateMoneyId("502838ca-1f93-434c-b608-b74775e77895")
                .setModified(true)
                .transactionTypes(new String[]{"transfer","payment","cashback"})
                .nextPageCursorId("5d13edfe-d5e6-4d0e-bd72-d705f28b7d5c")
                .prevPageCursorId("73ad4c5e-a062-438c-90d0-806f203efc6b")
                .perPage(69)
                .transferTypes(new String[]{"exchange","payment","cashback","coupon","campaign","topup"})
                .description("5V8mp35pHgfgukycQJUq1W3J7vKek5BgPMawPYFzUoVbG16HicwqAXbtRWv2dOOOud6Gs80mcqyISTit60s3KrhmZ70l8CDUT0XVlwNeFl3j2cPUgnn92FKfHwMAH4hg9prGcti9d65o2")
                .from("2023-03-12T02:05:58.000000+09:00")
                .to("2024-07-02T01:09:53.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test15() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .shopId("3c7dd066-6c83-4f4c-b997-726de6111da4")
                .shopName("9MtiNS7WnQ8DkTfwrTOVC8tTmYoLdO2JwdRj8zyRXfiWzcf9BH5eDsmMlAlwdSLtc5asirAs6wyxyq4I88u2SA7vyheDJTOIYMOWX8owDdUq9MD052gqfII2niGnHNWTQAVHjCVVPm9DpTh4vWBcBZiofJMWyB7WvxHyd2OVI5WP9irttL0cvwNJ8E44Kgy2ZxU19Vvn8mBxd6Ss8NCycdX")
                .customerId("84646efd-59e5-45e3-90af-54513a42a860")
                .customerName("tv518DOGDR6jOhoSysQdNib4Z62tLUEKDAIr9TYnOSr3r4YVHP6HcxWe7xj2uvPmC02Owe1SxMzSH9YTqvLPBQj8EUcJrR8xqDqe8A01cZaQsbNOUj4YglelNsxdvF")
                .transactionId("11dcbbf1-79ee-4904-bbf1-b65edd6327bc")
                .privateMoneyId("a0856fe2-68fa-4221-8026-ec420482e4df")
                .setModified(true)
                .transactionTypes(new String[]{"transfer","expire"})
                .nextPageCursorId("e69d8119-0bd7-4fb4-a3fb-00c074596e10")
                .prevPageCursorId("a99bd9b5-05aa-4083-b279-c9327c600792")
                .perPage(345)
                .transferTypes(new String[]{"campaign","cashback","payment","coupon"})
                .description("sL3wggzwEm9Nph9l9ZUlj15EzsUQWZD4DD1O8mHxc1ntPv3l9kzVw6uikUdJkYPdZeX2adjxUZ5aMT4iOowZ685juE7y2H9nyKQt4HPTHZJN")
                .from("2024-04-27T13:05:11.000000+09:00")
                .to("2017-09-29T05:35:05.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
