// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.ListTransfersV2;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class ListTransfersV2Test {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2();
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .to("2022-03-06T10:42:31.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .from("2023-02-11T13:21:38.000000+09:00")
                .to("2021-09-05T07:36:09.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .description("YEOvUCnZizQm6jxoz7")
                .from("2022-10-24T10:01:23.000000+09:00")
                .to("2020-10-07T00:58:23.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .transferTypes(new String[]{"expire","cashback","coupon","transfer","campaign","topup","exchange"})
                .description("cgoWdOUmWwy0LdMAROmDfDJxixBDblrTqqwACKpPNLXAgcjfFAsTESeDgOB2XMjS0FtG05NIoG9OOtfYf14JXneSU3")
                .from("2022-01-20T11:56:23.000000+09:00")
                .to("2024-07-26T07:44:25.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .perPage(417)
                .transferTypes(new String[]{"exchange","transfer","topup","cashback","coupon","expire"})
                .description("4HONf1SVQxP")
                .from("2024-04-30T09:39:40.000000+09:00")
                .to("2024-01-24T19:26:25.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .prevPageCursorId("6c951e85-6ce2-436c-9e27-cbcbff0a4033")
                .perPage(20)
                .transferTypes(new String[]{"coupon","expire","campaign","transfer","payment","cashback","exchange","topup"})
                .description("WMSaiLaeZtDq1svllIixshFisByLNn3bq4srqT0KUAGyXHOriQwGWyMWHldToXHNzIxTlTKUt2HvEjVaSE9P1RKbyVXquzXhsA5u0eLhbiydoMwXRaq")
                .from("2024-08-12T16:40:26.000000+09:00")
                .to("2021-06-03T19:29:38.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .nextPageCursorId("a2aa88f2-027d-490e-8c04-a26c86a1f08d")
                .prevPageCursorId("89d2313c-4a3d-4e59-9997-065a6f556058")
                .perPage(390)
                .transferTypes(new String[]{"cashback","campaign","topup"})
                .description("84mrzCgxU6wJYatLmrC1Dh3E4wodLaM6ClmiYQMUuLRLVJ8r9MPjcQwrz0G0WTR9EfZvsWVAB9UpqLR5OJCxPRtYlIcYO6vpWNvqoW5C6nEZMEpFaqEUMzt1Rrt3GNnPSTD0ZurTbwV9M1NpRT")
                .from("2021-06-26T19:16:32.000000+09:00")
                .to("2023-03-24T11:30:22.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .transactionTypes(new String[]{"expire","payment","exchange","cashback"})
                .nextPageCursorId("23b67e8c-7ae6-4dcf-bac7-133ab00e9084")
                .prevPageCursorId("8cd4dafe-7b3a-48f3-8db0-99734d83e10f")
                .perPage(488)
                .transferTypes(new String[]{"expire","coupon","payment","transfer","cashback","topup","exchange","campaign"})
                .description("jjc0wnSZac8Hbvzs0zvFryoGJG5H0NVAwNREtVzbt7eV8f46mQs4Mc550rmLTnX9UWqmSp9W0I9HGIDJBMAnb187VRRj17jtNKmLLYmI4JqWVTjwtvtL2mVMuzdaf0YByaku9l")
                .from("2023-01-05T05:40:08.000000+09:00")
                .to("2021-05-08T07:53:10.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test9() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .setModified(false)
                .transactionTypes(new String[]{"cashback"})
                .nextPageCursorId("666b72be-bd3a-4ba2-a8f3-4e8123b37188")
                .prevPageCursorId("323bcdef-373f-478c-a093-d74d73bb3697")
                .perPage(60)
                .transferTypes(new String[]{"cashback","payment"})
                .description("flZbz")
                .from("2020-04-02T21:25:44.000000+09:00")
                .to("2022-11-09T01:16:14.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test10() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .privateMoneyId("674c6371-8980-4e39-a347-d77b68f2bb12")
                .setModified(false)
                .transactionTypes(new String[]{"exchange"})
                .nextPageCursorId("1d2fbea3-f356-4f4c-a148-e50dbdbef6a4")
                .prevPageCursorId("5116d1ac-4a37-4c5f-b903-716bf502694f")
                .perPage(153)
                .transferTypes(new String[]{"exchange"})
                .description("P9qWXwFdopDtzzTNLQojKrufJeOVwy4MMKxj8YJ03g7FIoAZA4Y87DCQUiGZKFvCk2LLpVjM6saGc2mp1a4BwdO9GPnfYJfvwWzPmmcV21hpML69tyWHYO2Bz8lb6A2dTRbtW4rjzbN20")
                .from("2022-02-15T02:40:05.000000+09:00")
                .to("2020-04-28T01:42:35.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test11() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .transactionId("503d67b5-caf6-4931-b2d5-63bc4b591501")
                .privateMoneyId("1e2a681d-97f6-4cf1-a17b-921619da1b03")
                .setModified(false)
                .transactionTypes(new String[]{"topup","expire"})
                .nextPageCursorId("6099297a-9f35-4518-8c80-a9bb06632736")
                .prevPageCursorId("d3a402c3-4b82-49bb-a451-83ba0b3e8cd4")
                .perPage(496)
                .transferTypes(new String[]{"cashback","payment","topup","campaign","expire","coupon"})
                .description("a90qfD396OgCnlVVx85z15CmYk3KHzYMENQzWGD9aAqGw3Dhj30vED73RFayoudOP1QM8L6gL3u70deAjxkWkV0NU0Esq5HZlYIzHvSTIdjfbhZxngMJozv1VeSWnrTdXBS3")
                .from("2022-11-17T07:22:11.000000+09:00")
                .to("2021-05-23T18:24:18.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test12() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .customerName("hAH")
                .transactionId("740bf410-88bd-4f2a-acd3-895fcb02c24d")
                .privateMoneyId("d82fe9f9-51cc-48a5-b237-282fbaea24c9")
                .setModified(false)
                .transactionTypes(new String[]{"expire","topup","exchange","payment","cashback","transfer"})
                .nextPageCursorId("4b505795-57b1-464a-a1b2-9779f9ed79d8")
                .prevPageCursorId("dcefa079-93d6-402f-ae34-bb4918070eda")
                .perPage(14)
                .transferTypes(new String[]{"coupon","payment","campaign"})
                .description("S8QIfXdzvWNJ9HKuZL4BzEowdYJ8zjo7wmE1wmyBXqy2des0UPrtYVVPh48yN0dOue05wY1QaQuMcAze9Wqrt1cC5BkBOaELxjjpztbeylM7PRhl5QvpI7VARrUNkSa")
                .from("2022-12-16T22:48:45.000000+09:00")
                .to("2022-08-06T16:02:11.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test13() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .customerId("efccb977-7349-4b14-a262-b1ffae560775")
                .customerName("vzb10xZlFlwSh9Op748KIeTfChK0ypuN5LPVvJnQxL5vlodWZ1oKmkKo3zJDoksz5mMxoJR1i5dnYEcz8L4dXWddGcY8UtmErHCfsaJGuclIWnGpeOcU2UTeLFpcIVPal0oOP7j59irXCS61xADoGV4ybWn9T3uO")
                .transactionId("c86c14e0-3411-4a53-9009-e9a168b52a2d")
                .privateMoneyId("f5d0089c-5406-451c-8033-0ecc5d9e240f")
                .setModified(true)
                .transactionTypes(new String[]{"transfer","expire","topup","payment","exchange","cashback"})
                .nextPageCursorId("df2a5730-558f-4463-bd3d-5a59cc54eec7")
                .prevPageCursorId("33521e0d-6a4a-4584-84fa-146e8b1483ea")
                .perPage(581)
                .transferTypes(new String[]{"topup","expire","transfer","campaign"})
                .description("07HfrRvKDmJaKIQcQTSdvHC3uums1GWFepUv7MaKRZ")
                .from("2022-07-11T14:30:22.000000+09:00")
                .to("2024-02-16T09:26:41.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test14() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .shopName("erzKJt63gaTPZ4S7ZZTeYzMDf7XczxYEW1MyCDJlSookaYDXsyadBXxyvrauG2nb24Q2Vn9c1YyTUHEHVcYjUAsUAiAut9g10vIFfvDNz0rk5KGNBdoRS5VacgggPyoR7FHwHHaaPCfnHigkDBaPBVdApgVrNZYZ5yQQiCCP9EO")
                .customerId("47c14f51-d898-450e-8ae0-b49629e4aed8")
                .customerName("vULpykCplyaKLrUKYST8bGTzbxgYb0EwDif321x17BBxQrSK0setJrMDb9HZskh9B8wQPvNoMnsnkwzVqmLYGBG75oqgoNLG4V6YFMOhr4KV8gRNuZ29RHNNxJ7247XcfvwwQhoyMGZYiKhvgSHITIDM1d4kn2l32c048GrFOe1gENbuuwO97Ze20upgf00cYHoWZdmknnVaJli9T0wBxpt1az8Xs0pzWLKoXppzX")
                .transactionId("fef32ae4-e464-487a-a93f-35829fdb3cfc")
                .privateMoneyId("c18f053f-b0ee-45ce-844c-e444acfb7153")
                .setModified(false)
                .transactionTypes(new String[]{"transfer","cashback"})
                .nextPageCursorId("1a7ac9fa-c454-4227-b5ce-5a24aeb421ea")
                .prevPageCursorId("e5366ab0-db84-4f29-88d2-57feb54c989c")
                .perPage(725)
                .transferTypes(new String[]{"expire","payment","exchange","coupon","topup","transfer","cashback"})
                .description("jgCbAacYTh2x3axxkmeGQ8bxAtALCshaAluknjvjzr9SUkvYvRNB1ySBD0puT753aduoow51MzvfkNIM53bBBliU6yL5CzKqd1YUcGSsZHUUzAS1h4CrbaElswNmDWCjLogRrlBxmoYqQ2Y0")
                .from("2022-03-31T21:04:03.000000+09:00")
                .to("2020-09-10T14:45:55.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test15() throws ConnectionError, ProcessingError {
        Request request = new ListTransfersV2()
                .shopId("44cebe16-671b-406a-a44c-5fe830c30d71")
                .shopName("YXKE2t8kuTVBkUhoRTQ7g1CnPUoTbZRhGeR4OVIz8Yd9WcbWVMKIKv83oDFkerSzw0bCY0weIqqTNLExAAHgGyZc50JKSf98Ans7puin1qvIBh6jHnoQomeNIy3dr1jbOLWmuPS7p6fBGlgrs2bVch1Pw247qvGIyNJ93SaayHuQPwp1P3k9kYNOvFEjTUgW6vkqBJCsrow3mcHVTDz8azeaguWNHExMobcW")
                .customerId("0ab23b2d-9d28-4e86-9f0f-82100ed34941")
                .customerName("ZIhDrzQ6QvqAlYqGXKvhKuDEwmi7N97TVUV8VP2Uxp4CGEXzPVgqLJbBhzsqrYW8k10hKb9xJchKejgsEGWlnoxfttf8d1bxYXnq7XDKoN24JxU9SUy4XQBX6mWp7riKhnyUMLzrQrlTuwM9IwrobtdW7hqJe7n51wcqvP6")
                .transactionId("438968cd-e12c-48b2-b839-ed0177f11be6")
                .privateMoneyId("0cb954d7-5358-4892-ad2b-dd5f8c2ce5e5")
                .setModified(false)
                .transactionTypes(new String[]{"payment","transfer","cashback","exchange","expire","topup"})
                .nextPageCursorId("df94996e-9e51-41cc-96bd-b1fffb65992b")
                .prevPageCursorId("5fc03b87-318d-45e3-98ac-9a6456321dad")
                .perPage(843)
                .transferTypes(new String[]{"cashback","coupon","topup","payment","exchange"})
                .description("D2MgFuGQRjRdmU7xA9OHQu3l4sM1MgmhJ04UwQzZFkbGjDV3lpn6iAPBKufuSHnSsKu7wYJaoXz7G0ufetvtf7ItNHmp2")
                .from("2020-01-11T03:13:28.000000+09:00")
                .to("2021-01-17T07:21:38.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
