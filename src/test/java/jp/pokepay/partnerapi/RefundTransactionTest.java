// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.RefundTransaction;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class RefundTransactionTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new RefundTransaction(
            "529e57c8-f949-4beb-8aa9-95c45e754694"
        );
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new RefundTransaction(
            "529e57c8-f949-4beb-8aa9-95c45e754694"
        )
                .returningPointExpiresAt("2021-01-04T17:23:21.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new RefundTransaction(
            "529e57c8-f949-4beb-8aa9-95c45e754694"
        )
                .description("GXI8QJ6bvOTjQ8EQtOHlolT2gfb9g6YR3zI4OILTkTwXSXjT3mjL62MYfVbYEpdMvK6wNrmRujD4x7g2z3aqgytevZfz9oBkFWq2Pmpv80HSL7ShxTijbE7bsHTDB2vg7lREpju7rf5GZXlEuXVlE9sKxhQ0Yq4ck6P2eOZ9Wq")
                .returningPointExpiresAt("2021-08-21T21:20:42.000000+09:00");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
