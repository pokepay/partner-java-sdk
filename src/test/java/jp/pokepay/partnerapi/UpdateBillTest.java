// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.UpdateBill;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class UpdateBillTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new UpdateBill(
            "6c2e3ec8-1a61-4e0c-a28e-34d1b439371b"
        );
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new UpdateBill(
            "6c2e3ec8-1a61-4e0c-a28e-34d1b439371b"
        )
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new UpdateBill(
            "6c2e3ec8-1a61-4e0c-a28e-34d1b439371b"
        )
                .description("cDnAzRTHyqS1d9GaVdNJg0cWW9NhTRh9s5pj7o5XIjYc9d340mrn6m7LdBtLEb8wytTAYfjF1c5BvhdUGJ4lDQavPhltOQHyb4rPdPsW3BYKtNs06s772umC0jMavzJalB")
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new UpdateBill(
            "6c2e3ec8-1a61-4e0c-a28e-34d1b439371b"
        )
                .amount(7588.0)
                .description("lkx69SvqXxb6XqKVJcL6RSXm3wjg1uPYJcBJVYOWWEdHamDoKV7J8CkTq49R5Ut5MXEIyXGaR0dwq3adf1CVg9Zu1DOaT2Pva8AQw4YXmmZBv4Cy6ywaxTZ8HvCXyL9X7IAF8OtCNKAefO2h8gXVgCn92s3FVddYtYmivLq5HZEtTb2pPI2mKw")
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
