// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.UpdateCheck;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class UpdateCheckTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new UpdateCheck(
            "339af5b8-3c3c-4613-b7a1-76e7c6a3ed99"
        );
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new UpdateCheck(
            "339af5b8-3c3c-4613-b7a1-76e7c6a3ed99"
        )
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new UpdateCheck(
            "339af5b8-3c3c-4613-b7a1-76e7c6a3ed99"
        )
                .bearPointAccount("770be849-7f36-4e0a-85f6-db2f0c148588")
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new UpdateCheck(
            "339af5b8-3c3c-4613-b7a1-76e7c6a3ed99"
        )
                .pointExpiresInDays(4315)
                .bearPointAccount("505a8b50-85e0-44b9-b070-23f2f6b80be0")
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new UpdateCheck(
            "339af5b8-3c3c-4613-b7a1-76e7c6a3ed99"
        )
                .pointExpiresAt("2023-02-25T15:14:03.000000+09:00")
                .pointExpiresInDays(5533)
                .bearPointAccount("4931226d-fb3c-4eb9-88b1-2228857cfd4a")
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new UpdateCheck(
            "339af5b8-3c3c-4613-b7a1-76e7c6a3ed99"
        )
                .expiresAt("2021-08-25T01:52:59.000000+09:00")
                .pointExpiresAt("2021-04-27T18:18:27.000000+09:00")
                .pointExpiresInDays(744)
                .bearPointAccount("f340d6d2-b776-42d3-8252-de9df57fc7bc")
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new UpdateCheck(
            "339af5b8-3c3c-4613-b7a1-76e7c6a3ed99"
        )
                .usageLimit(2579)
                .expiresAt("2022-11-04T08:20:17.000000+09:00")
                .pointExpiresAt("2023-04-05T19:35:20.000000+09:00")
                .pointExpiresInDays(1446)
                .bearPointAccount("894e4d7d-885a-4877-ae6e-b539d19cfa5d")
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new UpdateCheck(
            "339af5b8-3c3c-4613-b7a1-76e7c6a3ed99"
        )
                .setOnetime(true)
                .usageLimit(5287)
                .expiresAt("2022-11-18T12:58:13.000000+09:00")
                .pointExpiresAt("2021-11-07T23:03:07.000000+09:00")
                .pointExpiresInDays(5079)
                .bearPointAccount("24401081-7d2e-44a9-b093-7b414a9b5fbd")
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new UpdateCheck(
            "339af5b8-3c3c-4613-b7a1-76e7c6a3ed99"
        )
                .description("cUZm6PDDqZe8HhJJ3nsX73aCxhNwkcC7VusJJJqz5IYfmpJqb6I1B0ruDlS6nY9fJiO1orvmqqQEP5Q22xf4yu5tT5pRVaOAK4ot5fy2oMrMAeP3ipQt4aFzxdRescR9Iq")
                .setOnetime(false)
                .usageLimit(7324)
                .expiresAt("2020-02-20T21:39:36.000000+09:00")
                .pointExpiresAt("2020-09-27T11:50:15.000000+09:00")
                .pointExpiresInDays(2693)
                .bearPointAccount("ad3398dd-c664-44b3-b5c0-250e2c5bde1b")
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test9() throws ConnectionError, ProcessingError {
        Request request = new UpdateCheck(
            "339af5b8-3c3c-4613-b7a1-76e7c6a3ed99"
        )
                .pointAmount(993.0)
                .description("NUKm6n6e7AS1VOhM2gq99dPPdEHkY1KaAIh7lNE9PG8TNOQQYcSvERsjesluaPiZk6FaGCLleZr7DO6GZVlSI8D6aYE7jyLfPFdNzailPsNwLLQwABdK8olkmggaGhZZjUmwECsQjPk4SOZMu36iK5dU5")
                .setOnetime(true)
                .usageLimit(5040)
                .expiresAt("2023-05-25T23:15:19.000000+09:00")
                .pointExpiresAt("2020-09-12T14:40:52.000000+09:00")
                .pointExpiresInDays(7475)
                .bearPointAccount("b2b55875-9ffd-4480-922c-01fa44a53715")
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test10() throws ConnectionError, ProcessingError {
        Request request = new UpdateCheck(
            "339af5b8-3c3c-4613-b7a1-76e7c6a3ed99"
        )
                .moneyAmount(3315.0)
                .pointAmount(2206.0)
                .description("7r8GCuu7NnSxUjZqyMO3i")
                .setOnetime(false)
                .usageLimit(7742)
                .expiresAt("2024-01-01T04:00:58.000000+09:00")
                .pointExpiresAt("2023-07-17T03:19:27.000000+09:00")
                .pointExpiresInDays(6481)
                .bearPointAccount("e9eb8209-8849-4ba5-9d21-fe5dfafbf0bd")
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
