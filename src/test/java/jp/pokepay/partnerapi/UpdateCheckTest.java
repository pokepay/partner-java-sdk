// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.UpdateCheck;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class UpdateCheckTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new UpdateCheck(
            "7f8c9d22-a9c2-46aa-837c-6b800b95da28"
        );
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new UpdateCheck(
            "7f8c9d22-a9c2-46aa-837c-6b800b95da28"
        )
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new UpdateCheck(
            "7f8c9d22-a9c2-46aa-837c-6b800b95da28"
        )
                .bearPointAccount("cac5e857-5317-4ea1-aaf1-6ac762840a9e")
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new UpdateCheck(
            "7f8c9d22-a9c2-46aa-837c-6b800b95da28"
        )
                .pointExpiresInDays(6251)
                .bearPointAccount("50579ba3-7f8e-4a80-a08f-901c3e902b28")
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new UpdateCheck(
            "7f8c9d22-a9c2-46aa-837c-6b800b95da28"
        )
                .pointExpiresAt("2020-04-13T01:17:22.000000+09:00")
                .pointExpiresInDays(4651)
                .bearPointAccount("1c43f4d0-3a3d-4b42-917f-f6319ac2dd7f")
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new UpdateCheck(
            "7f8c9d22-a9c2-46aa-837c-6b800b95da28"
        )
                .expiresAt("2022-11-22T03:40:32.000000+09:00")
                .pointExpiresAt("2021-02-27T12:36:21.000000+09:00")
                .pointExpiresInDays(8130)
                .bearPointAccount("9791466d-6e50-4ab9-9924-814b3005714a")
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new UpdateCheck(
            "7f8c9d22-a9c2-46aa-837c-6b800b95da28"
        )
                .usageLimit(7376)
                .expiresAt("2020-07-06T01:29:57.000000+09:00")
                .pointExpiresAt("2020-03-25T12:15:14.000000+09:00")
                .pointExpiresInDays(7215)
                .bearPointAccount("1901b6e5-118c-43be-9201-5004215c1350")
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new UpdateCheck(
            "7f8c9d22-a9c2-46aa-837c-6b800b95da28"
        )
                .setOnetime(false)
                .usageLimit(9565)
                .expiresAt("2020-10-28T04:11:57.000000+09:00")
                .pointExpiresAt("2023-11-28T00:32:17.000000+09:00")
                .pointExpiresInDays(9609)
                .bearPointAccount("8377a387-ae9d-465d-bfd8-be345d72ea8d")
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new UpdateCheck(
            "7f8c9d22-a9c2-46aa-837c-6b800b95da28"
        )
                .description("5TNZa4ujMrOl4bAOzgDZ2aWWrsNFd2sWnsy5eeFSqJ6GMTcRzphlk7JSYljdnAmY6LOPUaYdoJJpaxX5Afa9yaYZOsxtWh8WsKN")
                .setOnetime(true)
                .usageLimit(2080)
                .expiresAt("2021-08-06T12:29:52.000000+09:00")
                .pointExpiresAt("2022-05-14T18:11:16.000000+09:00")
                .pointExpiresInDays(689)
                .bearPointAccount("a9186a33-6cea-4d09-ab1a-5ef8853f7cb9")
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test9() throws ConnectionError, ProcessingError {
        Request request = new UpdateCheck(
            "7f8c9d22-a9c2-46aa-837c-6b800b95da28"
        )
                .pointAmount(1265.0)
                .description("8wUtdJgW6Udy4NzMaQP1n7ZZE7rczuX4iyBP3YiA2Ja1wV3JrXobiIhXoKT8as0WvrmpLfNMKBYxZF9CdZBRO6UOsoyOdyJXKwrrSpnnjEPeu3JMg3EKHV9TnsH46")
                .setOnetime(true)
                .usageLimit(8077)
                .expiresAt("2021-10-19T20:39:49.000000+09:00")
                .pointExpiresAt("2020-10-21T14:54:26.000000+09:00")
                .pointExpiresInDays(2867)
                .bearPointAccount("61e2bfb3-1b21-4983-b15d-e912a633b02f")
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test10() throws ConnectionError, ProcessingError {
        Request request = new UpdateCheck(
            "7f8c9d22-a9c2-46aa-837c-6b800b95da28"
        )
                .moneyAmount(8547.0)
                .pointAmount(6264.0)
                .description("JYJPtoae9oS7JdAf44iINdrET2RUMDgPPpXtLKzr")
                .setOnetime(true)
                .usageLimit(7731)
                .expiresAt("2020-02-04T06:19:05.000000+09:00")
                .pointExpiresAt("2020-05-17T14:44:22.000000+09:00")
                .pointExpiresInDays(8701)
                .bearPointAccount("4cedee43-e6ac-4fe8-98c1-2df0e1a59da8")
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
