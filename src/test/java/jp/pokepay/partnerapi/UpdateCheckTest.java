// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.UpdateCheck;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class UpdateCheckTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new UpdateCheck(
            "0da2a235-a61d-4fb0-895d-6bf9eae38e8e"
        );
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new UpdateCheck(
            "0da2a235-a61d-4fb0-895d-6bf9eae38e8e"
        )
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new UpdateCheck(
            "0da2a235-a61d-4fb0-895d-6bf9eae38e8e"
        )
                .bearPointAccount("f3ece267-e6dd-4c26-bb9a-a2145b58b94f")
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new UpdateCheck(
            "0da2a235-a61d-4fb0-895d-6bf9eae38e8e"
        )
                .pointExpiresInDays(7651)
                .bearPointAccount("dc2a9537-2e25-428b-8c79-9759f46c2283")
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new UpdateCheck(
            "0da2a235-a61d-4fb0-895d-6bf9eae38e8e"
        )
                .pointExpiresAt("2022-06-23T02:48:50.000000Z")
                .pointExpiresInDays(462)
                .bearPointAccount("588f723f-b8d0-4356-a138-15ece3046a56")
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new UpdateCheck(
            "0da2a235-a61d-4fb0-895d-6bf9eae38e8e"
        )
                .expiresAt("2021-06-27T23:48:12.000000Z")
                .pointExpiresAt("2021-04-14T11:48:16.000000Z")
                .pointExpiresInDays(1536)
                .bearPointAccount("5885fd4f-db4f-4e31-b732-dcc721d95a97")
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new UpdateCheck(
            "0da2a235-a61d-4fb0-895d-6bf9eae38e8e"
        )
                .usageLimit(4840)
                .expiresAt("2024-03-14T23:38:51.000000Z")
                .pointExpiresAt("2023-10-29T21:40:43.000000Z")
                .pointExpiresInDays(4895)
                .bearPointAccount("36989ecd-ea2e-4586-9178-d41a6010f1d0")
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new UpdateCheck(
            "0da2a235-a61d-4fb0-895d-6bf9eae38e8e"
        )
                .setOnetime(false)
                .usageLimit(528)
                .expiresAt("2021-06-28T16:46:16.000000Z")
                .pointExpiresAt("2022-04-18T04:46:18.000000Z")
                .pointExpiresInDays(7522)
                .bearPointAccount("dcc480ac-5d41-4298-b474-fb4dd4432d13")
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new UpdateCheck(
            "0da2a235-a61d-4fb0-895d-6bf9eae38e8e"
        )
                .description("t9CEIs7P52Qn8Ps6rGg4gxhQEPHlDMgzo7RyqyjDQCvIVLohtP7YX7LIJvkHIDHAM5JdvPW8u4K9jehE0FIX2d1fsIJRaq4cseT3Jr8x9EZ1")
                .setOnetime(false)
                .usageLimit(926)
                .expiresAt("2022-11-29T22:15:30.000000Z")
                .pointExpiresAt("2023-07-27T03:52:53.000000Z")
                .pointExpiresInDays(9891)
                .bearPointAccount("0017f63e-2af1-4d56-b4bf-6b1950a35255")
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test9() throws ConnectionError, ProcessingError {
        Request request = new UpdateCheck(
            "0da2a235-a61d-4fb0-895d-6bf9eae38e8e"
        )
                .pointAmount(774.0)
                .description("a8eDKBhpNX1jWPk8Z43B0y0B9mfs2NjGqIbT9OwqnkaPpwID0eLyZpFNZ79bus52pNLLPoSL84SGwACEhVooVmB4cFvbTIGcXWAqG4BSfipEZMFGhk16I7iXigWOnUAkBWGfv1h3SdKWf7Mk6qxlTgasH11ZahWwt0KCw4FDQO05qLTqGDbzQDuaFv4Vsa")
                .setOnetime(true)
                .usageLimit(9429)
                .expiresAt("2021-10-28T01:43:41.000000Z")
                .pointExpiresAt("2020-04-30T07:58:27.000000Z")
                .pointExpiresInDays(4328)
                .bearPointAccount("ac255a21-4c61-49b8-885e-2c3b5040773d")
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test10() throws ConnectionError, ProcessingError {
        Request request = new UpdateCheck(
            "0da2a235-a61d-4fb0-895d-6bf9eae38e8e"
        )
                .moneyAmount(3664.0)
                .pointAmount(7445.0)
                .description("Lfj8VAxLQCn6DppPY7uZKs5wMf3MBYDCuFCMBOgtd28MFakoJp4sttlPyu0hLTf3LV1FvqM27")
                .setOnetime(false)
                .usageLimit(2449)
                .expiresAt("2020-08-03T06:46:10.000000Z")
                .pointExpiresAt("2021-03-26T22:06:24.000000Z")
                .pointExpiresInDays(2622)
                .bearPointAccount("a69aa3f1-6679-49e2-bfd4-193394ba5d95")
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
