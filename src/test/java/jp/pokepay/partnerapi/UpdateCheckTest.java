// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.UpdateCheck;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class UpdateCheckTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new UpdateCheck(
            "b0957c83-aab4-424b-b998-c121e5e95f6a"
        );
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new UpdateCheck(
            "b0957c83-aab4-424b-b998-c121e5e95f6a"
        )
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new UpdateCheck(
            "b0957c83-aab4-424b-b998-c121e5e95f6a"
        )
                .bearPointAccount("0ef62065-a6e8-4745-b01e-b4465ebf2893")
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new UpdateCheck(
            "b0957c83-aab4-424b-b998-c121e5e95f6a"
        )
                .pointExpiresInDays(8115)
                .bearPointAccount("50b4b7e4-86c0-4731-a6c0-d000e06e77f3")
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new UpdateCheck(
            "b0957c83-aab4-424b-b998-c121e5e95f6a"
        )
                .pointExpiresAt("2022-09-17T04:14:34.000000Z")
                .pointExpiresInDays(6114)
                .bearPointAccount("120cd1dc-82f1-40db-b4e3-d8738f704eaf")
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new UpdateCheck(
            "b0957c83-aab4-424b-b998-c121e5e95f6a"
        )
                .expiresAt("2021-12-26T07:08:50.000000Z")
                .pointExpiresAt("2020-04-20T21:24:42.000000Z")
                .pointExpiresInDays(9361)
                .bearPointAccount("add2afb3-924a-4e3f-b238-e78e930de5f8")
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new UpdateCheck(
            "b0957c83-aab4-424b-b998-c121e5e95f6a"
        )
                .usageLimit(5850)
                .expiresAt("2022-09-20T22:54:41.000000Z")
                .pointExpiresAt("2022-06-21T06:26:38.000000Z")
                .pointExpiresInDays(9091)
                .bearPointAccount("e6b60915-66a2-463e-b156-c43425c0e7bf")
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new UpdateCheck(
            "b0957c83-aab4-424b-b998-c121e5e95f6a"
        )
                .setOnetime(false)
                .usageLimit(6690)
                .expiresAt("2021-06-13T06:42:46.000000Z")
                .pointExpiresAt("2024-02-20T12:53:17.000000Z")
                .pointExpiresInDays(3236)
                .bearPointAccount("59559e61-6e5c-4a87-8d38-dd650e4cb294")
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new UpdateCheck(
            "b0957c83-aab4-424b-b998-c121e5e95f6a"
        )
                .description("KBhpNX1jWPk8Z43B0y0B9mfs2NjGqIbT9OwqnkaPpwID0eLy")
                .setOnetime(false)
                .usageLimit(666)
                .expiresAt("2020-05-04T10:41:03.000000Z")
                .pointExpiresAt("2020-03-06T08:42:24.000000Z")
                .pointExpiresInDays(4807)
                .bearPointAccount("f22beb4e-a05a-4d14-b711-7187892faaa4")
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test9() throws ConnectionError, ProcessingError {
        Request request = new UpdateCheck(
            "b0957c83-aab4-424b-b998-c121e5e95f6a"
        )
                .pointAmount(7166.0)
                .description("9bus52pNLLPoSL84SGwACEhVooVmB4cFvbTIGcXWAqG4BSfipEZMFGhk16I7iXigWOnUAkBWGfv1h3SdKWf7Mk6qxlTgasH11ZahWwt0KCw4FDQO05qLTqGDbzQDuaFv4VsaDUMga8HPH")
                .setOnetime(true)
                .usageLimit(6288)
                .expiresAt("2023-09-02T05:02:34.000000Z")
                .pointExpiresAt("2023-01-19T14:30:30.000000Z")
                .pointExpiresInDays(7609)
                .bearPointAccount("618163de-18d6-4441-aa8e-45f8f4b0868f")
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test10() throws ConnectionError, ProcessingError {
        Request request = new UpdateCheck(
            "b0957c83-aab4-424b-b998-c121e5e95f6a"
        )
                .moneyAmount(9425.0)
                .pointAmount(1504.0)
                .description("n6DppPY7uZKs5wMf3MBYDCuFCMBOgtd28MFakoJp4sttlPyu0hLTf3LV1FvqM27O2bqy")
                .setOnetime(true)
                .usageLimit(383)
                .expiresAt("2022-04-12T23:40:04.000000Z")
                .pointExpiresAt("2021-03-06T21:54:59.000000Z")
                .pointExpiresInDays(7574)
                .bearPointAccount("eda3cfd8-5227-4ac6-939b-581886060b57")
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
