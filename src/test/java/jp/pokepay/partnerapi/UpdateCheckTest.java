// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.UpdateCheck;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class UpdateCheckTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new UpdateCheck(
            "1d5b7de2-f57d-4ae9-8c18-f9223b2d7672"
        );
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new UpdateCheck(
            "1d5b7de2-f57d-4ae9-8c18-f9223b2d7672"
        )
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new UpdateCheck(
            "1d5b7de2-f57d-4ae9-8c18-f9223b2d7672"
        )
                .bearPointAccount("21f8e3fc-6af2-4792-9ee8-fd217c7d00d0")
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new UpdateCheck(
            "1d5b7de2-f57d-4ae9-8c18-f9223b2d7672"
        )
                .pointExpiresInDays(8340)
                .bearPointAccount("652852f3-4049-489c-bceb-c45fbe3ae2c6")
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new UpdateCheck(
            "1d5b7de2-f57d-4ae9-8c18-f9223b2d7672"
        )
                .pointExpiresAt("2021-01-27T03:19:48.000000+09:00")
                .pointExpiresInDays(5383)
                .bearPointAccount("fcf71855-7e6b-4d6c-8234-552a9cc7d211")
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new UpdateCheck(
            "1d5b7de2-f57d-4ae9-8c18-f9223b2d7672"
        )
                .expiresAt("2021-04-02T16:50:05.000000+09:00")
                .pointExpiresAt("2022-02-18T14:45:07.000000+09:00")
                .pointExpiresInDays(8990)
                .bearPointAccount("a8d893df-47c8-4b48-9fae-d52fefb068fd")
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new UpdateCheck(
            "1d5b7de2-f57d-4ae9-8c18-f9223b2d7672"
        )
                .usageLimit(7672)
                .expiresAt("2024-05-31T20:53:01.000000+09:00")
                .pointExpiresAt("2023-09-23T02:55:52.000000+09:00")
                .pointExpiresInDays(6814)
                .bearPointAccount("4ea3e9e3-13f1-4630-87c2-4054c6ab2665")
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new UpdateCheck(
            "1d5b7de2-f57d-4ae9-8c18-f9223b2d7672"
        )
                .setOnetime(false)
                .usageLimit(9203)
                .expiresAt("2023-10-22T06:45:21.000000+09:00")
                .pointExpiresAt("2024-02-01T12:11:54.000000+09:00")
                .pointExpiresInDays(7496)
                .bearPointAccount("4743a9a9-6619-47b5-89ec-eefaef2a14e2")
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new UpdateCheck(
            "1d5b7de2-f57d-4ae9-8c18-f9223b2d7672"
        )
                .description("bJi9cbhcEped02aCaJqqxOtmY7jhL6tFjFmd39SblTmITMxK1KxtRWwDPCMWczhp1Thg65FuFAKRpjSSZiQOAJOxBXpM6T5WaKemOeGfCxv7dHUaSPOOoG0GjFVeZZU6kmMlrsGAn2pSLjzi1ZMz0SlNnahslR7VPQNbNrnde6SyoTTdNiSxzg1")
                .setOnetime(true)
                .usageLimit(8510)
                .expiresAt("2024-06-27T08:41:02.000000+09:00")
                .pointExpiresAt("2023-04-14T23:06:25.000000+09:00")
                .pointExpiresInDays(6651)
                .bearPointAccount("cc02e230-0857-4a57-8090-5cee639acf15")
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test9() throws ConnectionError, ProcessingError {
        Request request = new UpdateCheck(
            "1d5b7de2-f57d-4ae9-8c18-f9223b2d7672"
        )
                .pointAmount(5441.0)
                .description("7EmRXbMrEIJ6gez3NihIjT2rpGlkVquigeqjCBJuPCscwXZnbemGmeU2SEEs")
                .setOnetime(true)
                .usageLimit(4465)
                .expiresAt("2020-11-14T12:53:16.000000+09:00")
                .pointExpiresAt("2020-04-29T02:49:58.000000+09:00")
                .pointExpiresInDays(4955)
                .bearPointAccount("983b0226-4e10-4d29-afd7-4182d9467b1e")
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test10() throws ConnectionError, ProcessingError {
        Request request = new UpdateCheck(
            "1d5b7de2-f57d-4ae9-8c18-f9223b2d7672"
        )
                .moneyAmount(2971.0)
                .pointAmount(7996.0)
                .description("tzY0R2Y5HyiLrUKVnS01OUcDPfAb")
                .setOnetime(true)
                .usageLimit(5380)
                .expiresAt("2021-09-28T23:18:35.000000+09:00")
                .pointExpiresAt("2022-06-06T01:50:25.000000+09:00")
                .pointExpiresInDays(6303)
                .bearPointAccount("38957de0-01d4-407c-a714-dc6be2201649")
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
