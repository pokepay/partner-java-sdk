// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.UpdateCheck;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class UpdateCheckTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new UpdateCheck(
            "6e548cbd-2bf3-4141-91f7-23e4fa3cd1f6"
        );
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new UpdateCheck(
            "6e548cbd-2bf3-4141-91f7-23e4fa3cd1f6"
        )
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new UpdateCheck(
            "6e548cbd-2bf3-4141-91f7-23e4fa3cd1f6"
        )
                .bearPointAccount("dd1f6dc2-fda2-4d99-a375-a558053d5596")
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new UpdateCheck(
            "6e548cbd-2bf3-4141-91f7-23e4fa3cd1f6"
        )
                .pointExpiresInDays(6894)
                .bearPointAccount("e67fe789-61ed-4eb0-98ef-56a68901ce25")
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new UpdateCheck(
            "6e548cbd-2bf3-4141-91f7-23e4fa3cd1f6"
        )
                .pointExpiresAt("2015-11-23T20:18:13.000000+09:00")
                .pointExpiresInDays(1727)
                .bearPointAccount("b254ee02-84a8-4959-810b-3bb513ea32b3")
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new UpdateCheck(
            "6e548cbd-2bf3-4141-91f7-23e4fa3cd1f6"
        )
                .expiresAt("2023-10-13T12:11:10.000000+09:00")
                .pointExpiresAt("2023-11-01T10:23:17.000000+09:00")
                .pointExpiresInDays(8580)
                .bearPointAccount("b8937982-cc6b-487d-8fe7-de37b00a2fe8")
                .setDisabled(true);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new UpdateCheck(
            "6e548cbd-2bf3-4141-91f7-23e4fa3cd1f6"
        )
                .usageLimit(4088)
                .expiresAt("2019-09-08T11:33:47.000000+09:00")
                .pointExpiresAt("2017-02-08T17:17:49.000000+09:00")
                .pointExpiresInDays(2159)
                .bearPointAccount("c86e7644-9414-4206-af75-832d335336d6")
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new UpdateCheck(
            "6e548cbd-2bf3-4141-91f7-23e4fa3cd1f6"
        )
                .setOnetime(false)
                .usageLimit(5260)
                .expiresAt("2024-01-28T01:51:17.000000+09:00")
                .pointExpiresAt("2021-02-11T15:52:23.000000+09:00")
                .pointExpiresInDays(134)
                .bearPointAccount("403830c2-b9f7-4638-a634-3d7213a24c75")
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new UpdateCheck(
            "6e548cbd-2bf3-4141-91f7-23e4fa3cd1f6"
        )
                .description("DfBURTRs1aqfnoDvTQhoaceGyZb8WWPHHp")
                .setOnetime(false)
                .usageLimit(9968)
                .expiresAt("2018-01-12T00:10:33.000000+09:00")
                .pointExpiresAt("2025-04-03T00:03:13.000000+09:00")
                .pointExpiresInDays(9183)
                .bearPointAccount("dad6d153-39eb-4d2c-8a3d-ab24366b096a")
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test9() throws ConnectionError, ProcessingError {
        Request request = new UpdateCheck(
            "6e548cbd-2bf3-4141-91f7-23e4fa3cd1f6"
        )
                .pointAmount(3490.0)
                .description("CVwzgzZbVHHWL3YpDL2OGElH19fNEmlCUYZsXdsRFwMX9q8uN2i0LA6NPunNuOgZzXx57OzSXIDH6mozJElzEnG1psfzHM3N0pIWVybu2RS5")
                .setOnetime(false)
                .usageLimit(9584)
                .expiresAt("2024-06-30T08:14:42.000000+09:00")
                .pointExpiresAt("2018-01-26T07:10:13.000000+09:00")
                .pointExpiresInDays(3658)
                .bearPointAccount("9bda40d0-75cf-4bdf-b496-ad9144023b76")
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test10() throws ConnectionError, ProcessingError {
        Request request = new UpdateCheck(
            "6e548cbd-2bf3-4141-91f7-23e4fa3cd1f6"
        )
                .moneyAmount(9325.0)
                .pointAmount(2066.0)
                .description("cF3qzhBGumgKW1qvYVgHTg4G26MoM2pNHDCXhmDRZdRQqIegoHp2fTnLHOWR0YZ0kchPUaEdOgBPlAI50GlBz2aC90cEz2rYAJGlnvjBVZHB1o3OkY8jxtgjoQYyYWPNhdO9CxnGqEEgo4k8xc1Y7wcd")
                .setOnetime(false)
                .usageLimit(2302)
                .expiresAt("2016-02-16T11:44:39.000000+09:00")
                .pointExpiresAt("2019-12-07T20:07:59.000000+09:00")
                .pointExpiresInDays(3412)
                .bearPointAccount("b9dea605-858c-4b1f-82f2-595f231c3f20")
                .setDisabled(false);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
