// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.UpdateCoupon;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class UpdateCouponTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745"
        )
                .discountAmount(4008);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745"
        )
                .discountAmount(1135)
                .name("uqVIJLmWFeGJqYbyf9xqeV9Lg6T4ooRxK5KRr3h8egFMYUCN7QJ0QWlqwtDL88aLfgCd3mseLQBXIUiYpTvNgfaK3PoowpKAx3kfA31wXd04SY1O8gGOF1kRrye61uzm");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745"
        )
                .discountAmount(7874)
                .description("IXdnENFs3jBlwZrD72DB37CRt8PxiPIwClGZ1KOGgE2sj7Hu6WK5M7npguch6s2J670P8hn4WhIeMSn521mnmeh5QEBdCZJtrUa6Fgp7ym0hYqDUAWMYxWfGNC0wV3aBOX1Ig8hROF")
                .name("3MljHGXrpVSkSdQBQzqXHWCk88yAdkNbUUlXp2sT5T809AbvtJaUy0K5oRI2Afv57ns");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745"
        )
                .discountAmount(6739)
                .discountUpperLimit(3768)
                .description("T7iwNl9CKN5yCsDMuuaWg6vjoZFJU5quwxFBXnJ5Eq6GcNPCEVPq46GdIPJm8acYbz4K3IA8JYUILwDYHWq9h3ayYxNgOJ9lz7HMs7r8Mwpfor2g0yfZY1uTlDfXz0uDeov2GaxLjZM7ftEliKPQLWJArPq3tph1c8gKwadNnw5eCqfZdksVLOzbmWJa8YkV10V05hf8WtQGHpv3xPQzPNZMa3cTmTslTDHzq00PkzT3rjRsc")
                .name("SaTD");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745"
        )
                .discountAmount(7708)
                .startsAt("2022-08-05T00:50:13.000000Z")
                .discountUpperLimit(895)
                .description("UxwAJXNLOLDUjAEUO9KUSGzbSRmda66Hxc")
                .name("wf0VsciZqVg9CY4JyxUqm9QYX9eOR0RPX1REGDLSjexe42N6h2JPS");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745"
        )
                .discountAmount(9379)
                .endsAt("2021-12-12T06:52:59.000000Z")
                .startsAt("2023-05-03T02:56:24.000000Z")
                .discountUpperLimit(207)
                .description("z8JwoXWD3OcRqlTHYwOestfQFumGQVfUsw4hfYXr8Tws7k48pGfLa44NJMCeJ8jlsCf1ZGfe6gS6x1DqMOxCGU3f6AMPJnByO8IAY8ZIAKOHAMaB7ZxbhLpAG3vIRMVqbJVgHd")
                .name("hvPKwzwzrbVYcpu84LTKQxDTzMnM7RDpI6DZQTPfIajSBmWzFbVfaL5LT2cPjctfArtA5QzauCKeqrCHL");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745"
        )
                .discountAmount(7503)
                .displayStartsAt("2023-03-18T23:40:54.000000Z")
                .endsAt("2023-05-25T04:41:06.000000Z")
                .startsAt("2023-01-02T01:11:18.000000Z")
                .discountUpperLimit(5761)
                .description("c1NzcpMx2l8O1vhN74ziDPGC2ST6zTd6xVdSlQkj4Z4gR5YjMfLJAECo2gNDDCrV3PxozvlpngWpA6xbZMfc0uwppINu3aeeMh7MwqqZDhOobPpK6TParuulg11gUrgWq51AuUounyHv57rDbvmuL7BqYd28Ylq4PTRllx603bU9utxl")
                .name("E1LKaCgZVizYnvZve6TUWFWHy2b5Vs5gPuvHuA5HWIqhNUoMi9wNIaJyI2pADs2B4yB1GZTk4B1PKHR2EWhPZSvV8nScTvJ4VHpUajLm");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745"
        )
                .discountAmount(958)
                .displayEndsAt("2023-02-24T03:06:35.000000Z")
                .displayStartsAt("2020-05-07T20:47:00.000000Z")
                .endsAt("2022-09-30T23:08:11.000000Z")
                .startsAt("2020-12-27T04:31:53.000000Z")
                .discountUpperLimit(8069)
                .description("cCimPwC97LHWaSOnICBJimGKiopraV9Fu47WiDgn9VJjED17kjNr295nMRl2EDxJjIsLyTAA5MEWhdNFDbX7fss0ltmaJnxslaUL7RrxqbBxY5tCbxb35FzAfmkd3pduwUBkrqrvJ3GVs6GsJ8XiLApVwNY6")
                .name("zjKIEdqTZCuDots6oOpUnX5paeprWtPSGZr");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745"
        )
                .discountAmount(1595)
                .setDisabled(false)
                .displayEndsAt("2022-07-31T04:45:49.000000Z")
                .displayStartsAt("2021-06-01T04:13:09.000000Z")
                .endsAt("2023-11-16T22:56:36.000000Z")
                .startsAt("2022-09-30T10:26:58.000000Z")
                .discountUpperLimit(5229)
                .description("NU3vFgZ69vwXIbJ7yB2uIbdTxo63tcXPzmao0EWnRVCjlgZcfxXnQfXvfoocz3td7BZN78kqzJ0Us2fGrJyLKsRHFPpRHSTTSFxnvRwj3Oa3urFP8R4bhOdaBwGLVVHwtN")
                .name("AFb20DhVqIxWOmhxrSYnMI0dEOIqOFLqn2ZuLk5GF2FUuyDVUpZn");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test9() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745"
        )
                .discountAmount(4441)
                .setHidden(false)
                .setDisabled(false)
                .displayEndsAt("2021-10-13T10:15:58.000000Z")
                .displayStartsAt("2023-10-05T04:37:14.000000Z")
                .endsAt("2020-06-23T13:16:45.000000Z")
                .startsAt("2022-10-30T00:24:12.000000Z")
                .discountUpperLimit(6683)
                .description("zM0cPoxe0DGq4e7wXOOVc8GIqj26qcMQ423OrAYOyd21L95eAaG4JW0HS70OJOUKjKLeGCgLyc3XcFOYpAAHYYK9z73uxDP2ictixYSW0AnlJyQ4ogjQgbj8PRfNm4vkTJ8joyTSHmI2see5qGgNKlkv5vEcEoMjbT4VP8lZF0AhpuShoXCly79fXYfw5L")
                .name("wfbe5dxC9nFb6EnR37XI7b090WiBtRh0avWom7iSFIO4uZdtJGn6HWLBVq7JKL8IsIw17O");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test10() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745"
        )
                .discountAmount(6583)
                .setPublic(false)
                .setHidden(false)
                .setDisabled(false)
                .displayEndsAt("2021-05-26T05:29:54.000000Z")
                .displayStartsAt("2021-04-09T21:59:10.000000Z")
                .endsAt("2024-01-28T22:17:32.000000Z")
                .startsAt("2022-06-04T00:21:11.000000Z")
                .discountUpperLimit(8981)
                .description("RgUy7vFea5WeBAkgIciVnQYB9t75iPCouDaOPQZR4UpdKmspN8b2gkMcSPrmt0hjIJu43wB7scWlYirrj6XmXYoqVEvKvw3AdEs")
                .name("5hGDLuaSpYl1TGEiugglxJJBGt0dcPbtQc4uS");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test11() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745"
        )
                .discountAmount(1259)
                .code("6uS")
                .setPublic(true)
                .setHidden(true)
                .setDisabled(false)
                .displayEndsAt("2021-12-07T18:56:24.000000Z")
                .displayStartsAt("2022-12-01T12:21:10.000000Z")
                .endsAt("2021-04-13T17:22:08.000000Z")
                .startsAt("2023-12-10T04:38:42.000000Z")
                .discountUpperLimit(4190)
                .description("x7fOEoFSQiDYpTTgrywklVD4mELe2edQd6Mwu12")
                .name("UeT7ThuLLgJ9PT2");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test12() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745"
        )
                .discountAmount(8843)
                .usageLimit(6677)
                .code("kxOOzhTp")
                .setPublic(true)
                .setHidden(true)
                .setDisabled(true)
                .displayEndsAt("2021-08-11T18:49:09.000000Z")
                .displayStartsAt("2022-05-10T06:49:18.000000Z")
                .endsAt("2023-07-24T01:52:21.000000Z")
                .startsAt("2020-02-14T14:38:53.000000Z")
                .discountUpperLimit(4031)
                .description("QXea3eTBlP1za1n7IcWMlrV1ey0F13qC7iArhwm76E35ql4XfUae14Wbt93t26")
                .name("LiQAMBYx057AoBwLeryNecuIhUBXRQRCvkSHsmDbMU34aVyZLcCNEj4KngWm");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test13() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745"
        )
                .discountAmount(6224)
                .minAmount(6137)
                .usageLimit(9527)
                .code("E")
                .setPublic(true)
                .setHidden(false)
                .setDisabled(false)
                .displayEndsAt("2020-10-22T16:12:16.000000Z")
                .displayStartsAt("2022-03-14T00:38:05.000000Z")
                .endsAt("2020-03-22T09:11:10.000000Z")
                .startsAt("2020-05-06T07:45:07.000000Z")
                .discountUpperLimit(138)
                .description("WruIWs4TAGfq9ue8TvZwYbMntyIPzqAGarjc22UJafoQs8oM8ozozHv7pSUjn2vqwiu14DVHGOrsaIKsQ11QA0zf5QFhEcKjjKztGRK6K9KAPEUIedziHih60rhQZO78Ysa8FmX0ccAumcgyg4cqEaxSmm8kmOYz3")
                .name("7PEcPNNiKvN5Ht8RLA9ghACTJRDSXhb0oN");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test14() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745"
        )
                .discountAmount(6126)
                .setShopSpecified(true)
                .minAmount(4663)
                .usageLimit(1724)
                .code("uTKN6")
                .setPublic(false)
                .setHidden(false)
                .setDisabled(false)
                .displayEndsAt("2022-07-06T08:44:01.000000Z")
                .displayStartsAt("2022-03-18T15:54:29.000000Z")
                .endsAt("2021-11-19T12:04:56.000000Z")
                .startsAt("2022-11-23T13:55:03.000000Z")
                .discountUpperLimit(9195)
                .description("N0paU2HC64wcGrUcdcRO2Sa3zE9qA6Jl")
                .name("qvTos7SrIAldP5taDahvoqIf3H7H22Xm9qyh");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test15() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745"
        )
                .discountAmount(768)
                .availableShopIds(new String[]{"8cbd798b-b6f2-4acb-897a-fa8c6e0d0b0c","1790102e-90e7-456c-8a8f-158ba23481c5"})
                .setShopSpecified(false)
                .minAmount(6717)
                .usageLimit(676)
                .code("hNrgMO")
                .setPublic(false)
                .setHidden(false)
                .setDisabled(false)
                .displayEndsAt("2021-10-28T22:30:43.000000Z")
                .displayStartsAt("2021-11-09T17:41:59.000000Z")
                .endsAt("2023-09-27T15:53:22.000000Z")
                .startsAt("2023-11-14T18:53:05.000000Z")
                .discountUpperLimit(8247)
                .description("ccOw2h3Fa222nHBaN6510bAHdVRRVqtJb7GLA5jeThW5qr3yEd4dXuL0rYsAz43Mmx6hv0Ug3INp6i2B7flubMg8I3PFzXHSWu8scihqWwWKLIsgxoxZCQ2441blMtSOZHoWLqvzthoXVcLebdhYmokN15vn0WBXfGwW2mMW1f9b8gICLPqq")
                .name("ow4qG8fKRsijZT9ACbFhSbUnXdQpmPpnHFqiJvOHOlQFLdxOm16oejI9dat1CLgQoRlzuyxB2QGrCPmQ415Et2SGqgy7Wowcm3CmFfxpyCPpsziVloAtynLsPgO9CFz");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test16() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745"
        )
                .discountAmount(8248)
                .storageId("be758937-d390-446b-a45e-77c961c6259b")
                .availableShopIds(new String[]{"9179cf1e-5003-489d-adcf-a8cc361157d7","47cc4ce0-7110-4a3a-b96e-291bd9d094da","4f9fd637-e62e-4c20-b39c-d354a19fdf27","77a2b0a4-331b-467f-80f1-6c9c9cecbaa3","af4389fb-eb3b-4753-8ca0-486b2476e04f","d460c0d7-7701-4d8f-97c4-824cb158285f","5b6cfd1f-1eda-4f6d-a9a4-060511452d79","bc7eed84-2fd9-493b-9934-0497211073f1","85263c2a-4d53-4344-8363-64e5de6c85b1"})
                .setShopSpecified(true)
                .minAmount(1448)
                .usageLimit(7713)
                .code("GC4wPtL")
                .setPublic(false)
                .setHidden(true)
                .setDisabled(true)
                .displayEndsAt("2022-12-14T09:31:57.000000Z")
                .displayStartsAt("2021-04-01T23:30:59.000000Z")
                .endsAt("2020-04-05T00:04:54.000000Z")
                .startsAt("2023-06-17T02:45:47.000000Z")
                .discountUpperLimit(9583)
                .description("4mk88yYjRj6ppJLnlec8JObXuRsPVeFJcsOCB9dZH0k0NKC7bYH6IQhPn4X")
                .name("u22Okprhq");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test17() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745"
        )
                .discountAmount(1256)
                .discountPercentage(8182.0);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test18() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745"
        )
                .discountAmount(2447)
                .discountPercentage(3329.0)
                .name("MEMbpSnLulsX8V7SnJwOTksCozm6o1k9oepRB7yq0Oa1SzxnfEtxAkEm7sWqtjzoUhtWxAFotkA3GwpJ6pUWjvsxF7sC23pAVbXivHZtrIAyP3B3n");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test19() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745"
        )
                .discountAmount(941)
                .discountPercentage(9649.0)
                .description("m451mPU8dTD7bnX1r8l3hCw6Snm9mfcT5cLUh34lWYk1AXf6CZiEJmgnIHDOUd6m8hlpqS572AEF2Ig4ikrPHEQKtfhnULfkSB8hVVRhZgs0ShDA1T4kxBhv1AOy0nxwzXXsopchwGQjGjB8p2sVlc1F7AjO7bJtO7Dnnc0m9rCGM5hvlyZ4zlX8tOl1gapEcvHpCxJHTvEJuFQdQk10O1BigovU99")
                .name("ROsTZK65zQOhilbvDcAlCpIpPo9knGn");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test20() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745"
        )
                .discountAmount(3169)
                .discountPercentage(4018.0)
                .discountUpperLimit(497)
                .description("U0GmaUmeizgJ6BwqETnaq5BggeTTsTdXg3gtXl8b4nZOZsr1VPBj7ivp8ue6C3vcL7BXf3IHjK0XiCg0zcQRlonr1N4IocuKCcZ1hdXCgyALhLsPZ4xEZBaL9gPoE5PnOxSYIBQUZMwQEKQp536z2")
                .name("YA1sx132uYplZstFpjBFQy9bZmz7mGiFtXmRSje5IwYSIqDRQ8l1f3l8HQkQuvmK2Ptks2ZcRpli1kcYUjdKenDW");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test21() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745"
        )
                .discountAmount(1258)
                .discountPercentage(9313.0)
                .startsAt("2023-09-18T08:13:54.000000Z")
                .discountUpperLimit(2543)
                .description("z7aBykLG1RzGMmx1hSkje9X0kmePd8GXi22Jw1idAxcQ9RQcA93jzkpVE1oN8GZytUXsp14vePeJl09h1SmSe7z9uXJe9aRBNGFiXbom9IOMRvPLFSPNSfRkv8Et2jCeNHdXqCXUrpWRIEnGneOjH6PTi68jf1Ll0O4t8yu2YY3amcbZRFCGWEFlMAhGqMbfoqHBJlao6arWtW2Kf2i4IAcwQjuFWx2kNI9qHm3gWQVGMbEKu4Af")
                .name("uwweTMrw4f2dzO7lqy4kEKJ1Q7c8C0SZpOWKljojyXNatscwZjWuBesyFuc4sWKFJnLD7m3pQpjDhF5ByJUZoKtqULctVH6");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test22() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745"
        )
                .discountAmount(5867)
                .discountPercentage(8761.0)
                .endsAt("2023-03-09T03:28:35.000000Z")
                .startsAt("2023-07-12T16:09:38.000000Z")
                .discountUpperLimit(1992)
                .description("dXfv4mxi0ybLSzTGhHvgOYEOxJ03xV3nSGPvtC19a5RpyBdhfDtmpMgxIW5ljI6yfgW8zOoaul3ISoLlGYqCoXoGAustVKiyGKg6I2c4vjJ0uuFNk5xEatUCGYnUIhqAnDQImUocNLmlkEs1s3oajWUDkbVb94dhcQmTjATi4FvTByqrSIzi26MGgpQ9D")
                .name("PsTX2x6llLqyqxLBzmQKSHklP2GNjfKFk3xSPN2EauZcekm4uUHwCvLyAybYYI1PTnYt6AX3ZMra");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test23() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745"
        )
                .discountAmount(258)
                .discountPercentage(8455.0)
                .displayStartsAt("2021-05-03T01:55:17.000000Z")
                .endsAt("2021-12-05T03:40:10.000000Z")
                .startsAt("2020-03-07T23:33:30.000000Z")
                .discountUpperLimit(736)
                .description("iLHRNzuSt")
                .name("ZHp5MvhzfbMCo9qyaARxtZqgB5ft0k4jfS4r5kfrLJkZytv5gO2QqNTMBVQz08laq2biu");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test24() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745"
        )
                .discountAmount(2927)
                .discountPercentage(3704.0)
                .displayEndsAt("2022-07-20T19:37:37.000000Z")
                .displayStartsAt("2021-07-14T19:17:22.000000Z")
                .endsAt("2022-01-11T20:44:45.000000Z")
                .startsAt("2020-08-06T01:38:14.000000Z")
                .discountUpperLimit(1499)
                .description("aoCNpyYWsiSLe8XgZiLcB9lkuwUmt5gGSX2SbBRPaYeWynmUQkGZMrt25VWYHR7PmuYOuy85eAINi4DCh9E1piomvY0y0iLigYmahsEfLajE38CSizXaYXCbSM5b6xxCi9aS7pUn8sHDE4F3kcf0hrQ4a")
                .name("rPgThS8KkZCOZQxeSP2z9qxNvFrLUebeM3qu8knhRZPaevJazOcU");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test25() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745"
        )
                .discountAmount(8821)
                .discountPercentage(1990.0)
                .setDisabled(false)
                .displayEndsAt("2020-02-28T03:47:20.000000Z")
                .displayStartsAt("2023-08-07T02:47:43.000000Z")
                .endsAt("2021-01-22T02:10:35.000000Z")
                .startsAt("2022-09-22T22:47:56.000000Z")
                .discountUpperLimit(8028)
                .description("gIb0heOl2hQPfOiPoRxRiCop5Q0A9gBKU33EhyGU9Sc7TWphUCFQOlhJCzSIu3L4oB0QKjjVXdg6wCnP4F0PUy8JyZq3ofPUU0rY2rRd10bnDEPKoSGRnM40Adb2lsHFBNfL0ieognilvSR4pMoCwkxpSpqKLDrvgRvBVvAYQP0NP5o8oIbQ6bcvTH9KRHlq0wqM01LRxPcYJN00R6J1knyJeLDqePaGS57qQUn9Qotexnhe")
                .name("cBro7jHBJHSTWFK0aJRYTf");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test26() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745"
        )
                .discountAmount(3205)
                .discountPercentage(3175.0)
                .setHidden(false)
                .setDisabled(true)
                .displayEndsAt("2022-03-04T23:59:14.000000Z")
                .displayStartsAt("2020-07-29T22:26:48.000000Z")
                .endsAt("2020-07-31T21:06:41.000000Z")
                .startsAt("2020-11-29T09:17:03.000000Z")
                .discountUpperLimit(2026)
                .description("M6sQRgc1VEyXHMXBj8otEAcFy5ooXoXuzlRpCyCoZoaTfbTmVX0XqqL2DDCdN")
                .name("Gv9QaNMmxX2S2fPh6fy135I5");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test27() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745"
        )
                .discountAmount(452)
                .discountPercentage(5642.0)
                .setPublic(false)
                .setHidden(false)
                .setDisabled(true)
                .displayEndsAt("2024-01-12T08:43:51.000000Z")
                .displayStartsAt("2022-04-28T20:20:36.000000Z")
                .endsAt("2023-10-08T03:05:33.000000Z")
                .startsAt("2021-05-12T19:30:15.000000Z")
                .discountUpperLimit(4327)
                .description("nvkdWrHaspAw5Vcp7CE78JSe44PvWgrDoffEic8syvxPXUni2oM8QHA7lWY5GLHqITj0UgJwxmfaF0gGfgNlG67XOfGi887nNv1eh26ZZWkeJQym7n7CGmjd25iFSdny2rQSPU5tCjVy8COfDZrZRHs0hjVGtY7fDHExM6iUcBW9LDUejJe4laTFkcJAyP9v3lR5fJ1SCFuFJVqCc62CsLVYKPyOwySSjaFxy00I")
                .name("CXmzsObY8JjUm176PqMxSejYJwKQkQhcSsOlDNZZsSWHBkBrsiXhCnZzamORmWcssL2FF3HA");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test28() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745"
        )
                .discountAmount(8954)
                .discountPercentage(8168.0)
                .code("t")
                .setPublic(true)
                .setHidden(false)
                .setDisabled(false)
                .displayEndsAt("2023-03-04T05:42:16.000000Z")
                .displayStartsAt("2023-10-11T08:06:13.000000Z")
                .endsAt("2020-01-07T12:18:39.000000Z")
                .startsAt("2020-10-10T16:37:18.000000Z")
                .discountUpperLimit(9006)
                .description("7MooUueVWo8T9dRNvfu3qkwBDNVzugQpgEVipsMl1opS6XVL1U8vfTPgZQoGXLb8hT5vzbbFysLVW03Q8sgkwbt7bycdIa6s2OiS448zYYuSerVgt5xpThqkxWuN4OkYmUnkAFHrW518DEhvGfJFh")
                .name("LPIWgGXu2FRRBCtapsc2OJEtIYHTkPMCnHWRhGK3T2O4zTKZrpJNYtglnu99Onqaf5i");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test29() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745"
        )
                .discountAmount(7953)
                .discountPercentage(7721.0)
                .usageLimit(1600)
                .code("t4HXxpMz5")
                .setPublic(true)
                .setHidden(true)
                .setDisabled(false)
                .displayEndsAt("2020-08-30T01:35:35.000000Z")
                .displayStartsAt("2020-07-06T20:29:39.000000Z")
                .endsAt("2021-09-28T07:48:36.000000Z")
                .startsAt("2021-02-26T04:02:14.000000Z")
                .discountUpperLimit(3530)
                .description("OMXlccrSM4NeRkShSKYnhr8JJ6rqJ58uKWhjJEVfg4kmmGr3fEZnBlmzkrtoyKm38BDyuj1U15iB0VVURHNCTBSkvCAJURQ0xc8v3XGoxNYBzQF")
                .name("6RRnLKM2vajHzuhk8mM7y90MUBMqpZFx6CyPOvMtoUIDYTTb9YL");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test30() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745"
        )
                .discountAmount(2430)
                .discountPercentage(8124.0)
                .minAmount(3838)
                .usageLimit(1877)
                .code("ZY6")
                .setPublic(true)
                .setHidden(false)
                .setDisabled(false)
                .displayEndsAt("2021-05-02T06:05:58.000000Z")
                .displayStartsAt("2020-11-14T02:18:02.000000Z")
                .endsAt("2020-09-02T12:17:39.000000Z")
                .startsAt("2023-11-15T17:09:17.000000Z")
                .discountUpperLimit(8317)
                .description("6c5lAiaH7ksthq2qt1fISbJLQ2IGy7A4O5EuFDi3ep7E8KTwqzGZlqsrJTtHeL1jl3TaroJ97KS7PIYmqHtFEvZxOLgNEFPzTNAeMR2CvVgTRCY2rEPprVjpNeaYJXDFnN5l443TmOvQLPfQxkSjhKrHXePF1aNsQcGEPe2hgvk3yuDeTC8XzXR9jncya31KgghsgYe3TbLJN21a8hZtm5so8Mz8sE9uDmHdcukVhdalQqRPyTvG2tPeRbQcNOD")
                .name("a3IhebkRxi8kuGoSk8mmCPAG5TaOSJrFwT6IMSTQQD3aZSLuV5KvsCMKR5EbTWV4WWsRyRXg");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test31() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745"
        )
                .discountAmount(5165)
                .discountPercentage(8219.0)
                .setShopSpecified(false)
                .minAmount(5037)
                .usageLimit(3520)
                .code("g4CYuzS")
                .setPublic(false)
                .setHidden(true)
                .setDisabled(true)
                .displayEndsAt("2021-09-18T18:13:43.000000Z")
                .displayStartsAt("2022-03-01T00:57:56.000000Z")
                .endsAt("2020-03-04T07:03:16.000000Z")
                .startsAt("2022-10-12T08:21:07.000000Z")
                .discountUpperLimit(8846)
                .description("tkoPc7UXRyRiV8Pax53IDmwuQOCWjbIPmFGWkh7DMCSqp4SWi3zPKlO0ubMaaWt2sfRwBothNvTY3vFr4ELRXyBW70oqJ1JP1EYwzYF5YE8jQgUzmyBkd9RsSiJlXzLN5312aQsa3khCQuI0KxC45PIbfMDQsr0")
                .name("TvhXVGg9hnQlyenzuwrO3gGQmGe09eXlKtPgqSA0ERaGz46vIiA4hbe1yI3CGp5lj6m5fgOCupwcIPxBzhbkfELKrUPd9GpW6Q92PXWpLmGFM1Prn");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test32() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745"
        )
                .discountAmount(8295)
                .discountPercentage(7425.0)
                .availableShopIds(new String[]{"9f5df334-20c0-4725-9a5f-8daeb737ecf1","780583b6-fef2-46ea-a160-9046d15644cb","5e3cd67e-178b-4ace-94c8-ae933b155491","dd704355-efd0-446a-9f38-61cfe7e5c261"})
                .setShopSpecified(true)
                .minAmount(2605)
                .usageLimit(9676)
                .code("D3inc4")
                .setPublic(true)
                .setHidden(false)
                .setDisabled(false)
                .displayEndsAt("2021-08-18T05:01:39.000000Z")
                .displayStartsAt("2020-06-19T09:03:27.000000Z")
                .endsAt("2020-02-11T14:16:51.000000Z")
                .startsAt("2023-08-09T09:22:31.000000Z")
                .discountUpperLimit(508)
                .description("p4s7jMjS5PtJzYsdA5qhl1QGqEwjgkrGn0uAn0iqI2b5rxtzGOZhKJMKwzvYsbBzTdo6bpAqcWNJrNTsv2Llex1ejGQ2ugzGxu81Sx50Yf2M71M8zENOSGlzUlDTz33P2rJ14YHcAJKWHCf11oIN1lhxfCtQoWt3KCnkWzy38cC0E7gsSEITDei3yOkB642y5M6ZGKLNmOSXPLkVgGHidiNxSMbU65iFGAAyuGpPep5Ml")
                .name("LDDmy5H5WNxLWXFOkEFZiHMkNkDC4XjA");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test33() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745"
        )
                .discountAmount(1664)
                .discountPercentage(7168.0)
                .storageId("41377912-9f99-4b83-aea8-dedcb4645ace")
                .availableShopIds(new String[]{"548de50d-4dd0-481b-b954-6a98ef7f3761","414931f3-20a7-4cf1-b149-cc2caa3f61c6","e94e7191-01e5-4e78-8af8-9919c1e50648","aa68976f-2da4-46cf-bd73-a7147a409559","5ab17d17-8533-4ad8-932f-a7ed13f41ce6","8b3fff53-088f-412b-834d-e0cddb9a8ddb","33cdbec0-a8c9-4d07-b0dc-35059caf39e8","6a024150-328a-49fb-bc49-f9cf0c989163"})
                .setShopSpecified(true)
                .minAmount(1904)
                .usageLimit(6823)
                .code("kBjff")
                .setPublic(true)
                .setHidden(true)
                .setDisabled(false)
                .displayEndsAt("2021-01-16T23:01:45.000000Z")
                .displayStartsAt("2023-09-13T23:58:06.000000Z")
                .endsAt("2021-08-22T22:44:37.000000Z")
                .startsAt("2022-02-13T19:16:31.000000Z")
                .discountUpperLimit(7621)
                .description("4zrJepcLNjePvmbsJ6aAodX3lOsSzeTfXuUhrzyKZN2IpvZDbUGNbf92zGejiy7b3srgm7LVnhxTyAZfZDkQ2r2xXuIalmcupP8PaFubqXmo0h47ayHi8sXxsnC42wCpyAiBnUBLAV97YftKTMpHhWMUK3SCmPb9BXoLZ7wKHtX23HwTLkUG7zxtQPL0ebUOhv3B3t2DzpE")
                .name("8r");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test34() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745"
        )
                .discountPercentage(6177.0);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test35() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745"
        )
                .discountPercentage(4453.0)
                .name("7vFyo7eM4dNHW25nKJYDvzM004QSYdkecoFJzr3brOZ5f3RQvkhtySJKYRUQ3NzIgBoxko0Q38");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test36() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745"
        )
                .discountPercentage(7286.0)
                .description("iglT3j7uK9FEO8wpTMbUo34OhjcbIFy00bHfPtADraHJBywFUVQhJIvCWpCXLp2gUnx8oHUCw9IDU8v5tebk72bnq5V1PYuyQsrCeZvlknHwyCYeoTGD6IVelM1xkQHIURZCUVG9E4BcH9vh8Qcd9Qr1jGxJh75seT2MlMasdJCSgZ4n")
                .name("16A08HMuzRKVjoY87iExdEHTNDtgEpdMlXJAKinvVKW5jNBic0lbP5i9pPDb3qItRRs3FY6lAlrydgPmYNQmdCCSHSb7PeqbGNNyGMxdwCiRwJp");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test37() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745"
        )
                .discountPercentage(2261.0)
                .discountUpperLimit(5314)
                .description("S7wM2sjFT50Pr6H3Lr5Vqadi7ItSc4oUdi9EYp8oXZ4d1DUqCUDmWqMmM9IYmurAkMd4wDsAO01hvmpIXnG4Vdq7gNAtqrqKm6uKQNQH3PDcRwUCecSBjOParYUfATbiJrkxUEwT3M91XjHrTG7fMCl81IJPQuSHXTmEReE1YV9ebnUBpzD7d9DsGnOvPtZOQ7wRQgMzlEQYhb78oA0LE9nGzso")
                .name("IqSCZEncCQxjIhrUeBMFsGSoFMs14cvovqZ6GQpcxkL1iWim0Xpy9XRR4FHqayBd9Y6");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test38() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745"
        )
                .discountPercentage(3822.0)
                .startsAt("2023-10-27T14:23:58.000000Z")
                .discountUpperLimit(9568)
                .description("DnCaj1IshUK5sOcLMoSdluvLDw0rIOalhSCHrt5J1YKxmhpIQaAHuF1XqBsQEc2YHzb0v51JNexx20BlobdlTY6n3LbK6Vu4m4")
                .name("hE7PkEzPYVXfzwtjxI8n9Z0CQKMUdsLKbKLcaV6nH18WcZidvZ55mAgOE16AnmYbzCLHYWconVaiJFwoOHJhs1D1kk2Z65xpUZ28FCmVx3QLXn5K0uj");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test39() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745"
        )
                .discountPercentage(4838.0)
                .endsAt("2021-10-29T01:08:59.000000Z")
                .startsAt("2022-05-26T05:56:27.000000Z")
                .discountUpperLimit(7508)
                .description("EebumDwnUvtTuwE1P6w3jvuc6WVynWZlMwTGtLKHNv0GHMA8YNVctqn0HylBE")
                .name("aWFtKmGqTMRGGhLK4md8CvDRXJmyMUq3nONdNUldEzZzYqTFGHLldYwHPZ5GyoY");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test40() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745"
        )
                .discountPercentage(6233.0)
                .displayStartsAt("2021-08-19T13:32:54.000000Z")
                .endsAt("2021-02-17T07:03:04.000000Z")
                .startsAt("2022-04-21T23:18:59.000000Z")
                .discountUpperLimit(5351)
                .description("PK3Dchqik562nQJ7JN9nEMDfH9ZULXMKOjFu2fGiShoySflnRPKvTH4Qb4HK1DE5zpHipftSBuuUyajKD4UG1MO97nrik73QyiaNKms0iFYGrWxxlKwOlCibtq2e0nqtXLNITG9Gffmmox8hwqx5x7fQZGPMXFo6oIvZGxUJAAeHeUyg78eCpqwfbVaGI8MUg6pkTJeF4LA5VGWml")
                .name("55tLRhXfPthFrTbvP80JDs4TLAvvWwguBec41EmwzzFrgc709a7P9KtTHr3zG8NnPjRfIRrqy3FohrRi");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test41() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745"
        )
                .discountPercentage(2204.0)
                .displayEndsAt("2022-02-20T22:32:39.000000Z")
                .displayStartsAt("2021-10-01T23:48:24.000000Z")
                .endsAt("2023-06-06T08:40:02.000000Z")
                .startsAt("2023-07-15T08:29:26.000000Z")
                .discountUpperLimit(924)
                .description("tN77E9sKP2LWTHQkvbYQTkmfSmGSFmTTeLGAy7h6m0YyagUC0Ij3N9K7EVH4f0IDf80jI5hMMqGagepFcb0C3pMehBLw9uhZslxpk65zsLMOaWLvqiZty5Zp232IvDDPPtMusem1WSPOdAkWLCHhP")
                .name("7q7jyjEo8V3Di9DtzhzAGKUtsDdhPal5eEvQkTNVI1DbDv2ICSa1fLqeRzw");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test42() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745"
        )
                .discountPercentage(9497.0)
                .setDisabled(true)
                .displayEndsAt("2022-05-26T11:53:50.000000Z")
                .displayStartsAt("2023-03-05T10:35:52.000000Z")
                .endsAt("2021-10-31T13:19:42.000000Z")
                .startsAt("2021-05-09T08:15:36.000000Z")
                .discountUpperLimit(3285)
                .description("Hy7seU6TPp7YTcvCbmuWQvyjmdKhWFzroFJfg0zCih9qHu842U5SnXNqipKVsIIUjVYx3ZiMVPZEq0xgguEtAXJ6WozfUGo1oVRA1PV2JD5SjzUvS2Jlq6P89tC2Mi1PRe6ex8zQnoMXPxIs0d6X24reGHeQvAPqGMsA1rgfPu4olvC1KDDE1G2mG")
                .name("U9YeDH");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test43() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745"
        )
                .discountPercentage(9141.0)
                .setHidden(true)
                .setDisabled(true)
                .displayEndsAt("2022-02-08T23:04:25.000000Z")
                .displayStartsAt("2023-07-04T15:47:08.000000Z")
                .endsAt("2021-05-02T16:53:33.000000Z")
                .startsAt("2021-10-30T23:58:56.000000Z")
                .discountUpperLimit(6974)
                .description("jz5v4HW6eqkSknjWS4aW80Xp5YCo9TXEMx6Q3N4lydCpBzThmgOIjIatpE7508LaYMNkxpSQqkfWLu8WbqqwjfwNPVeBo88egFulBO0tWJ93Y52C590AS7UiB0DiDGREmImyJDbbC2wEGBfcAGc0EsTxqnb80BRFYcLTC4xCABLekowD1pN0MSUSSu62wEl3iPUkIv4a2NsBAg7OoWmbOWXvcqkH6OCG8bjnFs6Wxag7kVTYLZtj")
                .name("qA6blCNXCxB23NKDv");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test44() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745"
        )
                .discountPercentage(8485.0)
                .setPublic(false)
                .setHidden(false)
                .setDisabled(true)
                .displayEndsAt("2021-12-01T04:54:19.000000Z")
                .displayStartsAt("2023-08-26T06:04:20.000000Z")
                .endsAt("2023-11-01T17:05:06.000000Z")
                .startsAt("2021-12-03T18:52:53.000000Z")
                .discountUpperLimit(4843)
                .description("6rCZ5MRu3n3kWR611LhXRF1WjDXemYssWVQAa0S9OWEqIPoWhsZ81p0D8THD4dpuhxNvhxjPfdLCMpGSOhV764tKT9oHgjnPne51YZOU0zGq4PpZBc0rJPOstD7C9IM7suB5w40dZFTsuKZGsFElmQpA4RSTaTlLaqlkU49OXmcM1eYLCIvDzYzwAtEksQWSl6Am3gCBrhM35EfmrtOFWMml5EKRiDsWg9ZcujQMFm")
                .name("4vZ2HzNm8wdK6sB9HsuClaKx3AfzVa9lboQsNDBH1uzKMqlEF94aThPURq2Q4ZM2ZH2d8EggWOOiiO67HWQCePWkLnY7y5P2vTc");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test45() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745"
        )
                .discountPercentage(9898.0)
                .code("DF85U")
                .setPublic(true)
                .setHidden(false)
                .setDisabled(false)
                .displayEndsAt("2020-10-30T12:50:32.000000Z")
                .displayStartsAt("2022-07-04T05:18:43.000000Z")
                .endsAt("2020-02-02T16:47:45.000000Z")
                .startsAt("2022-01-04T12:45:48.000000Z")
                .discountUpperLimit(1671)
                .description("RLtjhMxgRT9FEddBtVan5HyW6Uan9MoY")
                .name("beeBKUXDDy014vqgIch5W6XuTL0vlIdvdIMbz7wUi6BXoKUl0tR07369wBiPR32MXZafz3jffpT8lg");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test46() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745"
        )
                .discountPercentage(1949.0)
                .usageLimit(3853)
                .code("ERnFdcWh")
                .setPublic(true)
                .setHidden(false)
                .setDisabled(true)
                .displayEndsAt("2021-03-14T08:37:16.000000Z")
                .displayStartsAt("2022-07-02T22:09:21.000000Z")
                .endsAt("2022-08-04T10:08:23.000000Z")
                .startsAt("2023-01-15T22:21:48.000000Z")
                .discountUpperLimit(4193)
                .description("fJ60D0H2T0aKhnL3FlnAD82QrpYaKuslNraOesyAiawWiyWkSV3bs4OkWhHFx3P67yxFmxWAZtU")
                .name("oiVrIFnb7w6ZClkoqVajvuG5cGcBP5wA9GwSB8bfxMId7hFKERGvYa7vbD1cIywVpXocQ5N98CAVKuKRC5FL");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test47() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745"
        )
                .discountPercentage(6047.0)
                .minAmount(1601)
                .usageLimit(7881)
                .code("iGK")
                .setPublic(true)
                .setHidden(false)
                .setDisabled(false)
                .displayEndsAt("2021-09-03T11:23:53.000000Z")
                .displayStartsAt("2021-10-05T09:36:56.000000Z")
                .endsAt("2022-12-25T05:12:59.000000Z")
                .startsAt("2020-09-24T20:30:53.000000Z")
                .discountUpperLimit(419)
                .description("NBTqLCZ99AjVbK3l31NeAICSoLJdEVZoJB0H5I2jNmYRtpCMs9TezTj3A085y5hWQ3gd")
                .name("DOWFExGORRYNLJdsZ6n3IGoF44i0499bTqwmusaHN4dAo0kcMwrj6lsuth9pSzmqVAxW3BZh2UFG0NdobuyCqKAyF8XBloHn7nUM7l");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test48() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745"
        )
                .discountPercentage(1021.0)
                .setShopSpecified(true)
                .minAmount(2838)
                .usageLimit(5561)
                .code("4bPM")
                .setPublic(true)
                .setHidden(false)
                .setDisabled(true)
                .displayEndsAt("2020-12-20T15:37:32.000000Z")
                .displayStartsAt("2022-08-15T22:41:05.000000Z")
                .endsAt("2020-06-18T05:25:37.000000Z")
                .startsAt("2020-05-03T09:41:11.000000Z")
                .discountUpperLimit(9668)
                .description("wFMXGuPCrmdUDxKggDFfFvOJkxhc8IPvtQD4QxNm6tX3Guvbo2vDNfvQpElqxJKgNyOMeXS2rU")
                .name("oCJ5iHqorIswPc2cBsLEwskU0m8hSr1melepO9LnwIsUcSmvb4GOUqCz9cG");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test49() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745"
        )
                .discountPercentage(4130.0)
                .availableShopIds(new String[]{"1a89a5c9-2ce8-49bc-be06-50fde05e2fec","83bb16d0-bd89-4c74-88b5-253b718fe387","8006550f-e0b2-417a-9037-2c59101d3453","bfb8ba32-12c4-4e28-91a1-12d71c5c5f14","24b4821a-fd75-4ff3-a4d7-3acc8085c863","e2b6cfbc-efcb-4d7b-a5f0-63e43c32a532","044b272d-318f-4ca5-9d50-b8332afa748c","547fc533-38b5-4ace-b6b6-ae923d41adea"})
                .setShopSpecified(true)
                .minAmount(9456)
                .usageLimit(1827)
                .code("C")
                .setPublic(true)
                .setHidden(false)
                .setDisabled(true)
                .displayEndsAt("2022-10-26T23:25:08.000000Z")
                .displayStartsAt("2023-03-14T20:11:39.000000Z")
                .endsAt("2021-04-24T00:56:28.000000Z")
                .startsAt("2022-06-27T03:47:51.000000Z")
                .discountUpperLimit(6153)
                .description("cImjgcPmkAEumRe3ajMg8VGC0KZL7VMaMEGv2NsNRGCHkqW6b190Xf2y")
                .name("eAyBqIIySMiYLD3kq3Znz8pepfEmpSiLZTFdERWScAwFtubDUWmymMiDwFFfcNNLAfTp6G3m2");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test50() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "0141503f-c0ce-43b5-953d-d98d85dd6745"
        )
                .discountPercentage(4510.0)
                .storageId("52c58453-1db1-43ba-b19c-e2df93cfb180")
                .availableShopIds(new String[]{"d1134c1b-6a00-4792-af17-1a44a9e3192e","78c7af69-c6ce-4a91-83b2-975f1be5b054","7fa396b6-4725-41da-b1fb-f303582c5208","4a666b85-f7ce-4fd2-9ec6-2f261f6a5bbe","62360857-9d69-45b9-b8ce-f5caf1e8f6fc","0bd2112d-fff1-4ac8-a976-44908cec9b35","56bd44dd-0854-490e-8983-1c0388d6bc2b","b17913c7-6134-4baf-9d71-1921a14b472d","e21b8593-ef88-4528-9e94-4f41783cef48"})
                .setShopSpecified(true)
                .minAmount(3075)
                .usageLimit(356)
                .code("ob31")
                .setPublic(true)
                .setHidden(false)
                .setDisabled(true)
                .displayEndsAt("2021-05-02T11:04:15.000000Z")
                .displayStartsAt("2020-06-01T05:11:51.000000Z")
                .endsAt("2020-06-12T12:23:35.000000Z")
                .startsAt("2021-10-30T18:42:50.000000Z")
                .discountUpperLimit(7710)
                .description("cTjCHIRk6EOKDYDfh7IyYBfSv2V1UV4oPfCtFaYiWkYeLppJ33CkMXXFMJbGPqbgq29Gzz59vVOvin5VZAtZIBDPoHNl5n64I544K0pgRwqKcwLRpyfhvSp3huvf9ISSZ1V5b6lHxDKXrcl2EVGtJV2Ntce9IqiVZ5m5eyekXLeKtBuImxNnX45R5ZNIieikdp8w9LW")
                .name("lkrqUcz43dBm26Or7FE7oxXwqyeP95WFsrDTZsTHaLMAx4xhJmPNb2Vt3kMgTzAxm3nuCtm4tM4rQ7TMWwQQegAiqW5Gh3EedIVkoAN4R6PBgm1bgbkQVRY8MuhwDyk");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
