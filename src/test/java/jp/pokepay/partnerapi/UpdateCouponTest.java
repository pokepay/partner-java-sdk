// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.UpdateCoupon;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class UpdateCouponTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "3abf157e-cf56-4e85-9938-ee406704c235"
        )
                .discountAmount(2961);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "3abf157e-cf56-4e85-9938-ee406704c235"
        )
                .discountAmount(9381)
                .name("c07YMfhouzr28Onoz94RDDRmcIsmYKA12fqCV60Jpv1mbTWqQ7Dvl8QBADUGOQU5JlHf57A2X");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "3abf157e-cf56-4e85-9938-ee406704c235"
        )
                .discountAmount(2264)
                .description("kHrIKsiM49i53z7TetOcINpWLuRsRrLob1x8MkcnUl6AfUcGJPlHo0XRNC87yFI546odmLuPO9uTd0jR20Tc1qv6QkkLawQuyw0R")
                .name("1yL02Pu8ytjtjYPjgWJ6Oy30lyk3EWtBW6NywbP8eg0YIwj");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "3abf157e-cf56-4e85-9938-ee406704c235"
        )
                .discountAmount(6158)
                .discountUpperLimit(6831)
                .description("vtnTcaoAlvc0SWrr3EYKA2oinFWfBSCTachEf3J0lBj3ynkt8hYzIbafsJwo4sB6nUr9mZLPvUKjxHwngo5GxC4Gn8dGe5WNG9QpBtWcoSy2e0dSoQF1FimIzbDotcKIVGuEmMsGuJQjmsEbbIRWxulYHENBMR70dl0BdQd9v1dkxQfdzSTDCwF99W1kPD7ZIiHuPodYzVJX7oxbatb4QATaG5Z4mif")
                .name("po9vrV694cROCURa7xKi");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "3abf157e-cf56-4e85-9938-ee406704c235"
        )
                .discountAmount(2264)
                .startsAt("2023-01-21T18:34:28.000000+09:00")
                .discountUpperLimit(2946)
                .description("mBXdlaxvjQwehdTx0jBrFrn4uF4VGPedzyWEnLwYa5XGXcGGv3e7ZkIwjXPQbXQbbXEwOFHKN20JBF2RanXrgxS8wpxpLEEBrocch424ga8y5wP9PDc0WHEAgv1kKk6sR7fSJhsFBlo6flotIPgxL6enRCXN68fp0Q2Rs0aXaaZeNmVJ9")
                .name("q1UXj1DYGkec5I5euKrDcIGztEOJbGkfROVGcQtKuxaIj7TqwHgJnHROyPQqiqbq2jvMh1Fq35tsZwo82NgdZ");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "3abf157e-cf56-4e85-9938-ee406704c235"
        )
                .discountAmount(4264)
                .endsAt("2022-06-26T05:36:30.000000+09:00")
                .startsAt("2023-05-31T00:52:16.000000+09:00")
                .discountUpperLimit(3607)
                .description("W8g0C1Ts25e2uSwGwzU7x8mOgRkYlMnwUtQ3T6a8OWpnMeY18XvzgusUmOPTZzb2zj0tKexXtmelcvVZlBuf2aH5K9IamXc026m8lupvhOy7sJU79Zum9Mld633vbYakInlhb5uXR4Mvxm1KYZ8A944sfNOR55iEKfvT54BG5Prw2nTnJXkStPB7v3bUseDzY5oHB0yNfRMnxUyB4Xm")
                .name("Qbjk2Arc7uCLbaGemAlCY1PErAM0gAw9t1GmutlPTd7YQG0KLJmUNm6dreYQpz6Olq7kp26TI0fd83OaCMzT3WijuLc0M7kHkOg1vWrEJuKnhOV3MYcVzCArylV");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "3abf157e-cf56-4e85-9938-ee406704c235"
        )
                .discountAmount(224)
                .displayStartsAt("2023-05-11T14:14:19.000000+09:00")
                .endsAt("2023-08-07T05:29:56.000000+09:00")
                .startsAt("2024-07-18T09:20:39.000000+09:00")
                .discountUpperLimit(9780)
                .description("G76i87yvcZcwNUqV4eAT4kLJ4CN9vGsnvy6YpJEJ75CbydfSqWQYNc3VmD0qq43cWmvOSSOmnIwChcUvfq8FsfZWNEWDqmSomSJpBY0Gkgq1ajq09rT")
                .name("85AYlY1");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "3abf157e-cf56-4e85-9938-ee406704c235"
        )
                .discountAmount(5470)
                .displayEndsAt("2020-01-04T15:34:37.000000+09:00")
                .displayStartsAt("2024-06-11T06:03:05.000000+09:00")
                .endsAt("2022-11-04T09:55:36.000000+09:00")
                .startsAt("2021-07-15T00:00:41.000000+09:00")
                .discountUpperLimit(2859)
                .description("hgruRoXoTIAmzgfNUnCr4cV1EiP63vw7xfDH4gCIjI")
                .name("if3J8pGOnIw");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "3abf157e-cf56-4e85-9938-ee406704c235"
        )
                .discountAmount(7743)
                .setDisabled(true)
                .displayEndsAt("2020-05-11T14:10:28.000000+09:00")
                .displayStartsAt("2020-05-24T04:50:18.000000+09:00")
                .endsAt("2023-03-12T02:46:45.000000+09:00")
                .startsAt("2020-11-14T16:27:32.000000+09:00")
                .discountUpperLimit(9710)
                .description("d1")
                .name("rRLo9eqUVqe9IxrH0w7cD94HNjxRnDjp2UdLCPOzmXD9zw8dncuDlgM5YF9nFeTqUrbFN9PNWOhQhaTHtGawid4oVHRjSYovYVehem");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test9() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "3abf157e-cf56-4e85-9938-ee406704c235"
        )
                .discountAmount(9149)
                .setHidden(true)
                .setDisabled(false)
                .displayEndsAt("2020-07-22T21:57:00.000000+09:00")
                .displayStartsAt("2023-10-30T23:59:00.000000+09:00")
                .endsAt("2020-04-26T03:03:51.000000+09:00")
                .startsAt("2020-10-30T01:03:44.000000+09:00")
                .discountUpperLimit(8478)
                .description("aJIgFVxIj4XzHFcUOPhrawG0XaL7AhLDwP08q3r1DsntKMFE0sMyy1L8mWqxtyVyU5AGCS7cvqf")
                .name("GyMPqqpmoROwClEMXakJoKEDhvAJbCr1qr7");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test10() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "3abf157e-cf56-4e85-9938-ee406704c235"
        )
                .discountAmount(4856)
                .setPublic(false)
                .setHidden(true)
                .setDisabled(false)
                .displayEndsAt("2020-01-22T15:19:15.000000+09:00")
                .displayStartsAt("2023-06-13T11:58:59.000000+09:00")
                .endsAt("2024-03-25T14:21:04.000000+09:00")
                .startsAt("2020-06-19T16:54:55.000000+09:00")
                .discountUpperLimit(870)
                .description("dHwuOYNZEXepIbvKowMIb6qPHaMi6kT6jDtHR")
                .name("18I7tPkYwnsmVqJY0avDL3q35OMHxuTuvgBXMOhgX8fk2KJLvRyVLL8LeSeSzrRcI9gJ9BAOVwWLKc51U2c3La00Ub7jLbsG5rA9UcpNl05NlwWVKzsnaWRg");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test11() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "3abf157e-cf56-4e85-9938-ee406704c235"
        )
                .discountAmount(1461)
                .code("sqc6fxf1UW")
                .setPublic(false)
                .setHidden(true)
                .setDisabled(false)
                .displayEndsAt("2020-01-16T15:17:41.000000+09:00")
                .displayStartsAt("2021-08-16T23:36:26.000000+09:00")
                .endsAt("2022-03-16T02:24:27.000000+09:00")
                .startsAt("2023-04-26T18:36:56.000000+09:00")
                .discountUpperLimit(721)
                .description("2upj774ZTt68wKitJF1KBxcKBK4lH1C8QNbYZxdWhrn4GTRnE14RdEvSbbwtDWOudbilmy8")
                .name("iIHvifIfQhdnIN8o9TnQ6l2OjOTFEynJCjNq05Ouw1iW7M57HWQiZyxaz7M3FaOXGyZhSJSCv6y1MUikBcRaNOF1jRgFYt5OUCFQ1lTcrbq341xLTvHGWeeI");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test12() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "3abf157e-cf56-4e85-9938-ee406704c235"
        )
                .discountAmount(6897)
                .usageLimit(811)
                .code("hMBBiLX")
                .setPublic(false)
                .setHidden(false)
                .setDisabled(true)
                .displayEndsAt("2023-01-05T06:12:40.000000+09:00")
                .displayStartsAt("2021-12-19T20:38:12.000000+09:00")
                .endsAt("2024-04-06T02:59:59.000000+09:00")
                .startsAt("2022-01-25T10:49:29.000000+09:00")
                .discountUpperLimit(1091)
                .description("VSuzJXS6xTJZtbzEznujsepybIOyqbjdIxmWcAfgtqoFsB5zCWSJFhcxLpKTlB9Mjmgq0ATpCteXJwNYKoz1IPYtpe5jwhf1o6SXUPOs5VbEsH0FkvfyDkbvjlONNFo1cLOeR5ZlMxhawQR69wrqT5iMN9K1akdwmYoJu3UPq8WvWwzTtGKf7SBRLymiKM1atwXwrhg6nPHEBiKBzyogca2cL")
                .name("rnIkAiisvKz7BOoXXNDqgiqcg1QMdvgDGNHEXoI08lNtRcCCwMNddAi8q8UZUC3RA4NIJIBeN");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test13() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "3abf157e-cf56-4e85-9938-ee406704c235"
        )
                .discountAmount(7753)
                .minAmount(9581)
                .usageLimit(4998)
                .code("0iOvVW2C")
                .setPublic(true)
                .setHidden(true)
                .setDisabled(false)
                .displayEndsAt("2023-04-10T15:24:03.000000+09:00")
                .displayStartsAt("2021-05-01T15:21:08.000000+09:00")
                .endsAt("2022-07-13T01:57:58.000000+09:00")
                .startsAt("2024-02-29T01:11:52.000000+09:00")
                .discountUpperLimit(5867)
                .description("6PL5upnCGXyJwTKlnEzxYIa0GG7bxRnKkDor7NBRPaHadJhILpdwwMw")
                .name("0QH6dcrb4dSMTD25rRsdV7J9btMp5BwpOdpu4jqSi2Q5iewC5v4cYT368u8zkFt8RtOXrgk9rFIW1LjBcC6ZmSUNnzAwxxWqLbsUtRYPkuZ2OS3dS8MdplhUjKpvlZ");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test14() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "3abf157e-cf56-4e85-9938-ee406704c235"
        )
                .discountAmount(5275)
                .setShopSpecified(true)
                .minAmount(8195)
                .usageLimit(2835)
                .code("SyC")
                .setPublic(false)
                .setHidden(true)
                .setDisabled(true)
                .displayEndsAt("2023-08-02T21:02:33.000000+09:00")
                .displayStartsAt("2022-11-07T06:10:27.000000+09:00")
                .endsAt("2021-10-29T10:28:45.000000+09:00")
                .startsAt("2021-03-27T08:39:32.000000+09:00")
                .discountUpperLimit(8336)
                .description("VwsYPSzSoHqOVY2rMgb3caHxl0lIfPKUQefSabGzX7rCsl4W9IedwJXwXru80eDpgS0K4bxseKXJ8sdVEeMN6HEkGOWUt0U418zHl5gj96kzujRnPli86ir6cb2ry6J888XdZ")
                .name("X690xRrS51l8AzSLOH3GmBvf4qD63vyGSpLWX89Nup9r8yDAj6U1CY2yoRtajjkO");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test15() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "3abf157e-cf56-4e85-9938-ee406704c235"
        )
                .discountAmount(329)
                .availableShopIds(new String[]{"deeed9f2-1fc1-47ed-ae0c-5d021b4d9a42","51dcdbed-25c8-4568-a82c-e81ead3e9a66","5b52fc99-f6fb-42fb-8b89-f1041d8b4234","899accb9-4215-45c2-8bae-c5c897454c35","3e6c159d-8b43-40f7-a3ed-448a7ccb04d3"})
                .setShopSpecified(false)
                .minAmount(269)
                .usageLimit(5672)
                .code("zgO0S6b")
                .setPublic(true)
                .setHidden(false)
                .setDisabled(true)
                .displayEndsAt("2021-11-29T15:26:13.000000+09:00")
                .displayStartsAt("2024-08-06T15:00:06.000000+09:00")
                .endsAt("2023-12-29T11:29:57.000000+09:00")
                .startsAt("2021-03-27T19:16:32.000000+09:00")
                .discountUpperLimit(9035)
                .description("fRwTM5xE2wkZDxGgXieOOsLpgYmRwTAzBJw0VUUZvUBmOYSCfxf0NSoVXWHlzXBYgUwqqVov27AxL8yTTCS9nXBQrY1ou8qExAn")
                .name("QZFJCRGSRxyEE4xjESsZ5");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test16() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "3abf157e-cf56-4e85-9938-ee406704c235"
        )
                .discountAmount(4513)
                .storageId("7d3c055a-b454-4d88-ae91-76bddf59b087")
                .availableShopIds(new String[]{"7d3ca391-6e47-4334-8527-62f7c7efe69f"})
                .setShopSpecified(false)
                .minAmount(7007)
                .usageLimit(287)
                .code("5mogUVbqt")
                .setPublic(true)
                .setHidden(true)
                .setDisabled(true)
                .displayEndsAt("2024-05-20T17:55:56.000000+09:00")
                .displayStartsAt("2020-11-25T03:45:25.000000+09:00")
                .endsAt("2022-01-21T18:11:10.000000+09:00")
                .startsAt("2023-05-24T11:43:03.000000+09:00")
                .discountUpperLimit(6771)
                .description("Xi5fLxb06pgnQNF7dV96IxOE7WTSi9C6YGh8W0lJPSqxbc8sp1tBKozeGzeXfxFqRRqissUjJt9xCJN4YfocNdlAC61BV1puJwYjN0UptR")
                .name("kVHqbK5y3xuXvMniZfmt4bz0x3hz9enRw7ptwEj3GQlmwU3omNEaQvu697b33szeo5yLqwGCyYcqQanceGMGoUS09hp1E3w3A0xDLxHv0EpSUfnf5GXFyCvT4l");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test17() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "3abf157e-cf56-4e85-9938-ee406704c235"
        )
                .discountAmount(6702)
                .discountPercentage(4737.0);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test18() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "3abf157e-cf56-4e85-9938-ee406704c235"
        )
                .discountAmount(3506)
                .discountPercentage(9375.0)
                .name("bvmy1L2vVo1Na8SEthyZyWTo7AEAdYUE8I4V8uttLsvcEC7LQOITHhgLHZeTX6jt3tLk3KudAF5w1LXr1QzE");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test19() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "3abf157e-cf56-4e85-9938-ee406704c235"
        )
                .discountAmount(8436)
                .discountPercentage(4100.0)
                .description("dlvHBG8xp2o944hcBSkb0244O58CA1aLomhuCShVDRMJdQ6MBjmHIyQ7HHcDlOjvFuAOhgT1q0lW6nWuSgBPPuLepZgxUyEEP6OtCB0z1gJ5ZSEiSd8w9rZB7MFmJOVo0hDRtRvDsLNDEyttAcc1z79Pc4TYbEEFLgRDZ4QaUT9WfY4rcP4eULhfLy1IRtW06lAkTDpBE6BK")
                .name("3rb8gqOl5ffVP4UsKZOwwnD");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test20() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "3abf157e-cf56-4e85-9938-ee406704c235"
        )
                .discountAmount(9875)
                .discountPercentage(259.0)
                .discountUpperLimit(6268)
                .description("06xNdjtGSHc0FMXgvFcrfg6ed1")
                .name("zj26WN6tqU4oeHrgF5qf492sSrjeIbx3EkiLc5k5PdeiO");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test21() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "3abf157e-cf56-4e85-9938-ee406704c235"
        )
                .discountAmount(4359)
                .discountPercentage(4004.0)
                .startsAt("2023-03-29T05:39:42.000000+09:00")
                .discountUpperLimit(7751)
                .description("bZosJgYpZBbnN4o5q4dfB4s7DnrNYgz0pcl9jBpvwXJQbzXA4KIyo")
                .name("sWPpagr6PNRMv3L1Y8x7Oc8L7PhpQh7JTUXFZzGUkkLf1XISxJhTLKFoDrxbawfM6CajffEk67AYqfudfu4d8laE5eHCFTt7tx7fd3lvWszqXKl");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test22() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "3abf157e-cf56-4e85-9938-ee406704c235"
        )
                .discountAmount(9273)
                .discountPercentage(3181.0)
                .endsAt("2024-04-22T01:30:39.000000+09:00")
                .startsAt("2023-08-14T19:23:18.000000+09:00")
                .discountUpperLimit(9276)
                .description("v1VoDcEWNO2FHYXzeAqbQzU4KRLgrBFtiE1S0V0v6qruTxCv4coWwhxc8IYFUuGaHRE2devM62CYHwVNa0b174zCatyUe4Kn")
                .name("p4BuOGZxUBnEs3HDIdTEayC3x5JJ");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test23() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "3abf157e-cf56-4e85-9938-ee406704c235"
        )
                .discountAmount(3812)
                .discountPercentage(2272.0)
                .displayStartsAt("2020-07-28T07:10:56.000000+09:00")
                .endsAt("2022-11-06T13:02:51.000000+09:00")
                .startsAt("2022-04-06T07:31:06.000000+09:00")
                .discountUpperLimit(6528)
                .description("hONOCnrpQYf3eQo6gr8Lg0p7ux26wsjYx3zGbu20NniQKyWamaasTrjogv6snGHPwRWiZ5FTvdw9TN3KfRx3VNWdhdpGFY6zl8fJknU8HZWtRARHK93kkYC3ypjvKu5kVuUXch3FHZ6dr3VTJJNz4AqPms7WhgbZ9trjCZaDNgMtUgeVk3oY0bNuUK4tBUtkAb5qt5hL5oQTMjMFYNLCLWzvO2z2NwyZolZqos0mzCYFG64NJ9")
                .name("7qrcJ");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test24() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "3abf157e-cf56-4e85-9938-ee406704c235"
        )
                .discountAmount(421)
                .discountPercentage(7224.0)
                .displayEndsAt("2024-06-04T02:56:32.000000+09:00")
                .displayStartsAt("2022-07-03T13:20:55.000000+09:00")
                .endsAt("2021-05-17T03:28:58.000000+09:00")
                .startsAt("2024-04-02T21:38:16.000000+09:00")
                .discountUpperLimit(5102)
                .description("b850EkKwKFl2BhFFpPRTHA2BLugx0FNKxutdKGGeZAdBi3tkTcaaNPV2cSIPQDJuoc1PoXbtnSK9kFTbSPSPxco42SxNuBNjqMeNo9HKjvvqkETAwPklZTAZPcVhRkwo8od5FJ1CVNNYUZc7MzpQei1LmhXYMNpmyb9eCMCV7JfejgrK10mKjlzcs0K3rBWFEqZNuHO5zb")
                .name("fWRB6CuVEJ8jaUMR8");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test25() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "3abf157e-cf56-4e85-9938-ee406704c235"
        )
                .discountAmount(3388)
                .discountPercentage(5807.0)
                .setDisabled(true)
                .displayEndsAt("2023-06-28T02:54:10.000000+09:00")
                .displayStartsAt("2022-06-15T16:43:01.000000+09:00")
                .endsAt("2022-04-10T03:50:38.000000+09:00")
                .startsAt("2022-03-31T07:11:29.000000+09:00")
                .discountUpperLimit(4715)
                .description("rnRNlHpfJcYHCXbOXGDSBbbCKjB5zr7FT23NlRwcjvIYd868hHB20A0W8QhkxOH4SVVQqvQtIW0BYrwlvI5lt6BfxdRqcrW0w8L8ESlwzdbbpwpaPR0DYkCvFtmte2mifZ")
                .name("qbUdDUlZ7BbtXjHh34RvReKPJ");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test26() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "3abf157e-cf56-4e85-9938-ee406704c235"
        )
                .discountAmount(4559)
                .discountPercentage(1193.0)
                .setHidden(false)
                .setDisabled(false)
                .displayEndsAt("2023-09-05T05:45:04.000000+09:00")
                .displayStartsAt("2021-09-10T16:57:13.000000+09:00")
                .endsAt("2023-06-09T20:48:37.000000+09:00")
                .startsAt("2022-12-19T16:25:36.000000+09:00")
                .discountUpperLimit(5614)
                .description("XeyPl156D3FUoKjINfJokzQrSTLTClRMkFIcueszs8WkcxQ6I6iv40ME5VwNZ7x3BumcIkSjXlS23Lxu2sYc2GE7jqleUFhc8oAPVXDk8SPi0ejphIJa7P5q9EHzSMI7WcKr")
                .name("6b4CjiQ8oQrHnQE5gwLM7uAaQL9Je6FPBPkohFmFjgW32x58b0h7Y0xHM3wlHJjbeq9IRDf084I1lCHy0");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test27() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "3abf157e-cf56-4e85-9938-ee406704c235"
        )
                .discountAmount(7705)
                .discountPercentage(326.0)
                .setPublic(true)
                .setHidden(true)
                .setDisabled(false)
                .displayEndsAt("2023-04-09T11:54:46.000000+09:00")
                .displayStartsAt("2021-10-16T09:09:40.000000+09:00")
                .endsAt("2020-12-11T23:52:58.000000+09:00")
                .startsAt("2023-01-14T13:40:20.000000+09:00")
                .discountUpperLimit(5381)
                .description("fPOeZ8a7M28tLyIf8Xj8xgFH4ZngBE5pioZjs6zVEtTtQUduK4Ba6dNohRUSyQdYRJAnNUYS4y5J9RdOVlms0JT5ed2o")
                .name("tTBSYW6BI1Gq4kqrrEiSY3Yn0Z");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test28() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "3abf157e-cf56-4e85-9938-ee406704c235"
        )
                .discountAmount(1965)
                .discountPercentage(2324.0)
                .code("TVwqR")
                .setPublic(false)
                .setHidden(true)
                .setDisabled(true)
                .displayEndsAt("2023-12-15T14:28:28.000000+09:00")
                .displayStartsAt("2024-05-19T12:56:29.000000+09:00")
                .endsAt("2020-10-07T08:51:18.000000+09:00")
                .startsAt("2022-12-23T23:04:55.000000+09:00")
                .discountUpperLimit(5592)
                .description("0np6L9k6EkRitwPxHrM1u9dHmtbtIuJhWYWQgBj8AOrfkfSCi62F6I5zjCgaDPIiSxfxyaoGwZyaHsvbooKd1rp29qpMQ4tA2uQ2MBA7HCjgI65svdQAwWFAhWcao7QoRTjj6XOsXKWjsPkD4xikQoB4lGHANlFG18XzgFTMVg9mALIoPT9B30fbMIhDxYHNdfIxGCQxZdg3bMM")
                .name("Y40R");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test29() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "3abf157e-cf56-4e85-9938-ee406704c235"
        )
                .discountAmount(4714)
                .discountPercentage(4245.0)
                .usageLimit(9015)
                .code("Zm5t7MLz")
                .setPublic(true)
                .setHidden(false)
                .setDisabled(true)
                .displayEndsAt("2020-08-16T23:22:41.000000+09:00")
                .displayStartsAt("2023-04-02T03:12:18.000000+09:00")
                .endsAt("2024-06-15T22:40:33.000000+09:00")
                .startsAt("2022-05-12T14:34:42.000000+09:00")
                .discountUpperLimit(6106)
                .description("QdJ0Zp4HEUwoHQlhZOGX6TY7t9oAogTdqxP36JXzwFryvadm5Uh48SiUmq4um4duAJ1s0bbpQPkErGPk99g9aLecReQCzrTtjn15")
                .name("NS6U");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test30() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "3abf157e-cf56-4e85-9938-ee406704c235"
        )
                .discountAmount(1514)
                .discountPercentage(4466.0)
                .minAmount(2178)
                .usageLimit(341)
                .code("jCfhknGUF5")
                .setPublic(true)
                .setHidden(true)
                .setDisabled(false)
                .displayEndsAt("2024-03-11T10:22:43.000000+09:00")
                .displayStartsAt("2020-07-23T16:11:05.000000+09:00")
                .endsAt("2023-01-04T18:17:07.000000+09:00")
                .startsAt("2024-08-01T18:41:06.000000+09:00")
                .discountUpperLimit(7010)
                .description("g5G9LR8hBZrOPHjmtfrHXohaQw0vxMg2xQLtF5bbW")
                .name("vv5445gzbZbtYWu51GngH6hxhfTtTMVP3fLGjMlTxuI5OEJmWuM405");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test31() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "3abf157e-cf56-4e85-9938-ee406704c235"
        )
                .discountAmount(9266)
                .discountPercentage(5837.0)
                .setShopSpecified(false)
                .minAmount(1473)
                .usageLimit(3307)
                .code("6gDVLd8")
                .setPublic(false)
                .setHidden(true)
                .setDisabled(false)
                .displayEndsAt("2020-10-13T22:06:33.000000+09:00")
                .displayStartsAt("2020-05-28T00:23:31.000000+09:00")
                .endsAt("2021-09-27T15:49:16.000000+09:00")
                .startsAt("2021-05-05T18:01:20.000000+09:00")
                .discountUpperLimit(6410)
                .description("opVGILEJZsd3JDSPWLChoVbiyZp9DJaCzCR7NkkhNVmGmBjQ1zBJ1Vay1wUSCcfKmyz6Z43GUf3geFh4P6C7pWstm3ZQ3QKwEB6tSiM5N1mQAFoDCkGtkbricDceCBF78GtVVOSSLNcOKzrhEYUzajBiFIojHW2ir3bZiNeJg3kkFaH4KZLBTnR1fcntkSPQO3rOZz9TNbgrZA0480P24VM86JzmE56xHb")
                .name("3fQshJyft1GQIkTfkhsdzMvjhNc26adXmy4Z6EaQDvt0PWSh90D5SYWzoPL0Oj93ijBDimAznLKc4GiCREt3pSIPqE24yINqSBtQt2hfLKTIhlirunxY7CQjaW07");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test32() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "3abf157e-cf56-4e85-9938-ee406704c235"
        )
                .discountAmount(2806)
                .discountPercentage(5023.0)
                .availableShopIds(new String[]{"aa667929-1844-40b3-8018-7e01b19c16b4","6c70c836-2cf4-4f7a-9acf-4ef05a737ca3","c48a5221-7222-40e0-b950-8c643176a857","2db6a0d5-77ef-456c-976a-2bfb35831518","b0a207d2-c018-4749-b526-4a958af47837","16087e54-0cfc-477a-adb3-f616110c45ab","3d6cab05-e9e5-4859-8799-437a7243e0b2","cbaea931-4876-42be-a15c-cc9ad333275e","646625e8-b387-453d-ac87-295db3044494","fd27bd3a-7e94-475d-b042-e004d20cf78a"})
                .setShopSpecified(true)
                .minAmount(3156)
                .usageLimit(3381)
                .code("FXMXMoH9U")
                .setPublic(true)
                .setHidden(false)
                .setDisabled(true)
                .displayEndsAt("2020-01-29T06:48:27.000000+09:00")
                .displayStartsAt("2024-04-12T16:44:01.000000+09:00")
                .endsAt("2023-11-17T14:27:11.000000+09:00")
                .startsAt("2021-11-15T23:46:01.000000+09:00")
                .discountUpperLimit(4516)
                .description("4oJRa3v0MtOK600ihtId2tEbMBPnCCDcxIAGqFOjbuunc66jMfLoqn0GFo4hv3g5c3YpVqOBKUG9tjyXJicSXeyN8hnv8QcD4uQbEG")
                .name("ocf76JsT3fKjlLhRoJVCB7WKIsaMkD7OzP6JeNBc7R0fW7fpyjsewBVjHcgstqmIy820pxZNdycQlECk9RtKsvr");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test33() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "3abf157e-cf56-4e85-9938-ee406704c235"
        )
                .discountAmount(4058)
                .discountPercentage(3407.0)
                .storageId("7e15a3e1-7b65-4889-8999-36f0f5557a21")
                .availableShopIds(new String[]{"d13ce608-91f2-480b-b99d-d0db9ebb8747","df40e0b0-a3ee-4244-8266-17e984ece94d","c452f382-7f2e-4420-8449-028fe4280569","b920cd84-312b-4dcf-a15f-bb02242f70ee","f57f96e1-8a31-40c5-a280-a2d06d8aceea","e22ceb2d-b225-4a3b-8bda-5ef4909036ac","550d5071-5f91-4b1d-88cc-619fe83a88cf","f9cea817-f134-400c-ab6e-7b55ef5d0032","0bf02779-8a8d-4177-ba82-9edb83b52f5e","98d42c0b-4c44-41ec-9161-d3e9c1e85904"})
                .setShopSpecified(true)
                .minAmount(4083)
                .usageLimit(1774)
                .code("WU")
                .setPublic(false)
                .setHidden(false)
                .setDisabled(true)
                .displayEndsAt("2021-04-24T01:30:52.000000+09:00")
                .displayStartsAt("2023-07-30T00:46:54.000000+09:00")
                .endsAt("2020-05-22T07:59:19.000000+09:00")
                .startsAt("2024-05-04T17:30:20.000000+09:00")
                .discountUpperLimit(4280)
                .description("yFbd7KZdfcyds8VORwavE9reM3qhRxYseUm5vwBrcZZ0KKxZfJdf3qhZxnvSD0LOatfDyhH9THaDHkhnsgFhZ8VjqE73qYPKK1tYv5YpKMKNXIsAKollXBOG7aJMTu4GFh5st3gJ2hJYMONDXNyginjDP2gQ8nwerhhWJ9ixAuq3I3ww0z8WUOVxnZtDaCeB6mc307YlsGCOWOLvtEMijt0JRsTMs4xzH9sk3Q")
                .name("2RXoaqP6Se5QnkyJ25W5EOquNSy1i0K9YDwfcksdy3DzwCz6yVmPNgWNYSTVmu6S0NJ3G8ZzpMnHSTPpfxRE0ixrhkqBEiyvFlw");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test34() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "3abf157e-cf56-4e85-9938-ee406704c235"
        )
                .discountPercentage(1898.0);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test35() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "3abf157e-cf56-4e85-9938-ee406704c235"
        )
                .discountPercentage(5888.0)
                .name("3cojkxsrw0PTd4hx0Fh1bOBxtjZzfboJ02SH0zq9PWoca66hAtvmZZ24CX");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test36() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "3abf157e-cf56-4e85-9938-ee406704c235"
        )
                .discountPercentage(3043.0)
                .description("iesC5uF5jjUolvygiYPeoXA0fpjXP8brtod3YnAiCIkSypj1vjJ0KEaM1Fy5VoqcX")
                .name("XfO61KLAAfGemN8l0TLvRpH3xmXE3ArrhHwEEGbfOLKuzG2Jl4w6l1W4GblgDCw8b6zT4wcqPzys6tY38zEuu2paKTEel6f4TyPVz53GAmtaTg1dbQ90mbhRVlZX9");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test37() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "3abf157e-cf56-4e85-9938-ee406704c235"
        )
                .discountPercentage(2144.0)
                .discountUpperLimit(98)
                .description("VjoMs9WiaW1lPQyW5DFViJE3eIa9oheZxjBXO5G8Dpfs0SnzhG6HasusaguwTeQGWL0TMIblxqDPVjZvUSFgIFGA6aguVLD3t")
                .name("xMfkxPE6SOoBQlKuVG5QrNTP0vlfxUDX6Wl0oVNzn1It5oOVkl3qQmpZLwcDQ");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test38() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "3abf157e-cf56-4e85-9938-ee406704c235"
        )
                .discountPercentage(6097.0)
                .startsAt("2024-07-02T07:24:01.000000+09:00")
                .discountUpperLimit(3881)
                .description("NGgD4B6lj3el9pTxgxpjAYYkPXPNKCjT8YJve5Ihkxari1xQlLbZl9rorPOqw18nxUWPKI3Z6Z1SZNM5Ulbf7eFWQnn35P7G2tmZDkPKUpuuvMpPYdnPWPzk0qNZPlMi8Xnz8Lo1oaPk38ZlKTUOmAGA1aPOciH1Q7k5JeJZBQ8Lm6b2lK2ejnBuO8Z")
                .name("4mYRc0XY4V7oGjldCrVFeCzAS1owmgglINEYHO5");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test39() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "3abf157e-cf56-4e85-9938-ee406704c235"
        )
                .discountPercentage(3010.0)
                .endsAt("2020-02-10T01:32:31.000000+09:00")
                .startsAt("2022-03-24T18:41:52.000000+09:00")
                .discountUpperLimit(6738)
                .description("c89HWakVSDz4gqYrwg2Kc8vrcyxXHZgssBBaMZHkUPWbPQfATuqGVc7tpuxiQUOrwUMHTJSTNFKniKVjMF8uKMMHFdIDDVFp6Km7U6MqhNKaeb0xTpXcGBHfhHzK6o8HkIEUBF2onl2UrHnbVVfut6rNSgtbliw36HjITSdTaxubYFUi2uoCRV5XCWSmppQ6H35UX6fR10405k")
                .name("oqRfbkS9TVpZz3U90lk0GILWfN2gIKEkkpYT0veKupr8y7oO45W1EwIPbJBf23IvUjcFrcwcFo65dw04ZZe10NItz9i");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test40() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "3abf157e-cf56-4e85-9938-ee406704c235"
        )
                .discountPercentage(3586.0)
                .displayStartsAt("2020-07-09T13:37:51.000000+09:00")
                .endsAt("2022-03-21T00:19:35.000000+09:00")
                .startsAt("2021-11-30T05:02:48.000000+09:00")
                .discountUpperLimit(4269)
                .description("dLJxuAubtbyFYv3JNP9melT5yaBudS667mHYNSHZLWoJ6Q3XwZJyYtmzvAE7IpHvA9e6i98HRa9q0EwEdpgBCSZdWwV1kI3mv1qvEq0MuKEiyY9Q")
                .name("NigtOAb9ygBWlbVmKZDFZnHq");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test41() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "3abf157e-cf56-4e85-9938-ee406704c235"
        )
                .discountPercentage(5037.0)
                .displayEndsAt("2020-11-06T03:14:24.000000+09:00")
                .displayStartsAt("2020-10-13T21:30:45.000000+09:00")
                .endsAt("2022-06-28T09:40:32.000000+09:00")
                .startsAt("2020-09-11T11:36:12.000000+09:00")
                .discountUpperLimit(6195)
                .description("S6TXmw0herl6iQrumfO7xsGaFdJJoPo8qAkQQvAADtii1dQRolivfDXOzXETonVFE6k2O5VK")
                .name("XUKQMhfd3TYRFU2rEObUOepafql0slMRMxyoJvGEhegvvDN4Nz52vAjHV9F77UWLOw9FWobqlhyhduMlb6KikWW19KDN3tAbwF20yx6YX1TnSHqRjvn");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test42() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "3abf157e-cf56-4e85-9938-ee406704c235"
        )
                .discountPercentage(6912.0)
                .setDisabled(true)
                .displayEndsAt("2023-06-30T23:49:22.000000+09:00")
                .displayStartsAt("2023-11-13T01:42:54.000000+09:00")
                .endsAt("2020-10-30T12:37:37.000000+09:00")
                .startsAt("2020-02-07T21:38:45.000000+09:00")
                .discountUpperLimit(9073)
                .description("vhqVXOwAzEFWNHX23LFJ3k6nAeroGUrouaQkBB937HYfbdPld0IMfkXjF4UXdnvtALJqxGfft1Tbf41q4TkpLyf382phb4sE2KvgJJsNbIe7uqUlKdVzcBcMcxBsjzY")
                .name("YJyboVeI2NqiBRR7x5nzPBNLYqJctsaLB426EcXBJqgt3XyVp80DAhbo2bZzdlkt0oJwyhzM7qw3NEj8fh7hjNtZ4ZcKjQTJC0kMb2lO8");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test43() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "3abf157e-cf56-4e85-9938-ee406704c235"
        )
                .discountPercentage(6832.0)
                .setHidden(true)
                .setDisabled(false)
                .displayEndsAt("2022-02-15T04:16:20.000000+09:00")
                .displayStartsAt("2022-05-25T06:29:42.000000+09:00")
                .endsAt("2022-03-16T11:45:57.000000+09:00")
                .startsAt("2023-05-26T09:31:10.000000+09:00")
                .discountUpperLimit(2008)
                .description("rIluEgZHmyIk1x9A4WIdS")
                .name("U4Ami");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test44() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "3abf157e-cf56-4e85-9938-ee406704c235"
        )
                .discountPercentage(1357.0)
                .setPublic(false)
                .setHidden(true)
                .setDisabled(false)
                .displayEndsAt("2020-09-13T18:51:38.000000+09:00")
                .displayStartsAt("2021-05-14T10:36:05.000000+09:00")
                .endsAt("2023-07-09T10:47:23.000000+09:00")
                .startsAt("2022-03-08T09:09:09.000000+09:00")
                .discountUpperLimit(4377)
                .description("1E0b61etXbWEDp2X9hztbLFnLuNJ0FiOEAYcq9ibzyPCrKwy1AeWTkg5KDM9ZXjw1AfNTSI6g5wyoDFOT1uqrxAxmG9HkBlJ25xxgMh5Lzb3ya0GgNQcyT6")
                .name("O7kNWFW28nwm7sThJNMFkfOJlIkISrXir7Z");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test45() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "3abf157e-cf56-4e85-9938-ee406704c235"
        )
                .discountPercentage(4564.0)
                .code("kReQ01P3")
                .setPublic(false)
                .setHidden(false)
                .setDisabled(false)
                .displayEndsAt("2023-01-02T02:20:14.000000+09:00")
                .displayStartsAt("2021-11-04T07:34:03.000000+09:00")
                .endsAt("2023-04-06T08:36:48.000000+09:00")
                .startsAt("2022-10-05T10:24:29.000000+09:00")
                .discountUpperLimit(7036)
                .description("FCCysO30NlWaZwU5zIEBb5Zij9yhX3hCb6Xzeg3fJlJOgNt0Xi4YgrguuC1pf7VKKdi0QfMjhrypLhwmdnu9IzLtVvz2LwvEE8Ixe8TCMN8GkANO4lcOg59GMANMZ2bX14bUeA7nC")
                .name("nAufLmtalLW0hcmttQ3UYVm1pcLaEXVA43DGvYjPlLPrLMaxFxMyLNyXliq3Y9JFqQwQ1NeLN0BZcOp776ku4W42SstAgwALAClzVHE8pGX");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test46() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "3abf157e-cf56-4e85-9938-ee406704c235"
        )
                .discountPercentage(357.0)
                .usageLimit(6210)
                .code("8")
                .setPublic(false)
                .setHidden(true)
                .setDisabled(false)
                .displayEndsAt("2022-01-15T03:19:53.000000+09:00")
                .displayStartsAt("2021-06-17T12:44:25.000000+09:00")
                .endsAt("2022-08-07T14:01:23.000000+09:00")
                .startsAt("2021-10-19T13:46:57.000000+09:00")
                .discountUpperLimit(3001)
                .description("Nd2aavl")
                .name("HvfJru1p0jCxCWCTtHhi6xba2TZ7McxT39Pcrqni3aruT0Zc");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test47() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "3abf157e-cf56-4e85-9938-ee406704c235"
        )
                .discountPercentage(41.0)
                .minAmount(536)
                .usageLimit(3268)
                .code("bu1")
                .setPublic(false)
                .setHidden(false)
                .setDisabled(false)
                .displayEndsAt("2024-04-15T20:21:16.000000+09:00")
                .displayStartsAt("2023-08-15T13:55:26.000000+09:00")
                .endsAt("2021-01-09T22:19:34.000000+09:00")
                .startsAt("2020-09-24T15:59:44.000000+09:00")
                .discountUpperLimit(5458)
                .description("eiTfPMcHveXO6ILiPMxqZ012ktX2")
                .name("wsXBUkGAPov78I43Meb8QWhTb7tmCneE0MmYCR9BFZb0ROOIu0yWt9Q85D19krQKPguc");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test48() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "3abf157e-cf56-4e85-9938-ee406704c235"
        )
                .discountPercentage(6951.0)
                .setShopSpecified(true)
                .minAmount(5452)
                .usageLimit(2590)
                .code("lb3G1")
                .setPublic(false)
                .setHidden(true)
                .setDisabled(false)
                .displayEndsAt("2024-03-03T15:07:41.000000+09:00")
                .displayStartsAt("2022-04-01T14:13:10.000000+09:00")
                .endsAt("2021-01-28T20:03:14.000000+09:00")
                .startsAt("2020-09-11T03:05:43.000000+09:00")
                .discountUpperLimit(1371)
                .description("7RRmEzpxpqxHOYmImUqbIZZbQ9faPlmvDhqYAH3OzquSd2ZXoINeVtgMQ2OPp1GLoV6SebIKlwxIHPpQPBWU6DIKLAAlBrqhl1Lw4Xd5M9hutXsysfXMzVGUducixqvqVIVtWTXcRfAxtIVgfMxSrAhk9FQa1FNseTwEfm396sgLTN3iCt")
                .name("kLmZMmwtjbNN8v5gMLAq90ccFhgJgAQyMMOtgVrbqPWKubtoyqOpmBzPJfhkSDmJgr4ovoQaZWaSWktCljYIOs3ED8Fvyjx5z9cud4jOvvDjSxjJWUpkzt");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test49() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "3abf157e-cf56-4e85-9938-ee406704c235"
        )
                .discountPercentage(1357.0)
                .availableShopIds(new String[]{"40f705be-823f-42d0-8c86-10e6bb6d5c29","e9953f74-2499-4276-aba0-b662149705fc","7f5bd455-0dfa-4ce1-8513-f74eb7ca16d6","6a4d304e-66e9-4ce1-8dac-eb23337161f5","83e1680f-20fa-439a-a631-ef5bfd6c557f","43c5d982-981a-4db7-b297-a8d8d9235ffe","04c81863-6de1-4aaf-9659-bb2ba9fd18e7","c23028a1-34ed-459d-8044-a13bdfa5dac2","ef705edd-ac65-41b3-a7f5-ca0376536ae9","00195c26-a5ab-4db6-b88f-acdb34a7f3ad"})
                .setShopSpecified(false)
                .minAmount(208)
                .usageLimit(5387)
                .code("bCjNbsXkm")
                .setPublic(false)
                .setHidden(false)
                .setDisabled(false)
                .displayEndsAt("2023-05-10T23:51:46.000000+09:00")
                .displayStartsAt("2020-07-22T21:19:34.000000+09:00")
                .endsAt("2020-07-12T23:02:50.000000+09:00")
                .startsAt("2022-05-26T18:15:40.000000+09:00")
                .discountUpperLimit(6290)
                .description("ClS7RCf9mMpUOkNXgXQll5TTUs")
                .name("pSSJrkcVxjz2FuB0GDk5UQf056Mgur751Gqj0gnOkJYAnc5mZkG67JbdDc5LZvlYDAQhrfycL239VrUVhIvdlgi3VhE9pK2iae8Rn0BLFLnu");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test50() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "3abf157e-cf56-4e85-9938-ee406704c235"
        )
                .discountPercentage(8024.0)
                .storageId("ad3553e5-323c-4d5d-a265-04b0595e6dbd")
                .availableShopIds(new String[]{"19d19914-2077-4960-91e7-5d365a01d1ab"})
                .setShopSpecified(true)
                .minAmount(4541)
                .usageLimit(27)
                .code("Nt3Yo99")
                .setPublic(true)
                .setHidden(true)
                .setDisabled(true)
                .displayEndsAt("2020-03-29T02:45:55.000000+09:00")
                .displayStartsAt("2022-09-20T07:49:28.000000+09:00")
                .endsAt("2020-05-20T05:24:31.000000+09:00")
                .startsAt("2020-11-02T16:27:37.000000+09:00")
                .discountUpperLimit(7984)
                .description("IpaEfLXFY8piH1ebGzdrtQpvwcepLw1KkBJtbwYeBsF7ItOy4FjpautqzjJPl9QnSjt4hZQNwSftnVmRImqRzbC0jVU7NKCdoSfZCPku5qQcWtVbGUYtF6Th7k3TI9rMvpkLC76qjYnhjX2H8PrjoKKG5mIsY2VEmgliqZdlqPXh")
                .name("K6SzR3nLXvsYjdw7JhYvIjbW5aukZEmb9ncmV6PsLctTTl3YAc1dCq9Ui9gaAAKw3Qei9F");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
