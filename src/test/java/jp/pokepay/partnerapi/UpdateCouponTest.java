// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.UpdateCoupon;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class UpdateCouponTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "b7a5127a-8e0e-4ccf-b59e-e0b7d3e19d72"
        )
                .discountAmount(7941);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "b7a5127a-8e0e-4ccf-b59e-e0b7d3e19d72"
        )
                .discountAmount(6458)
                .name("gILi96nR22RM8V1SAs9xyllFZgbyZflzkAIMm1eIu3IAMPlErPsdh8kQ");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "b7a5127a-8e0e-4ccf-b59e-e0b7d3e19d72"
        )
                .discountAmount(4986)
                .description("GtELoNAegMr7tJZXciyaNw47VjZkXQ3ypqAOZT")
                .name("si");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "b7a5127a-8e0e-4ccf-b59e-e0b7d3e19d72"
        )
                .discountAmount(8235)
                .discountUpperLimit(2415)
                .description("R9siAxf39fNVGG3Z275mYrKutggg08lCfPO0b3GXCv92fQPaR4065oVZaWStBK3uCeVzxkFaNY04ZOpWprvgQujedLBfX5P9gJzOppKTuOgzNNACtUFuBxkooatPxuC3kFPpxhHTrlGml18ikxbbgSHd70ZvTroE5")
                .name("bcXRxMCtvCaaZjoU");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "b7a5127a-8e0e-4ccf-b59e-e0b7d3e19d72"
        )
                .discountAmount(977)
                .startsAt("2020-03-07T19:38:25.000000+09:00")
                .discountUpperLimit(1197)
                .description("WgS8wgBEoOYj4kW3R6HMUMBDGgER28I6N8bz7xxotMbJ0hQ1dKB4xG4auUbpPW0XyYCGnQgH1rtGenFrCtDoZY71tQ4GoH3gd9aluIU9gPqRNWuNTAk4R0aUMK5igzExXgLsjVcegxjWSysbpFj2D8Go6gW5uX1idSg8rETgt4CR55I01G2CAuxwNM3FXrzJtBkZxGpmbU7qc6wcesJnBBEeinLaNrlww")
                .name("fuGuSMHwFv3gOvaJyIgePtvDEheldBuunPRnngzqkCkCWePmulgKC0H2XGTTcWVo0hPOYqQ");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "b7a5127a-8e0e-4ccf-b59e-e0b7d3e19d72"
        )
                .discountAmount(970)
                .endsAt("2023-12-26T18:02:53.000000+09:00")
                .startsAt("2022-11-04T12:54:52.000000+09:00")
                .discountUpperLimit(6016)
                .description("pWUDKo43hmslJVYt1DyFm9IipKtufrEYM4AaU8z7OUHyuyRGzNhhxRRZUHpCYDIUTb98tiHvSYhyr5LH2KnKMESMKWz1xsrOphSuCvhgoonh4v1mQVe0iCT7J3Hkm8TghhOwxFmQdqtk6UgN1AxMbNcIs9RGCNDv30IKKFiGwQDIEyKklz0Cl4t9o2rOvh9P")
                .name("cPqCRHeYADU2gE05mbtVEgJ6jFhiZC3A2LdROBCOYCKKyBcTYQlHTfFVjUtsfqojfw5mFtUJjVaolVUFxH2t458f68");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "b7a5127a-8e0e-4ccf-b59e-e0b7d3e19d72"
        )
                .discountAmount(3602)
                .displayStartsAt("2022-12-09T00:03:18.000000+09:00")
                .endsAt("2022-08-17T07:52:59.000000+09:00")
                .startsAt("2020-05-08T18:23:00.000000+09:00")
                .discountUpperLimit(420)
                .description("H9DqtgxbzliXTtV2JHBJb2KaWbVKjpPpbpVJ0gXJJLqOBXxvs7")
                .name("unyliMLo3BRUATTK");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "b7a5127a-8e0e-4ccf-b59e-e0b7d3e19d72"
        )
                .discountAmount(914)
                .displayEndsAt("2023-01-02T03:15:47.000000+09:00")
                .displayStartsAt("2022-10-01T14:42:25.000000+09:00")
                .endsAt("2023-12-25T05:08:10.000000+09:00")
                .startsAt("2023-08-10T18:21:33.000000+09:00")
                .discountUpperLimit(2858)
                .description("7Tq96QJMKaLVcTPF2Se4qwHrw5etfWqdKutjoPLHEUQ3ofix7UsUKhpSPADG1htNJIbdVkIkTjbXc2YYClEFBGd7tBN3U6SFnR7LyEaP7JCs8D8K9iSryNnSq45qiiKrixHlXHA9kTC0d3rbLpMP8rwpMNQAum26tlcvNzgWw351tDfn2WZTYXOvbQhvQKou")
                .name("4h18Uc6YMWHsKZLrYoMIiH0yWI2Kjhi9nJX94Hilwrgi6JSfuiubpSUgfGIifeBUUhw9hqLL2gK");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "b7a5127a-8e0e-4ccf-b59e-e0b7d3e19d72"
        )
                .discountAmount(4169)
                .setDisabled(false)
                .displayEndsAt("2020-05-17T15:02:27.000000+09:00")
                .displayStartsAt("2021-07-29T17:46:26.000000+09:00")
                .endsAt("2024-07-06T02:18:30.000000+09:00")
                .startsAt("2022-09-15T05:19:14.000000+09:00")
                .discountUpperLimit(437)
                .description("j01QzCNYw0nEN6RVmKpABa1NDRNMkvcesfzpcEUfJYAbgsqStRk0amIn0t16ByYGMMkXldZpCvv54SBvzl9t0hIeVseUrxmJeA9kKjagKOu3QU2h4xClbtq1KOgOnEyzlSUlE3lB5BBPloRYKdnlgco61olgoR")
                .name("RS7t12y8gKPEc9AiuRbxiUKuxOdw1");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test9() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "b7a5127a-8e0e-4ccf-b59e-e0b7d3e19d72"
        )
                .discountAmount(7280)
                .setHidden(false)
                .setDisabled(false)
                .displayEndsAt("2022-05-06T18:47:31.000000+09:00")
                .displayStartsAt("2024-07-23T20:26:17.000000+09:00")
                .endsAt("2021-01-06T14:06:19.000000+09:00")
                .startsAt("2020-07-25T22:05:02.000000+09:00")
                .discountUpperLimit(3785)
                .description("a55jLzVJUGmAzj9bxlfzfltgSMoAQELsFypoN06apCViyUdsl1lCiVP64rfM2ZWjb98SNtJR6LrgmxgmeExb2wvBViupxteVkzSXM6BRlQiN5mkLtZV0QgBoBUqZRehN3GYCXPaT7Gaf4qVlZygfqzFTrwchuTFWFwvK30YSII7ZpiPTcgqGasqPPjMUEwOBHT3Xm72esGblAK1TsoZn59GbQ6A7QGYRBPzYdEV9COimM")
                .name("w2Oncit3YgsAqIfzUtH84LQ");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test10() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "b7a5127a-8e0e-4ccf-b59e-e0b7d3e19d72"
        )
                .discountAmount(3507)
                .setPublic(false)
                .setHidden(true)
                .setDisabled(false)
                .displayEndsAt("2022-03-19T13:19:38.000000+09:00")
                .displayStartsAt("2023-03-17T20:13:40.000000+09:00")
                .endsAt("2023-12-11T02:53:56.000000+09:00")
                .startsAt("2023-01-16T01:55:15.000000+09:00")
                .discountUpperLimit(9689)
                .description("VegW7HnX6oah1UlSkhKDiWi87PqalJGhrdug2y4oWbTmmM1drQjxyyqedYStFlts7NFMRQAWdp6qMZHfaZoSurKUp1XjZul8yBby7")
                .name("RFd3c1vC2XmZlRTjAGmKJw1X5drXxH7bd5ZX3sbDcHZvi58Z2JUNdDZpw6zYDcYzsE8TmzLxHedOKQyDWZgz1D73xGVE5");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test11() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "b7a5127a-8e0e-4ccf-b59e-e0b7d3e19d72"
        )
                .discountAmount(3505)
                .code("v")
                .setPublic(true)
                .setHidden(false)
                .setDisabled(true)
                .displayEndsAt("2020-10-27T12:52:58.000000+09:00")
                .displayStartsAt("2022-09-20T05:03:24.000000+09:00")
                .endsAt("2020-06-23T16:38:45.000000+09:00")
                .startsAt("2022-11-08T14:32:20.000000+09:00")
                .discountUpperLimit(2273)
                .description("ih9frzXjAFIemtG1EEChEIgxbnjpXg0QFx5aBssTpHU6SEmKAKHZdPgVFjsZlwg3RpeWvIIRfvtcxXn8l6PJRFbqSTbltbs88nUIsN")
                .name("4z8naRcnaA6jkAtO6La5iIXp7evh1QcLgc77e6sB1n7cvgNIGpUDc8mv2UtttRlHU44Rtt");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test12() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "b7a5127a-8e0e-4ccf-b59e-e0b7d3e19d72"
        )
                .discountAmount(8253)
                .usageLimit(9480)
                .code("iWpPlz")
                .setPublic(true)
                .setHidden(false)
                .setDisabled(true)
                .displayEndsAt("2022-10-16T14:09:31.000000+09:00")
                .displayStartsAt("2023-06-03T10:47:37.000000+09:00")
                .endsAt("2024-05-08T22:52:55.000000+09:00")
                .startsAt("2022-09-28T14:21:38.000000+09:00")
                .discountUpperLimit(2261)
                .description("OS4UnJo4RUn1daEhRSqDBxuqd8xhebMEVqnn8MrkV9vrhHJDKifFs2sADtDVj2aC0C0d8mMR")
                .name("1MbnXmZv6x0901i");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test13() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "b7a5127a-8e0e-4ccf-b59e-e0b7d3e19d72"
        )
                .discountAmount(5079)
                .minAmount(629)
                .usageLimit(2715)
                .code("M")
                .setPublic(true)
                .setHidden(true)
                .setDisabled(false)
                .displayEndsAt("2022-08-28T00:30:11.000000+09:00")
                .displayStartsAt("2021-12-02T21:06:04.000000+09:00")
                .endsAt("2020-08-24T04:01:45.000000+09:00")
                .startsAt("2023-09-14T12:25:34.000000+09:00")
                .discountUpperLimit(3081)
                .description("SzNNGPB0R1AFcE8DoSY0ljS74RxRQezvY9Fai94Qjfu13qYWSjYBkvkZhloAW1WfwQGdT16Vwp9i8AKPNd2AVIyMfZL7zlODI7wUZ00lhRqrda0uI0TsYc3GJ8D1Wx6j55RxtHUUoMGuri")
                .name("3hrIzlSFpE2WqpIppfp5042W8DsxN2mnA2vKqnDm6AYcYjYdRPGRn7LyZRlk1Zaclg8csEtQ1");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test14() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "b7a5127a-8e0e-4ccf-b59e-e0b7d3e19d72"
        )
                .discountAmount(4476)
                .setShopSpecified(true)
                .minAmount(8780)
                .usageLimit(8486)
                .code("bph")
                .setPublic(true)
                .setHidden(true)
                .setDisabled(false)
                .displayEndsAt("2022-12-05T03:21:58.000000+09:00")
                .displayStartsAt("2020-02-28T07:01:05.000000+09:00")
                .endsAt("2022-02-06T23:48:56.000000+09:00")
                .startsAt("2021-10-30T15:32:24.000000+09:00")
                .discountUpperLimit(2225)
                .description("Pz0iqa3ciWe2BhlSoo1sOZ6TljJABsKVSKhZ8Y6U0nX0DraylVIaI9DpYuxvVVa9Ua2W4OQPRGjkawTDL0P9v0JDpBap08008SaGlbWOmTCJRmwGnVSVUfVfzCOik4ivJmGQktj6Ek7OheMCbqINATT0yLuGf1jCJVOveCTKhY7cKBsWuVp8h24m4v7AoMGHP1oKsHyzqOxrYV78FEJCdsbNREK5EK8BNERzPDiODW")
                .name("g8A3t2CJ0RG80FzOemhsAQZqbVq7vASkjRVrD8zw");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test15() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "b7a5127a-8e0e-4ccf-b59e-e0b7d3e19d72"
        )
                .discountAmount(3182)
                .availableShopIds(new String[]{"7b19198e-f566-4f82-b99b-e8d67c1937fd","5bf247c0-ed41-4d3a-aae4-da327fb5606e","114c13c2-afe0-46f7-aef7-83cd75f6c42b"})
                .setShopSpecified(false)
                .minAmount(7890)
                .usageLimit(808)
                .code("GCrSgGf")
                .setPublic(false)
                .setHidden(false)
                .setDisabled(false)
                .displayEndsAt("2022-12-28T01:34:39.000000+09:00")
                .displayStartsAt("2022-06-21T15:24:09.000000+09:00")
                .endsAt("2020-08-19T06:45:21.000000+09:00")
                .startsAt("2022-02-03T12:33:02.000000+09:00")
                .discountUpperLimit(997)
                .description("LNvr2JW6GGDh4TiefNGmWdsXCa9HO4fDyMyLjPyBYjSgH6a1KvoFVjCd0VKpqYqTI5XjcocTY1ZE89s116KebuFcTorF78qnVFEIp9nYVaV")
                .name("AEjt2XrvRqH8CguZmM7CH7gI11wJ93O3cQVDoC7VXYu4RYLn8sEHhBdTjYYIScmUZg4IT8TKaDKOqjzM2TEnSXrysvHGS9NUJfhIHfrXC379DUUMcpMkbCcH3ilxsZ");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test16() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "b7a5127a-8e0e-4ccf-b59e-e0b7d3e19d72"
        )
                .discountAmount(7899)
                .storageId("30cb36d9-bfb2-4ed7-84af-bddc5f4e1a39")
                .availableShopIds(new String[]{"4c370b53-fd54-46fe-9f42-72bc20f78193","97d5571c-1a5d-422b-bbbf-d6234898f63f"})
                .setShopSpecified(false)
                .minAmount(8394)
                .usageLimit(85)
                .code("vr0gsxno1v")
                .setPublic(false)
                .setHidden(false)
                .setDisabled(false)
                .displayEndsAt("2021-06-17T01:00:13.000000+09:00")
                .displayStartsAt("2021-07-04T16:33:15.000000+09:00")
                .endsAt("2022-10-29T19:41:34.000000+09:00")
                .startsAt("2022-08-16T09:42:23.000000+09:00")
                .discountUpperLimit(4776)
                .description("ReHRUcu9N8M4eMjtrZn9DsQaICGa9eu5KNk7SOvILj0sTtGLXtwm5ZHWD0kUNqYYlQ7g9ujg6PeJhUFHXRZhseKSZu1SgZBA3B8hSWjT8Uz036")
                .name("QlAlmkA5viUuHyqsfDicpmyhp3rg58WEPI0XlVh8plj2KrpilBQH22Ozmd081ecEPu");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test17() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "b7a5127a-8e0e-4ccf-b59e-e0b7d3e19d72"
        )
                .discountAmount(2672)
                .discountPercentage(9777.0);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test18() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "b7a5127a-8e0e-4ccf-b59e-e0b7d3e19d72"
        )
                .discountAmount(7869)
                .discountPercentage(3021.0)
                .name("cdoSlAJuS3mobS0KMCyC9NEHUSLgrm5H2lHMq3aunBgmO0XODIxsMgi8NBqpteueUA7yaDyu");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test19() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "b7a5127a-8e0e-4ccf-b59e-e0b7d3e19d72"
        )
                .discountAmount(4999)
                .discountPercentage(5629.0)
                .description("4RtM4Ve7LEY2WmfEXYmRGDvdsaZvccNKU18sk2zfwbspsjVKkEZpUXAInRCe3DSGObU42QjwroXbyRYBchNdHP2x60DOEPCMUuKYxizTsIEU4eP1qYZ5sCrAMDQUXaBiwAE4yYfr8Ep5wtTgVXMosKtpBJvw8uMdy6zfp98")
                .name("v6OJltomXsNrtkl4QR678pzcoKPdvBDSj4dkiZuU3I6cfkiOmfJuryoeteo41wCJFQXbWNuHMQJ3FuOf8");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test20() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "b7a5127a-8e0e-4ccf-b59e-e0b7d3e19d72"
        )
                .discountAmount(4187)
                .discountPercentage(3932.0)
                .discountUpperLimit(4260)
                .description("ZALi044x4pDhw8EGV8pgmlS5e8kghmPuRcNiqF3CXbrVulhNrZxvHWjq0tWdrlrwB5uxE29pwVmF61KVTqKpogvNZ1SOFQqA9MJkk02Pop9ODLtNqDTrGs7H8QWnMx1KaOdXSXqna4QRORHQItu9WD0vuWbjmu4xKcw03JDLfjN3bonbffUvBIUpJFq1IysqGEH3FJNxLH4Q3PoQw2TUVzViWN0w1MhL1TLXxnxSDUEgeCD")
                .name("h8o1");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test21() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "b7a5127a-8e0e-4ccf-b59e-e0b7d3e19d72"
        )
                .discountAmount(5254)
                .discountPercentage(1855.0)
                .startsAt("2023-03-22T19:42:31.000000+09:00")
                .discountUpperLimit(9792)
                .description("suMSNBdFIiIKPwTBxCsTp2RD4jHhQF5xx4Cekwv8O3sCChuuDgkPLjtbj33c3FkRhu0ZfQ07dCbua5gys5P7W75QGKseeK7U4eCMZp7BSL4dGFeoxYHEjoDMAJgNcw8YwpGlBBbAcmYGPxX952xJZzvaX3ORIhk0wGIGyS4x26xbIwTLVSVDMlrYqP6fa")
                .name("tw549IO");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test22() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "b7a5127a-8e0e-4ccf-b59e-e0b7d3e19d72"
        )
                .discountAmount(1064)
                .discountPercentage(1238.0)
                .endsAt("2024-02-15T19:55:13.000000+09:00")
                .startsAt("2023-01-30T17:48:47.000000+09:00")
                .discountUpperLimit(389)
                .description("5iIf1ekdc9K4386Qh2pN0pfjDlCzvevQo7PbyOjTDFVQMY99rZHHIFBqLEGApfe2nILSDeK8BsqCs5ufrM9Tm857pMpgb5ijypCmM7uAc9eYAHNHCgqsyKt80iOhpOSAdDqjgPBVViLhU2VylNTXGzaEtAIQ6leA8sIL5h")
                .name("lCnKneFho8OG5kBxXrISIC3JVhFEyyNv4zPeIAX0a2xiHPZkLMR3PVpdqfuxCAtcBGiPEfaXg3SiGSZJ0BUmqgoQqUVqPrpwkApw1Fc5MKQxeQ0u40N");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test23() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "b7a5127a-8e0e-4ccf-b59e-e0b7d3e19d72"
        )
                .discountAmount(9751)
                .discountPercentage(9088.0)
                .displayStartsAt("2021-08-11T22:03:38.000000+09:00")
                .endsAt("2024-06-22T11:38:44.000000+09:00")
                .startsAt("2022-03-30T20:10:44.000000+09:00")
                .discountUpperLimit(5896)
                .description("ejwTrzZbWvCVm0DSAPcEpxsNFRoJcjs1vR9UMbLh8XRJjYQ45hnoq18lqiPQElgnizAUBlK6fJj1M6CZlKQh8vDsXOvuTsOPRS2VvWH8mWvPpgXkyAlvRBsAk47V2STBVN9nmBNeCRz6VVPTRH6ZXqLZtuyYrIoFivRErvI7fFIWW6f")
                .name("GY7gNyGwBQ0pJmlBpS90ZOTSaWEozq0sNIosT3jCNaU3yQM");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test24() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "b7a5127a-8e0e-4ccf-b59e-e0b7d3e19d72"
        )
                .discountAmount(5193)
                .discountPercentage(9403.0)
                .displayEndsAt("2023-04-06T17:19:20.000000+09:00")
                .displayStartsAt("2020-12-14T10:43:54.000000+09:00")
                .endsAt("2024-01-25T07:13:42.000000+09:00")
                .startsAt("2023-08-07T02:31:47.000000+09:00")
                .discountUpperLimit(7344)
                .description("4sG7hJk8Thl6KA3mLcrUI6k51izf14aq351V7D1GJrAmpRrqKO80ofVItBKzUWAfJBHtwGamM9C1LWoM5jkMUTQxT45Z4NcpH9fTNR1ahqpcS9jpRdWj1JQVaFgVVLe4cDujY39dBtdjSwvBbDDzdQWdtG7l")
                .name("KahZK2mKoHer0rVcrmzX7T6BeAIuyaZiozpRv0RAji8svSgk1X0EmpSho");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test25() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "b7a5127a-8e0e-4ccf-b59e-e0b7d3e19d72"
        )
                .discountAmount(248)
                .discountPercentage(1237.0)
                .setDisabled(true)
                .displayEndsAt("2023-12-26T05:21:44.000000+09:00")
                .displayStartsAt("2023-11-12T10:40:48.000000+09:00")
                .endsAt("2022-05-11T06:44:55.000000+09:00")
                .startsAt("2024-02-20T14:09:31.000000+09:00")
                .discountUpperLimit(9369)
                .description("X2csA8vlkmb2bL3Zn50VWIivL75Tm42VFhprybFbCrizlGVvS87u96DSgQP59SHkOKLEr8mCmhVqz320Q1mlAzFbYGrVjT8ByPdEA2aH0xPl0XEYdJCj4c7yT2CE8JMYVbgjq2PFUNSffVQCG0G23VjUge4UuYnoLY7ZLJqC4IharJvCYVKCpapoRqG0GVth61U")
                .name("xDL4k9fgRkE3XoU18P90qizhTWh0RF91Bj9BUA9oQlJlMW8mYqUsyxxWg64vw17MWdGoEv2G6R4bCq5jcR3NLJH7LJv8U8irwkwMKDamhzGMs52yu1cr6Fe");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test26() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "b7a5127a-8e0e-4ccf-b59e-e0b7d3e19d72"
        )
                .discountAmount(5052)
                .discountPercentage(5657.0)
                .setHidden(true)
                .setDisabled(false)
                .displayEndsAt("2020-03-05T10:40:03.000000+09:00")
                .displayStartsAt("2024-04-04T06:57:05.000000+09:00")
                .endsAt("2021-07-26T06:35:28.000000+09:00")
                .startsAt("2024-07-05T02:56:36.000000+09:00")
                .discountUpperLimit(8271)
                .description("RSnvfqRO8oMpunESFB4MKhwiSMCAMLhCW2IgIsrmMeWgcToo29EQrGPXjfXGTjPETkARHwYDvAI5F5K03jU1sPwPEKukgCXx85c9yw5GT3OE01X1rG3kwHQxQhBPqJpbpaXs9wLTlb9R2Mlq3VdoAaPIn2Mep20j9FlgzmBpZGfSihbMsDa7HIXZ4dRg4KDJBFtcDdQ5HTSXFNTc")
                .name("LHqdeSx045tDqv65IGg4uJvkpNrefqVT1");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test27() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "b7a5127a-8e0e-4ccf-b59e-e0b7d3e19d72"
        )
                .discountAmount(2609)
                .discountPercentage(7120.0)
                .setPublic(false)
                .setHidden(true)
                .setDisabled(true)
                .displayEndsAt("2023-11-28T12:37:50.000000+09:00")
                .displayStartsAt("2020-07-23T17:08:03.000000+09:00")
                .endsAt("2024-06-07T23:27:53.000000+09:00")
                .startsAt("2023-07-16T19:42:41.000000+09:00")
                .discountUpperLimit(3720)
                .description("zEcSFsh3Kjp09AQX3m4uMQoSXFTt6b3hzYTVUyQ7pJshv9l9D5Tnf6daBtVlnmkwmoaWo9Hqq4Eep9I6YeAPXUSyFPqcjci3m39eIFTtqMf90mLvPlcN6fXTy4NRI5xq3PSKvzYjCRZiy")
                .name("MjKU4JJOlucvTq1GAtqJGbbtlHPa7ZIrNJHSeQvSSfwXJZ8GmIeN7QFuPaRP3DxgCBaVv14otU01dym02p4BdubESIfVFkg1OVhdP6sbKsTR27A5O5MT");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test28() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "b7a5127a-8e0e-4ccf-b59e-e0b7d3e19d72"
        )
                .discountAmount(1645)
                .discountPercentage(1953.0)
                .code("jx4Irlp")
                .setPublic(false)
                .setHidden(false)
                .setDisabled(true)
                .displayEndsAt("2021-09-09T00:18:39.000000+09:00")
                .displayStartsAt("2024-06-27T14:22:40.000000+09:00")
                .endsAt("2024-06-18T19:39:57.000000+09:00")
                .startsAt("2020-07-30T04:20:44.000000+09:00")
                .discountUpperLimit(334)
                .description("3A")
                .name("RBV63XS57lt1aSaHx");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test29() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "b7a5127a-8e0e-4ccf-b59e-e0b7d3e19d72"
        )
                .discountAmount(326)
                .discountPercentage(2421.0)
                .usageLimit(1886)
                .code("oVo5")
                .setPublic(true)
                .setHidden(true)
                .setDisabled(false)
                .displayEndsAt("2020-02-18T04:42:50.000000+09:00")
                .displayStartsAt("2021-11-01T04:47:09.000000+09:00")
                .endsAt("2021-09-04T12:09:45.000000+09:00")
                .startsAt("2021-12-20T04:14:12.000000+09:00")
                .discountUpperLimit(3096)
                .description("h2oqbeS3JGCfzyJlJhGLtYWuThgSBQBNc2JZjKKlRkJaEdFjUPWkN70eKvpPXDqq2idqLlKZ8unbIxzmQtcKSawPpoUih")
                .name("ykE");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test30() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "b7a5127a-8e0e-4ccf-b59e-e0b7d3e19d72"
        )
                .discountAmount(5635)
                .discountPercentage(8114.0)
                .minAmount(3090)
                .usageLimit(8304)
                .code("811eIc")
                .setPublic(false)
                .setHidden(false)
                .setDisabled(true)
                .displayEndsAt("2023-05-03T17:42:11.000000+09:00")
                .displayStartsAt("2021-03-18T21:16:29.000000+09:00")
                .endsAt("2020-10-14T05:47:36.000000+09:00")
                .startsAt("2024-08-14T09:38:06.000000+09:00")
                .discountUpperLimit(8893)
                .description("oZAVci1LHsRAMj7HClzmXIWDpDYHczbVK7TEfeg30In83nzMulVcWfQ9U6A0QobnCYH889f5K47xSYGkXgXOP07nJotoOJHiFu90MrGBLbSktt5gU0HEqcdS")
                .name("N7HDznAKCTZi48gntSBDlc4GJUZB8Fj05OXTICpLP59MLeC01G6jAIHsOovbbjCskHO7vinSM");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test31() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "b7a5127a-8e0e-4ccf-b59e-e0b7d3e19d72"
        )
                .discountAmount(5890)
                .discountPercentage(4096.0)
                .setShopSpecified(false)
                .minAmount(9827)
                .usageLimit(1480)
                .code("JmZi1x")
                .setPublic(true)
                .setHidden(false)
                .setDisabled(false)
                .displayEndsAt("2020-06-15T19:24:22.000000+09:00")
                .displayStartsAt("2023-01-10T09:40:41.000000+09:00")
                .endsAt("2023-02-15T01:52:36.000000+09:00")
                .startsAt("2022-01-03T09:19:01.000000+09:00")
                .discountUpperLimit(5571)
                .description("fxyzaVHLYX1as1d6xWcEJdHeBZImGS2OUXtqvZDvEJx85EoGkTeDKgIg6NZpiBxBebQIR0pBl4zxthMCqpC97EyESVlJtfdegKshQUYkpv3jqMiIS8b5pR6wMJVm3fCxLZDz6OEX2Jw6yT0CjeqVhUMZz03kMSqjCWD1ajwT")
                .name("LLY84");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test32() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "b7a5127a-8e0e-4ccf-b59e-e0b7d3e19d72"
        )
                .discountAmount(149)
                .discountPercentage(8128.0)
                .availableShopIds(new String[]{"767ee773-17c2-4683-8e47-dac7b984802a","d7f6d11d-ffda-4752-bdc7-7e925e3c4bf7","dd047e33-29ed-4181-bf30-b6c280586014","550b641a-7517-4608-aedb-8f1f607cf37f","75ff5d9a-cd5f-4023-b882-a56f5792e072","b727b899-3ccf-484c-879a-e7e309c8f49b","d492519d-d78e-4bb4-84ca-f011f7cdba2f","5f6b70ef-e351-4c21-a3a3-1816974e8fc9","9270550a-81f0-4da3-b786-235b3029b824","ec21214e-2128-4d88-a608-0a7f1e21174e"})
                .setShopSpecified(false)
                .minAmount(768)
                .usageLimit(8057)
                .code("DHwBJS")
                .setPublic(true)
                .setHidden(false)
                .setDisabled(true)
                .displayEndsAt("2020-05-17T07:35:48.000000+09:00")
                .displayStartsAt("2021-03-01T23:46:17.000000+09:00")
                .endsAt("2022-09-08T22:27:57.000000+09:00")
                .startsAt("2022-08-13T23:02:08.000000+09:00")
                .discountUpperLimit(2667)
                .description("9J")
                .name("PFjspwC0j9zsNLFwAJjTtaTyfZEFlyFDdcMK3iql6eYh7ty9Bnwn4YuJO2bz89x2LOjT3HOkMQcXQ24KLsys4j7pRgnIDvcIFK2VAuwrHqXpt7kR7iMIlqscXoI1wu");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test33() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "b7a5127a-8e0e-4ccf-b59e-e0b7d3e19d72"
        )
                .discountAmount(2549)
                .discountPercentage(8372.0)
                .storageId("76582e47-e540-4753-a4e2-be9ebfa0152f")
                .availableShopIds(new String[]{"43426f32-d60f-4f7e-abc2-ccc7056ffb4a","fe628d7e-2fec-4c06-b98c-c303ec45e510","93c45a95-2a2b-45e8-9262-b11061794be5","e7f0d2bb-c87e-4152-85bb-8ba664e9fd46"})
                .setShopSpecified(false)
                .minAmount(9379)
                .usageLimit(4756)
                .code("8")
                .setPublic(false)
                .setHidden(false)
                .setDisabled(false)
                .displayEndsAt("2024-06-05T08:47:35.000000+09:00")
                .displayStartsAt("2020-07-22T11:30:44.000000+09:00")
                .endsAt("2020-12-25T15:48:37.000000+09:00")
                .startsAt("2020-12-09T22:52:43.000000+09:00")
                .discountUpperLimit(8374)
                .description("KEJu2CgjsukDf7cN3cFrozTMISeqBUcHO1StNQdNGxQr72DevxNzR61KZL9LvayvlHNyl6L39QysMIuX0nD80D8hwFemGKxdJCI3gabYoBNQGWJuAeI50y5OpW5zyLovZhZbSJNGr6EUQDktLxKjHeWctvSQ5RP")
                .name("DomIkIG4KTeZfmNIYfLQBXNFkdBwJI9lN19izPxwVRI1glf7nbNtk7xtquQ3e8uVugQpd0qQxCsFhheoYcHudyNKOlEsmpZeSCTrMmtO9Tx");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test34() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "b7a5127a-8e0e-4ccf-b59e-e0b7d3e19d72"
        )
                .discountPercentage(6322.0);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test35() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "b7a5127a-8e0e-4ccf-b59e-e0b7d3e19d72"
        )
                .discountPercentage(5776.0)
                .name("Jq93Uqik15oMxdLceedT4DSpCIiiwJPhc7RciCEas6yEVcX5W2REt8npmRZXMPzUtZ");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test36() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "b7a5127a-8e0e-4ccf-b59e-e0b7d3e19d72"
        )
                .discountPercentage(6209.0)
                .description("MZfZFWDbJ8BHGhJBvBQlIeh6Py74pfwckuEhxxpSO9w9MTPVTeLZan6KRlKWwQt3DWGqslDBjiVzWTURz8V9EZcmp03QsHLeyZsVY0Sj6uRR3RjVag8Cr2JEz2550Rm15x5lUJQ9JW3lKtnBvCT9ICG3dVA2c16iYe7z1ziZRkKYL1cbe98MIusx4FrV21mfwf7T4Hsr9og7e8yfdNShxxGmIZIkKgVwGJtfUsa")
                .name("RQL0IPayhfrNXMFm5anwrVDeZYHMC1tkGK5AL83ABpjQ3HasWdjmOEgBphnbeDwoisWTx");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test37() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "b7a5127a-8e0e-4ccf-b59e-e0b7d3e19d72"
        )
                .discountPercentage(6061.0)
                .discountUpperLimit(383)
                .description("0mKhITDASbuE6MQrruwoopR2QALIAxtPzJ8DhgJBvQ2QAVUokYGlJqGOprzAeb09GLeneizGnej3zrSIKRaeOY7JxDidY4ThWDtWPQ6pMTyuq4mvr55mR1aLzH5XHZsz3t3n87KbCmMHOjOzGlB87dOnjvjLQbRBlmuFRMlctLHHgTZGiJJKvSQcqgudr2J3OLBjbC")
                .name("vXfS3cBfKjAE7F413dITHEauNfdTXHd6Wm6ozmmLeClcaK4ZGyV");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test38() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "b7a5127a-8e0e-4ccf-b59e-e0b7d3e19d72"
        )
                .discountPercentage(4999.0)
                .startsAt("2022-09-09T07:00:24.000000+09:00")
                .discountUpperLimit(6999)
                .description("e8hwxNw7V1txniVV9IWtb5tGfSLwVPB7S2hapUFjGzcdSlT6cvzjRh0pDnLatBlLANuj2gBQGy080nLJnNapQwQRIlIIbCNy55OmpBFNcUFDwtwg6yNnU0p3j7vyMRKezwCPkXqcc6mRiQiKJZhzSnc6tJEsjEH5")
                .name("ytMvBwnZsijmU4sohwoYtf1WPZd5qbxnDfhcpIiGVUh6JXeOxElfbpqDUCPQfPDv5Bxexsktxpozzy9EEEvOO7238Up8wIafwHJjn");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test39() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "b7a5127a-8e0e-4ccf-b59e-e0b7d3e19d72"
        )
                .discountPercentage(8123.0)
                .endsAt("2021-02-03T19:23:59.000000+09:00")
                .startsAt("2020-08-24T11:28:15.000000+09:00")
                .discountUpperLimit(8783)
                .description("nUJyvjCRDu0ef12gGMg9jhyjiZpDJLi7hNDy3fGuoxyNzoLVSiS6SR2H81zwFG1uqxiiKuB6ZrWLoI5aUr1pL5q3MKevHfz7WhNdJX6lkXDOPx8c4D9PtKXuq9YBvaUtl9PM83s34AfeMVco32p0VvecCGivmHUA8r8vRhI3tKeJbfhWqdEqqXTBZSAVuydiX30v4FnVVZdsZHngSi")
                .name("0WLXpBF821EyhL8cxal3q9p9IcavxjjoPLhHi7bS7C7PiIkuPOxWAvu4HzUUibzJA41rsIeBRN4Zz775XsP0");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test40() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "b7a5127a-8e0e-4ccf-b59e-e0b7d3e19d72"
        )
                .discountPercentage(9695.0)
                .displayStartsAt("2021-02-20T09:57:19.000000+09:00")
                .endsAt("2024-02-14T04:36:35.000000+09:00")
                .startsAt("2021-06-03T16:07:20.000000+09:00")
                .discountUpperLimit(8712)
                .description("Tg3kUXCAwqRDsJKvPeIKl4ynYoTzMC8aKcnT46A6j2cAcdJqjGyvFagzFZInYlDuZh9XlGeUuDUAN71fFcUlxrrhztzIvi8BhsA6FHP9Z3QdJyF1bSZVejCG6zmxdQeXBJBSTJwWeqsOyKZuGt1SIT35")
                .name("xWpfOqsBerLzyPHHHTs4B7FVqeHzI3JHLrHlNRJKppq");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test41() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "b7a5127a-8e0e-4ccf-b59e-e0b7d3e19d72"
        )
                .discountPercentage(960.0)
                .displayEndsAt("2023-09-08T11:35:01.000000+09:00")
                .displayStartsAt("2020-02-13T11:50:30.000000+09:00")
                .endsAt("2021-03-23T03:27:58.000000+09:00")
                .startsAt("2020-06-09T23:39:34.000000+09:00")
                .discountUpperLimit(3455)
                .description("tVBek1IPKkNuMSxAH1BUAckDL3hV154pjQ7onKNTyOiOSssQJMUBiQiogZU8")
                .name("lG9nHCET8MIIJYm2dNvkfGnO94fXOs5PXogSKSlH5Gt38POio0hY6i8akkFh");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test42() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "b7a5127a-8e0e-4ccf-b59e-e0b7d3e19d72"
        )
                .discountPercentage(1356.0)
                .setDisabled(true)
                .displayEndsAt("2022-03-27T09:00:43.000000+09:00")
                .displayStartsAt("2024-06-27T22:20:29.000000+09:00")
                .endsAt("2024-03-24T13:21:28.000000+09:00")
                .startsAt("2020-04-13T00:39:47.000000+09:00")
                .discountUpperLimit(5198)
                .description("pjC57DRUXtoJNaCdaAtTp6vRfkshvMCzEk5uNjaqX6yffMcGm5Bc78BfwZDjLEd1lRx8zJigRIRB4XgfCeKGFdRYYQNY1psISfd1ahcKBr55AoDhBwBkTHKzxcopr9mGM7nJs8UOCdVXFjYnpt2qd1xgKXhnaaTnkqufu0DRWdDjJ2h6jaR2H3kQBDPoIU6V4SyuseTJFAYEtKbFrzDhPABlo6EHy6bzPI8")
                .name("urSK2i4kbyU621h1VKGGF6Sm8rUhLG2FlgvMa8nUWGEPMqTGVeptsAtPjnEuFoTLVuiQlM5YkxkBx5EORQO5AczPoQt59t3NEFwA0hHYqGb9KwWe3WL5q60HQ2NN3gR");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test43() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "b7a5127a-8e0e-4ccf-b59e-e0b7d3e19d72"
        )
                .discountPercentage(2541.0)
                .setHidden(false)
                .setDisabled(false)
                .displayEndsAt("2022-04-22T16:51:45.000000+09:00")
                .displayStartsAt("2020-11-28T22:56:44.000000+09:00")
                .endsAt("2023-09-07T04:35:12.000000+09:00")
                .startsAt("2023-01-16T11:23:36.000000+09:00")
                .discountUpperLimit(8484)
                .description("4VCww05NicTNaXer6UgcJz2dDejjq8RICZ72PQjNboBH1UWA1XWPIhJgZOCuB6VwDmyaJEnIafY7esrn7TnjPFpZ68UiMUJGiGEqtw16l7zweHN58rOpNMNU7HsH2PWAckub4QHK8sSAOs7HN5xKlsUBkLdFMCPw3N20VsJRXhYrtkdFlqkqhmmCInMNTfIQJJVugcRycQxqdHsTg3rhLCS8RgBvrn3h1jJGRhAae8hHzW")
                .name("R9kTn08q1TzaaWtuwzuvE7IZ5yOpSDL08O6A3WJL9CogbdjmLR2kdiKg5QcW7CeyckGl5wMFGdBU8is23X88YRmaBct5zDr6NU8jPwPqlxw63NJK70");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test44() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "b7a5127a-8e0e-4ccf-b59e-e0b7d3e19d72"
        )
                .discountPercentage(9321.0)
                .setPublic(true)
                .setHidden(true)
                .setDisabled(true)
                .displayEndsAt("2021-04-29T00:24:17.000000+09:00")
                .displayStartsAt("2022-09-09T07:59:50.000000+09:00")
                .endsAt("2024-01-11T11:15:34.000000+09:00")
                .startsAt("2020-11-18T17:15:15.000000+09:00")
                .discountUpperLimit(8274)
                .description("tgKZlLjTe81OBzQvZqrUkpzoyCaAfrWlTJONPtAU7NrtV")
                .name("X8JT2VjsWRGOsvLxESldxE4fxhCbBSLZuNyNECbL1eCrL0kxLJHF3I0YpuTZWVceHQxRCA56CEEF9TUQNtscA2Wdp6LThZllWRAuPgVVdiaF11");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test45() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "b7a5127a-8e0e-4ccf-b59e-e0b7d3e19d72"
        )
                .discountPercentage(1033.0)
                .code("AM")
                .setPublic(true)
                .setHidden(true)
                .setDisabled(true)
                .displayEndsAt("2024-06-27T03:58:26.000000+09:00")
                .displayStartsAt("2020-05-22T13:22:38.000000+09:00")
                .endsAt("2023-02-08T13:57:55.000000+09:00")
                .startsAt("2021-08-19T22:30:11.000000+09:00")
                .discountUpperLimit(9260)
                .description("8gVz5uXQ9FK2XZsfGUMa3ECcrDkChdqGkR1VdTAAJXR6gWZJA6xyPb2t1gybLWQW7av3hVOgY8Rzg9OOxU8LUyGuHXzvBguf0BVb78kmrm")
                .name("ZAC77MPeOs9E5QFTxI4xl5Ks5CK");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test46() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "b7a5127a-8e0e-4ccf-b59e-e0b7d3e19d72"
        )
                .discountPercentage(3688.0)
                .usageLimit(8923)
                .code("z")
                .setPublic(true)
                .setHidden(true)
                .setDisabled(true)
                .displayEndsAt("2022-04-26T09:33:08.000000+09:00")
                .displayStartsAt("2024-02-09T07:32:10.000000+09:00")
                .endsAt("2024-02-11T13:51:25.000000+09:00")
                .startsAt("2021-03-21T20:17:52.000000+09:00")
                .discountUpperLimit(1708)
                .description("BaChwHbGc9O8uFgU7kZcl8ebaS2yADBLOwwCRZz5b8wlDVhgjZIjDRuspAsz3aQ11SkzuxQOh7NN9g5IbxO6K58eyD2W1rg9c2zUP623ezeVwRCqgIlOV8yWqxmd95lPUL2qq")
                .name("I4pBNZv8X179lUgNjTOrzgYkSRN5nvn0HJHqrWKyrI8gSiXg3T3u0MMq2vw1ypwa7PUvZqaFFOQPRaGe9O83iVupp1nvzFyCW8l0jrHPJ2i");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test47() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "b7a5127a-8e0e-4ccf-b59e-e0b7d3e19d72"
        )
                .discountPercentage(792.0)
                .minAmount(6582)
                .usageLimit(1745)
                .code("OMwxQ8")
                .setPublic(true)
                .setHidden(false)
                .setDisabled(true)
                .displayEndsAt("2020-09-18T15:47:04.000000+09:00")
                .displayStartsAt("2022-12-26T01:34:42.000000+09:00")
                .endsAt("2024-02-27T04:45:55.000000+09:00")
                .startsAt("2023-04-10T11:34:09.000000+09:00")
                .discountUpperLimit(2401)
                .description("03sPNsVydTthlPvOfqGoVk33v")
                .name("UGyAi9hCpPEpzzSuiQUQye42FkFCKy9nZfKrHzjLMe3nj5wltQejyL");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test48() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "b7a5127a-8e0e-4ccf-b59e-e0b7d3e19d72"
        )
                .discountPercentage(5259.0)
                .setShopSpecified(true)
                .minAmount(2405)
                .usageLimit(8950)
                .code("gH")
                .setPublic(false)
                .setHidden(false)
                .setDisabled(false)
                .displayEndsAt("2021-12-08T19:37:54.000000+09:00")
                .displayStartsAt("2024-05-22T18:33:07.000000+09:00")
                .endsAt("2023-02-25T01:49:33.000000+09:00")
                .startsAt("2022-06-26T07:26:46.000000+09:00")
                .discountUpperLimit(3551)
                .description("QuT6PA2Mse7Cd1d7d7VK58KEAuiNFz7llEXJruB7ItR09toxNAgp4japOcc3OI1gQlnzK3QKmWnbuj42b0AFGU3MdYxcoVTOKh7YPxTL1CEgZ2sXJETCnXV6kGjPb38axV9tcX5L")
                .name("tPjKNJMk03cTRAamVOBTCM5VD7F6hDsIkjSg6Mmic6qUcylOOt8t8fGSIq7nCQgydHePFZtw5ESiREHRFpcvwhAcPnWO67");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test49() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "b7a5127a-8e0e-4ccf-b59e-e0b7d3e19d72"
        )
                .discountPercentage(747.0)
                .availableShopIds(new String[]{"189e027c-76e3-4c72-8f41-9e6e254bc122","329bcece-2274-48d1-97b9-b14cf1aae164","99ccd25f-1625-4f6d-8626-0ac56c3f8f61","e17c8d42-eb16-440b-a3b0-0c630b22ef4f","351b3b8f-37d7-43af-89e9-0c18c4d8da52","17e27140-bf0a-44da-903c-546d70ac530a"})
                .setShopSpecified(false)
                .minAmount(4474)
                .usageLimit(4464)
                .code("aK")
                .setPublic(false)
                .setHidden(false)
                .setDisabled(true)
                .displayEndsAt("2023-08-11T12:15:27.000000+09:00")
                .displayStartsAt("2024-01-30T04:07:07.000000+09:00")
                .endsAt("2021-03-01T18:29:24.000000+09:00")
                .startsAt("2021-04-07T16:05:28.000000+09:00")
                .discountUpperLimit(7358)
                .description("lE3j4GuxMrkc8pp74igUpszRNJIiW")
                .name("s9ZzMYcB9eLB6L4xdVHPbAGclxWnize");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test50() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "b7a5127a-8e0e-4ccf-b59e-e0b7d3e19d72"
        )
                .discountPercentage(4136.0)
                .storageId("2cb7434e-420c-48b6-af9e-6c04655995cd")
                .availableShopIds(new String[]{"a37b324b-c037-47d4-b886-80937af6250d"})
                .setShopSpecified(false)
                .minAmount(7864)
                .usageLimit(9042)
                .code("5gBGj6i")
                .setPublic(true)
                .setHidden(false)
                .setDisabled(true)
                .displayEndsAt("2020-03-14T13:26:53.000000+09:00")
                .displayStartsAt("2023-02-28T06:08:23.000000+09:00")
                .endsAt("2024-07-09T06:53:01.000000+09:00")
                .startsAt("2024-05-01T19:25:21.000000+09:00")
                .discountUpperLimit(9028)
                .description("icBintFmc48OjbpVQAH93Kj3AdHLr0KTN8gEsLbJTqVmYjXxuuFeNELNjtM8")
                .name("fJlJzVPLNF9VHGqti6HZLXJQjgrGEecvIjd6oGcwfzFKJBufNqi8g4KqNICafUuSbcN3toeavjjqtGycJy9zU");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
