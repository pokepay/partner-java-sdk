// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.UpdateCoupon;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class UpdateCouponTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "98643617-5492-4616-8d92-3e5eaa3a95f1"
        )
                .discountAmount(8569);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "98643617-5492-4616-8d92-3e5eaa3a95f1"
        )
                .discountAmount(6935)
                .name("8UduAdQ5IH0TK2HSa");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "98643617-5492-4616-8d92-3e5eaa3a95f1"
        )
                .discountAmount(8052)
                .description("A6ikNbGO6nv206MCoq10cKjOOAJZbMJkEXTJUvgYePqHLhUyWTkN1F8Xwl2rFV9LPEG0FsEHZ0zFFEN3CsRlByNyR64VEa3muyUE26kLnIwLEQafbBqwyhczkUDSv0LkIzcZbnCm3D96fkss4WwEMOvII6xukRoB486IcnSrXwZGPsDFfbhpjo")
                .name("CvZmit6sG22LWplDlWahPig9MKERKZGyJip4Qp4t6WiXGIWU4TxH2FA");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "98643617-5492-4616-8d92-3e5eaa3a95f1"
        )
                .discountAmount(8042)
                .discountUpperLimit(1963)
                .description("tbi1KGeJyFNO2KrkgbsXcbEbgPoZFbPh9J838rL1gDfq3VsJIZMJTMvIMK26sORVFvF51NUOj8RI7n9XLkQqGxRAu4ClCzUyuIEYrXjU1Rl6vF7n9cWf5sF0ARyOKP3HCUhOEdj0FvKzWLO0X17seRboXyaTp5fxFISfuSj9R4g3InaFkgEEKedrMwdHukpCicHBj64f1DT6D6")
                .name("Mien3I4QpNgQKGBSiEs2F3MGwgLve3TZFNm4S");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "98643617-5492-4616-8d92-3e5eaa3a95f1"
        )
                .discountAmount(6201)
                .startsAt("2024-05-22T11:46:17.000000Z")
                .discountUpperLimit(7049)
                .description("Imcm3HEYVUSqsC3AriSwCEB0Kew5ULKwo1UdPl33Js1Kuu0UegnQjK5K12MWvCvA9DjpAvmSouPF8sEd3lBtNl0JB2dKxVrlXLEonC1KsoREeh2RXqHgFOF3b7VdwEdOPGXSe9OOoep5LkQDV7qJw1By6uFHkBHhurHoZlcvR7Q0TdgtR89zH4BRb4Lx")
                .name("Yp1VFXi65IWH287FkS1AdoZmrqVFQp8fp9IpDGNT32XXjSeAsfsowmrnytFnDNPErJC0T6j8TSBN1GRIxfJ3UGUUM2jHDzbRjTfUU5d5AtO");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "98643617-5492-4616-8d92-3e5eaa3a95f1"
        )
                .discountAmount(2829)
                .endsAt("2021-12-12T09:02:22.000000Z")
                .startsAt("2023-03-24T23:29:09.000000Z")
                .discountUpperLimit(8481)
                .description("L0lEeYXxSLgJV1GwAOqdc8zzTPJEfMbaKIEhnBHfV6tGM4VGRurvyE3ASr9IOsPHz4Zd6uXHhCBvnC8wCQDn5TxePGCKc6zq0vbsfAwCBSEwRfx0DBbiZykOey7zjJ6OyJP83x3uLLTOPjH6jjFnlRSGQkOLow4uOPR7jYUkie5Rbdop3nbAQNR")
                .name("sJaqAeaFh0mPOgCiw12joVskUHIrzFx85stT5X2fdTsebRuLVbzPU8r1TG2yJEOhnrWkQVh8G8vXFKeuF0FhTncNlMmgEuaHAH");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "98643617-5492-4616-8d92-3e5eaa3a95f1"
        )
                .discountAmount(1922)
                .displayStartsAt("2023-04-09T08:14:22.000000Z")
                .endsAt("2020-06-03T00:04:43.000000Z")
                .startsAt("2020-11-04T09:07:58.000000Z")
                .discountUpperLimit(8471)
                .description("z60OEH7JgjiAw3cGaLL5KHpinnRK5y0OzJ9Hvf2cVYRMoN8ciCbZWnzcDnK4LA4gWzsFxrEWGQmIqwq80GWYOCdqp3aMw45RftnlC78XMJnZ0CKAQudtFEN83UK6KJ482qLWZU1lTgJBoEtylA7LcgVEYNBH5KGkiTeGrXAkdlmbDvPcxbP00J7QmpOVA7MePtYYSm3L3WBUYIGLXhu0DvMLxvuDjJfJxeesKkwbEHxkNigyccRVu")
                .name("axHAAztkflrbX507aitxdTcYjjCJVatXW3s3mbWjjaocKJS9JHlwFlJcsltjjmodDQEUxDaghv7DnSC5Rfu0C0uKF");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "98643617-5492-4616-8d92-3e5eaa3a95f1"
        )
                .discountAmount(8592)
                .displayEndsAt("2024-05-23T10:02:09.000000Z")
                .displayStartsAt("2024-01-20T05:34:47.000000Z")
                .endsAt("2020-05-11T15:53:17.000000Z")
                .startsAt("2021-11-24T22:53:36.000000Z")
                .discountUpperLimit(3664)
                .description("PjblE3KxRrUTFSpI6jwJUUxrUc5YmXel2A200gV6FxYfWwCiS0MuCLswxDV9drgRKhLSvZ2KQORxMHroQo6jM66W2y8KrZ8xMlNalvWasLjNh8s14cZJ7e4Q9GCUyL2v9u3mWzZwKqxzujrUlmkKRdRXeieY6AmMB38WCqGZQWNed5BL6m650n0RmhPNf1QdSFaslICN4xIeeSgcGsS3PA5BMU547lNJdN573CatnkU3")
                .name("ijXWL36Ne9BIyD0VsxUMLq2pynj2i9JShHMs7dpHbhmzmDvsuxdQFF1b9FFVSxNRhY3CeG383Fyff0GWuf");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "98643617-5492-4616-8d92-3e5eaa3a95f1"
        )
                .discountAmount(8580)
                .setDisabled(true)
                .displayEndsAt("2022-09-29T02:55:39.000000Z")
                .displayStartsAt("2021-02-10T01:03:09.000000Z")
                .endsAt("2022-11-06T07:41:41.000000Z")
                .startsAt("2020-04-06T13:06:29.000000Z")
                .discountUpperLimit(6001)
                .description("G40T5H1YOyXeD7lp3hQ7iTUdtYXMwyZtYN7NcCeDXI01ioT6dE59eFWe4PxHJhHM6PRObQxj3f4w8El4HGgfInUuZUZacdXJKlldoDuv9TA2XHRXocL0a2ENjq4YdkJGWgFmKTEIA1MAf2HgecI")
                .name("l74FyRST7ScfdaiXI0aphnQpmaEH46JpxMwBWB66twUX");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test9() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "98643617-5492-4616-8d92-3e5eaa3a95f1"
        )
                .discountAmount(8570)
                .setHidden(true)
                .setDisabled(false)
                .displayEndsAt("2020-10-21T09:48:49.000000Z")
                .displayStartsAt("2023-06-28T22:41:05.000000Z")
                .endsAt("2022-06-24T14:40:49.000000Z")
                .startsAt("2021-09-05T08:59:36.000000Z")
                .discountUpperLimit(5166)
                .description("REjqmyqJkEdfkYviMgBpZAYBbcvRZzaI37qk5Qpl5Gz36NQavWZXSE0IrKdpz0FXntwLwsP6PlvtKfS7zk6Hoi0oeAT0NWEwBSET0oVnBy6crZKnvytNg93oYMrwaGFqX3wegLSKGRpqSEuwLWT9k07B088FFfNZznrcL9APcDhFVXImIJBKStcO3wB304Jmf05hgJ")
                .name("rNiPO7Acqsb1X8oQj9wf9SU4WjLK1VT02GEDFloz09QK5UFuC");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test10() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "98643617-5492-4616-8d92-3e5eaa3a95f1"
        )
                .discountAmount(9501)
                .setPublic(false)
                .setHidden(false)
                .setDisabled(true)
                .displayEndsAt("2021-03-27T16:01:28.000000Z")
                .displayStartsAt("2022-01-12T06:57:26.000000Z")
                .endsAt("2023-12-15T21:42:57.000000Z")
                .startsAt("2022-01-25T09:25:13.000000Z")
                .discountUpperLimit(3382)
                .description("yQZu56A1wWzKTTxm1brwQKhHT3R75Hu8YJJm39h1WaxTt5SssiAjKWyz1Cvo6cvEGDQNsufaSx2VVAwQqeQUNQCi45yyQTl9wTWmjZWPblWstjkw")
                .name("C6ll5fjzCHapR04ADVEFmUehgiDu605XKZkJCbV");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test11() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "98643617-5492-4616-8d92-3e5eaa3a95f1"
        )
                .discountAmount(4884)
                .code("Nuqq")
                .setPublic(true)
                .setHidden(false)
                .setDisabled(true)
                .displayEndsAt("2024-01-19T14:39:22.000000Z")
                .displayStartsAt("2020-10-29T23:27:00.000000Z")
                .endsAt("2022-03-24T20:14:37.000000Z")
                .startsAt("2022-09-21T08:59:37.000000Z")
                .discountUpperLimit(8700)
                .description("VdHFVHz0uIFKJoDWeoZQYdDyUkA8HMjkxTYcusA1RKieQ1ldipC3qoQ4XwLIDsqZ3ZF38hv2ikQGfIfeAIGZfO7OrSr8B2QPQ9Y2Rpsj0heI1pcWBx1T31cQtfbPCATbfETgM8KooCtS8z1fc4bmpdjKCTfj1GK9RSuRp80JIGIfZb0zQJuIdXR7obZEoGLvyrYRSePLUjWmS1Vfe4rF1Hr4pu5zkebHCq")
                .name("bvDaj08T6AqfU9VC96cIIeErItINWil5tFd5fwAxEmAXCuaDk4OeOYMd636fXlQmJ9");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test12() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "98643617-5492-4616-8d92-3e5eaa3a95f1"
        )
                .discountAmount(8882)
                .usageLimit(5765)
                .code("bnV3FEVOMM")
                .setPublic(true)
                .setHidden(true)
                .setDisabled(false)
                .displayEndsAt("2023-01-27T01:56:48.000000Z")
                .displayStartsAt("2024-07-13T16:36:59.000000Z")
                .endsAt("2023-08-13T04:41:18.000000Z")
                .startsAt("2024-08-07T10:48:03.000000Z")
                .discountUpperLimit(6304)
                .description("SgfpnmC2KuXyRgGfUfNENrDu8T1J2YZjgzjmCRB6BbdWS6JCIuNd5OFNrZXER72QaNrZpzYfcTDxwidoKxhgH4IlA44068ievlutMBS788il7UEqSzLy9xJxJq4hHbOAXXY")
                .name("VgVjKzFhmxuYV64qe5o2B2OlLXdk5kJbuw4YuJbyUdwtweakDyg0TFsZujDlCiTABlfIhphFt9MZHKK4Bljx7sJ424DF7dkeP");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test13() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "98643617-5492-4616-8d92-3e5eaa3a95f1"
        )
                .discountAmount(4539)
                .minAmount(4628)
                .usageLimit(8984)
                .code("prAJuqXJL")
                .setPublic(false)
                .setHidden(true)
                .setDisabled(false)
                .displayEndsAt("2020-01-05T12:35:41.000000Z")
                .displayStartsAt("2022-11-05T08:42:48.000000Z")
                .endsAt("2021-09-27T23:52:02.000000Z")
                .startsAt("2022-03-31T21:30:07.000000Z")
                .discountUpperLimit(1625)
                .description("53kHtf9cD7bpNKlOmIqFEpEzlkbZXsHeK96R7zZjofXop8q4Bfps6VchHwOSBaSPaNKxM4bPYPan8UYIRAISeS032nbwP9uwXrTB")
                .name("WthKP8SFB1epaCsenfTVlWMFnuMgJI5wZ1cKhV86");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test14() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "98643617-5492-4616-8d92-3e5eaa3a95f1"
        )
                .discountAmount(8499)
                .setShopSpecified(false)
                .minAmount(179)
                .usageLimit(4444)
                .code("LMEPLj")
                .setPublic(false)
                .setHidden(true)
                .setDisabled(false)
                .displayEndsAt("2024-05-19T14:02:16.000000Z")
                .displayStartsAt("2021-05-13T02:34:55.000000Z")
                .endsAt("2023-02-20T00:05:19.000000Z")
                .startsAt("2020-01-17T07:31:07.000000Z")
                .discountUpperLimit(5181)
                .description("E7ACXnugqJAsKtBEhfGR87GnzBbDtq5K3lfoJShMC6uD2oZ5QpD7GXwDffXUtXBf9of2MaByNhkorzLzXS")
                .name("7sax7iYOPlAj5UlMDxo6iDarlMDzJC7wMAkFY");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test15() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "98643617-5492-4616-8d92-3e5eaa3a95f1"
        )
                .discountAmount(6440)
                .availableShopIds(new String[]{"8903de65-e06d-409b-ab7a-415a3bacd7f0","23dccdf6-20ad-4c86-848f-c8763e77e2ef","3d449d5c-ffe7-4c0c-b012-ec6c8d2cccbb","85d79f04-a867-4a6c-8c76-8532d645b254"})
                .setShopSpecified(true)
                .minAmount(9057)
                .usageLimit(7685)
                .code("OF7q")
                .setPublic(true)
                .setHidden(true)
                .setDisabled(true)
                .displayEndsAt("2022-05-02T10:44:14.000000Z")
                .displayStartsAt("2023-05-05T19:51:56.000000Z")
                .endsAt("2020-12-25T09:57:39.000000Z")
                .startsAt("2020-01-10T18:15:38.000000Z")
                .discountUpperLimit(6999)
                .description("FW8mYG8iBpA9wK7FerKmMDJDN9kjnE")
                .name("AtWkM10yTZC3mt5NbCfjtxFXhJHyZxe38yvM1SEczLfO");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test16() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "98643617-5492-4616-8d92-3e5eaa3a95f1"
        )
                .discountAmount(7859)
                .storageId("2cdaf362-15a4-432c-8e27-a8251a6cb20f")
                .availableShopIds(new String[]{"d6c31202-144d-44d3-a075-5acb4c302ebd","1128e664-2df1-4b33-86f3-f609ade1300e","61052515-5082-4f28-9eec-177d6ab7c647","d8952262-d18a-47eb-8807-51264406a515"})
                .setShopSpecified(false)
                .minAmount(958)
                .usageLimit(5795)
                .code("xbbT2umOR")
                .setPublic(true)
                .setHidden(true)
                .setDisabled(true)
                .displayEndsAt("2020-12-23T22:29:05.000000Z")
                .displayStartsAt("2021-12-10T07:01:50.000000Z")
                .endsAt("2020-01-27T09:11:32.000000Z")
                .startsAt("2022-08-29T03:00:12.000000Z")
                .discountUpperLimit(7014)
                .description("kPqeu7VG")
                .name("hCxzDjEPJsArCV0qEvJPpVoq77PuYo1FVSdDE8cTf3i5qFGBCHYpL8ODBvwgaMAc0JPVvhl1tkrYQHQhhRs2PIaofbMQ1Wyxx6iPX8wNVpCNUyiEzApKM66ZkEO");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test17() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "98643617-5492-4616-8d92-3e5eaa3a95f1"
        )
                .discountAmount(2060)
                .discountPercentage(8252.0);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test18() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "98643617-5492-4616-8d92-3e5eaa3a95f1"
        )
                .discountAmount(6260)
                .discountPercentage(6255.0)
                .name("1oTpzcZyDOIWVwoFQc");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test19() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "98643617-5492-4616-8d92-3e5eaa3a95f1"
        )
                .discountAmount(9817)
                .discountPercentage(9826.0)
                .description("DKlivyrCrMwSNsOLmKdqXCCeTbwp9jzAmkVeybVqp1YrzurkqIAwcJ63x2WplkqrFdjX6CETl764u1bEUuZsZXEigsXHGq2ofRToY5BXgCjIyZIJEzXmOEMtSXxzZokGYkRiArikWZSvWA49o8HQUEwypAtZsgSDOAS6m6W4ycEK")
                .name("eHr4636lRXTr2iPpZt0j1CI3l6J30qBjXV2f99mPOolq1eiW9RuNHXLsbYmrfHw");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test20() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "98643617-5492-4616-8d92-3e5eaa3a95f1"
        )
                .discountAmount(1408)
                .discountPercentage(933.0)
                .discountUpperLimit(182)
                .description("AehvKLu9jSykyDMxjQhXvqsNkUwpnxOJbMzTMi5NaDqvIkEgkU1iGJo4Veu1nD62pEennAfXO8IbuWWi93UYOzWoEzm8A2AGl9yivXZBxfQ6TXMiAoASOIgsAFMRnA6RqJv3Yoi1HNQ6SUUxfHdkFZrSjoj4E906hjOO")
                .name("DSKfXhRhf12fH18u3lWSr6bxBxhq8hzLJKGl7pegu99iLkGceRH09p3Djf3UXXM3TuFXvJTrk8Ursx5VM8uakcEIyxQz7D");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test21() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "98643617-5492-4616-8d92-3e5eaa3a95f1"
        )
                .discountAmount(6289)
                .discountPercentage(5503.0)
                .startsAt("2022-03-22T13:16:43.000000Z")
                .discountUpperLimit(8449)
                .description("6SGfEdpD0U")
                .name("VkFLTmlxp8SI9cXescrmSD5nkp7THGlyH3t2HB4wHFbCGx0Xzqx2wtaKpu1qdmiKn22F3ctIsxTTV24W3iM");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test22() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "98643617-5492-4616-8d92-3e5eaa3a95f1"
        )
                .discountAmount(826)
                .discountPercentage(5907.0)
                .endsAt("2020-01-10T04:04:58.000000Z")
                .startsAt("2022-11-05T13:54:18.000000Z")
                .discountUpperLimit(359)
                .description("Caf4v1F7zb24TvVYyzGoNYLIXxqonkMGqXlJ")
                .name("pJRQwp9nn9cv0p2uygmHKqGnn");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test23() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "98643617-5492-4616-8d92-3e5eaa3a95f1"
        )
                .discountAmount(6817)
                .discountPercentage(2689.0)
                .displayStartsAt("2020-05-21T18:56:37.000000Z")
                .endsAt("2020-01-04T10:37:01.000000Z")
                .startsAt("2024-08-02T07:28:33.000000Z")
                .discountUpperLimit(7878)
                .description("to3ZtBMyDD0JldWFE85ZjbUaTENhmx5ChLqBvfWnrg6wEB880lMBDEtofOwuX4DmXscPUoeV1XH78h5Guqwmdx9H0OP7RXsy9p5y2A7XdzXIFXZbjsiiNiXZ0lFTg0buQwKeaQ4HWfPuDn8vtLGTKy9baAX")
                .name("UrNxQgJv2d1RjRDvxxlQFhM2eopmIlmvqzqnGOYbg6rdqjemTbEPE7it6nxw8VlzyCNbz8zcALV0qfahEqSWpbWk8lIjmXf3crokuVBQQlsA8T5nZ");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test24() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "98643617-5492-4616-8d92-3e5eaa3a95f1"
        )
                .discountAmount(8544)
                .discountPercentage(1041.0)
                .displayEndsAt("2020-08-28T09:26:45.000000Z")
                .displayStartsAt("2023-08-28T18:10:27.000000Z")
                .endsAt("2022-11-29T12:21:33.000000Z")
                .startsAt("2020-03-08T19:47:16.000000Z")
                .discountUpperLimit(8307)
                .description("HuPmGiUoPteza9Foxx3GETJuunMNM7JUVu7YgDI0zSm63cU49za1QJALcpDZJ7YKoaGZqFQRMYj7eI0OiTgfPr68fP2A8RCqVjIMZulltZtjgMfuD")
                .name("n3QgsidEuf2NvBHeZX8hYKnrzJWptMhyWUi64YZbGeyCSFHt3mcrCB8tq8q2IVY2UPxEK8mwHnigIC2xteLEmOps6u4P22rjT4dupTBgLrwJlYmSqD3jh0Kto");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test25() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "98643617-5492-4616-8d92-3e5eaa3a95f1"
        )
                .discountAmount(9376)
                .discountPercentage(4837.0)
                .setDisabled(true)
                .displayEndsAt("2024-01-04T06:44:39.000000Z")
                .displayStartsAt("2024-10-02T12:04:03.000000Z")
                .endsAt("2021-02-16T23:36:22.000000Z")
                .startsAt("2020-03-04T13:25:02.000000Z")
                .discountUpperLimit(7223)
                .description("wYe7b9HTOawWBmOJlSRN9rogVZwJO2xNcltqUbvpNyoJI0vqJ8n0oUjQYsKaRMsrJUacY2rYQO4gmGHCfbUV5BkcqYiSNlDYC6MEWefziiHI3EykNpjwCPjAkzyY2kmUe2JJ53U3N6F0e26pbO3HttlG4e")
                .name("yiatMI7VF3dtugJSz1Q3v");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test26() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "98643617-5492-4616-8d92-3e5eaa3a95f1"
        )
                .discountAmount(8030)
                .discountPercentage(5262.0)
                .setHidden(true)
                .setDisabled(true)
                .displayEndsAt("2022-09-28T21:37:20.000000Z")
                .displayStartsAt("2023-07-20T05:43:11.000000Z")
                .endsAt("2023-05-04T18:20:50.000000Z")
                .startsAt("2021-09-04T09:10:55.000000Z")
                .discountUpperLimit(9447)
                .description("FsW05W19aXuGVVRQlUVJv9CZ2ZsBhmJBENJ2Jp2YLnPueitIaB8AWaFb8JKCZbl1FLUJSG0fudQ9bvTSzMBL1Qigyh82R8yfv5oZ1A8LucSTZwJytxSEpRfXYxFxMDsqe8NITOun")
                .name("WJGeGMfsCgwJoSsvq0p2vMuqT6yOdp5xmnGGOh83wDY3Y");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test27() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "98643617-5492-4616-8d92-3e5eaa3a95f1"
        )
                .discountAmount(9044)
                .discountPercentage(5553.0)
                .setPublic(true)
                .setHidden(true)
                .setDisabled(true)
                .displayEndsAt("2020-01-26T06:26:17.000000Z")
                .displayStartsAt("2022-11-02T01:42:53.000000Z")
                .endsAt("2021-06-24T12:35:58.000000Z")
                .startsAt("2023-01-22T21:35:42.000000Z")
                .discountUpperLimit(5471)
                .description("5jqThl0v0LlAw1sxsypKPTUBVqh1Y1karSx9kbbfwykuboyLPrrY2btuxHx9YophvSLqEzRt6XTR3oDpLSuhWG")
                .name("p4IuNXEvAYv341undTljbWPhfpiwPMjupC65xVDnAJbsKD6b895iftqbY67Ut2zsAKH6lKT6gJXbaEKAddoU");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test28() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "98643617-5492-4616-8d92-3e5eaa3a95f1"
        )
                .discountAmount(5837)
                .discountPercentage(7725.0)
                .code("0CR")
                .setPublic(true)
                .setHidden(true)
                .setDisabled(true)
                .displayEndsAt("2022-05-31T19:31:33.000000Z")
                .displayStartsAt("2023-02-28T10:08:45.000000Z")
                .endsAt("2022-02-21T00:31:29.000000Z")
                .startsAt("2023-10-02T22:25:23.000000Z")
                .discountUpperLimit(2989)
                .description("DeoQ9lXXELG9oQdgpEse81VvpXr3HeuSevupI3Lg6cydG4")
                .name("CQY3zROLCcC3cDzGwCmJXHiF5C");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test29() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "98643617-5492-4616-8d92-3e5eaa3a95f1"
        )
                .discountAmount(9717)
                .discountPercentage(9468.0)
                .usageLimit(7920)
                .code("0Hph0EUC")
                .setPublic(false)
                .setHidden(false)
                .setDisabled(true)
                .displayEndsAt("2022-08-18T13:57:47.000000Z")
                .displayStartsAt("2023-02-22T19:34:01.000000Z")
                .endsAt("2024-08-16T08:03:14.000000Z")
                .startsAt("2023-04-06T10:00:07.000000Z")
                .discountUpperLimit(7006)
                .description("LYnE6HiVXoG09ihrRj4aejWMyEn4Q3X3BDxBJJ5t6h3IPcBKQDcagEkitF8iACEva8PGaDArnv6F3HhJclpvEl0kBLWjkCR0Mj5I3Hqz506kx1IdZKDkCNCl989Inr9h5b")
                .name("KrK2A0mcFTtdvdsEkzDVoxJr0lAnMovtOnbZ");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test30() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "98643617-5492-4616-8d92-3e5eaa3a95f1"
        )
                .discountAmount(3254)
                .discountPercentage(6072.0)
                .minAmount(8091)
                .usageLimit(8638)
                .code("JstsOcxw5")
                .setPublic(false)
                .setHidden(true)
                .setDisabled(true)
                .displayEndsAt("2021-03-10T22:22:52.000000Z")
                .displayStartsAt("2023-10-02T15:46:06.000000Z")
                .endsAt("2023-01-29T17:10:48.000000Z")
                .startsAt("2022-12-29T10:13:04.000000Z")
                .discountUpperLimit(2215)
                .description("omYIqjFLKdIYieVX7m2aCCypluKCuWAlkVHsDkHFJvihW5VcQOv2mc")
                .name("2ISnCuuu6HEZICTUsFd55cysKpzPw06buTFvYo");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test31() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "98643617-5492-4616-8d92-3e5eaa3a95f1"
        )
                .discountAmount(1678)
                .discountPercentage(2946.0)
                .setShopSpecified(false)
                .minAmount(2440)
                .usageLimit(3333)
                .code("bGw6jV")
                .setPublic(true)
                .setHidden(false)
                .setDisabled(true)
                .displayEndsAt("2022-01-02T20:53:06.000000Z")
                .displayStartsAt("2024-07-26T06:22:27.000000Z")
                .endsAt("2021-10-22T12:20:11.000000Z")
                .startsAt("2020-03-10T15:06:45.000000Z")
                .discountUpperLimit(163)
                .description("NyPqoWcQPdnYsCcbQIY2KFXsspdkpVkTBJa3OTrsXs88kJNoIZazm0lWPTZ7efHVp4Du6bqVzq0H9hNDIpWOGRlL4QDCIWrLzYwdZH6RYisLngmui2yyfAvCUPPfC6gPSyCF")
                .name("nlF5wS89FXtStGksuJSc3uI6YbNMb4YSuPWKo7xO0kav9UABs7zcSSckrHrP7zrKa6Deu24AbEENpv2mR4vcFbZYPGyrsGLqJFlRMGfDCis");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test32() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "98643617-5492-4616-8d92-3e5eaa3a95f1"
        )
                .discountAmount(3006)
                .discountPercentage(4902.0)
                .availableShopIds(new String[]{"771fe6b5-a671-4848-9798-2a7e10005920","05e9ee26-7344-43f3-8de4-1b1aa013f20a","61a3f6c7-169a-4e1c-a38d-c540d742fab7","672494f7-c7e2-4854-ad4b-17459fcc1670","89e2210d-0c14-4aa9-981a-54faa24d7779","5a6439d3-9dfe-473d-b1a1-378c95ad3002"})
                .setShopSpecified(false)
                .minAmount(9253)
                .usageLimit(611)
                .code("4sXP")
                .setPublic(false)
                .setHidden(false)
                .setDisabled(false)
                .displayEndsAt("2022-04-17T00:14:56.000000Z")
                .displayStartsAt("2021-01-02T13:59:05.000000Z")
                .endsAt("2021-11-22T18:07:25.000000Z")
                .startsAt("2022-05-31T15:32:30.000000Z")
                .discountUpperLimit(9623)
                .description("uwUqi64YRTYtsOeEN9XbwlgwBy5OkIYkbdAf4PBqh2Y5zV0C85Vn4l2htJKp8EeWwIbRZU73CECtq6YH4jkVjZI7iaSuegvmESb5ZkkQma0HXRKUqv4lzkwZF")
                .name("tSWx4aRECgS2Rzs2ylIq5ZtrGXVCQUhbREfojZVoiIjURbvF5cuoyvA3tbiunsY6SNRraYwc8QDfAEfV4F8XUQw7FOCvHUkEBp2LxsthHBe9EWUoT5QLe9Yg2CBY3r");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test33() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "98643617-5492-4616-8d92-3e5eaa3a95f1"
        )
                .discountAmount(8803)
                .discountPercentage(1126.0)
                .storageId("7a404fc2-a15c-4c75-a5f3-1c154e869d05")
                .availableShopIds(new String[]{"11a110a8-b4b6-455d-9af5-b9c8ce433b13","b84e9ca3-2b91-43ef-a210-58f9c98ad1fe","799609ee-c230-4489-903d-6e8913d2e96b","451d5c3b-b059-4dac-83b9-7e12bc5b9d1d","5d351174-5b75-4081-a5b0-1bb877aeb5c1","1bff186b-16bb-41ea-84c3-d93e56c3e5b0","2fb33710-5185-4fba-97d0-1ecbdc5d18e2","4fa0b651-b4a8-43ff-9903-39a364466b98","42f8d5f6-bfad-46be-bb83-058922628a04","29110f8d-5059-4bef-b739-5f5c305bea46"})
                .setShopSpecified(false)
                .minAmount(8904)
                .usageLimit(3294)
                .code("zD7S")
                .setPublic(false)
                .setHidden(true)
                .setDisabled(false)
                .displayEndsAt("2024-03-04T08:18:26.000000Z")
                .displayStartsAt("2024-02-20T15:40:54.000000Z")
                .endsAt("2020-04-15T08:33:57.000000Z")
                .startsAt("2023-12-12T01:24:30.000000Z")
                .discountUpperLimit(5315)
                .description("pGLgUAKK4AYXStTHGYGCT6FSvry2ciGzpWdg5yn158N5eaT1YQUtPEMBFK5RCvbOFISTKPBIbnB4Il")
                .name("VfzKQeAZtwqv4AGYkQ5Y");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test34() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "98643617-5492-4616-8d92-3e5eaa3a95f1"
        )
                .discountPercentage(9978.0);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test35() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "98643617-5492-4616-8d92-3e5eaa3a95f1"
        )
                .discountPercentage(3445.0)
                .name("0mrMzlLTVYxU13omHKmdh2ng7xlmB0D7qlClsr3peE1RPsdDZEoaT5osfv5Au45ikmQzjXEIrL5tEVsP");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test36() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "98643617-5492-4616-8d92-3e5eaa3a95f1"
        )
                .discountPercentage(8978.0)
                .description("ccciqGzpCuGxgjotbAnDFm6nBFTBcp5MgKi6djde9q9Gx06zspIhW3gmaN6JcrvmX5G7cBGoNqTURH3hLLIVR7YcRrTeQOsLdvK2PUyIdpshyxjFJxJ7Fcj7Ywb40WRFS5iP8DHnWS95dKYCDWjMDqXUFGoRA4XvfiL62Wv2vl8")
                .name("JafcwBDpLTRN1a0lar5cvmWk6HP3Edv56q9t5VGuIJJqB3hC6IgJljp1y8KOJgfu4WFT3sPLKGiMRgfz5jiMdvRW63Z9043h9SU3fTD5o4Kn6TQ5Ps");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test37() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "98643617-5492-4616-8d92-3e5eaa3a95f1"
        )
                .discountPercentage(9928.0)
                .discountUpperLimit(1593)
                .description("tmnNiOZyV9AO3DnB1YRES4xlc6449ibwy8gDnWqdIP3eIh1PycrJFKeRKa6OogwkyZYeik5qw2qVOD7lJwoEqJ4uimGtF4vDevDABoV1497oKjyplKXUyjuZoAdZaiUShsjoKemD9IJVji3EhQ10nakJ4Xx7BosawhL51XW0ltZ8tyBqdUl09HCPEoMCgQwCdLCVxkfS7LC09h1a33P4feIw8r")
                .name("kq1IJcIVXzbXoLITUciADNRcm8cr7h7uvpVmJgh2hspBOtxaFVpQwu69vaYb020lVhpK1ujAV4SIGQk");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test38() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "98643617-5492-4616-8d92-3e5eaa3a95f1"
        )
                .discountPercentage(4048.0)
                .startsAt("2023-02-25T20:09:17.000000Z")
                .discountUpperLimit(358)
                .description("a5YJsZSIV5H0hKFZRjFJsBJwxE5ymHkkfvwj75uGxXyxLiKv")
                .name("yAHQ0Cmh0GR2iNpQgbrTS2HEffP70D");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test39() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "98643617-5492-4616-8d92-3e5eaa3a95f1"
        )
                .discountPercentage(1429.0)
                .endsAt("2023-03-24T15:14:16.000000Z")
                .startsAt("2022-11-21T09:12:45.000000Z")
                .discountUpperLimit(67)
                .description("ohTMu269OO6DIw88je3Px2M6UQ20lAXsAZIDxFXqpctZUoXMEwvfZIhfCcdWRRWKBpAMRk3KT9aHDvn680BNVo61whu52VEWHzeXnCqnnjKe2ZokcQxt9okwN5c4Mkgq5YYKEEntoCEiLAHJ2sW9FitjutUJJsIkCXGENUTkzcX2ykkKJlN107OaiUpqdHMS0BnQNQ8yntRPdiO7nDWAmm")
                .name("XsETvex6EwUtMqxtCSMEZWLR3IYMZqZQp71KYV2dqAhSRH0jBaTj6CKr7da3H");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test40() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "98643617-5492-4616-8d92-3e5eaa3a95f1"
        )
                .discountPercentage(9087.0)
                .displayStartsAt("2022-02-12T00:52:45.000000Z")
                .endsAt("2023-05-13T08:40:49.000000Z")
                .startsAt("2024-08-02T17:07:25.000000Z")
                .discountUpperLimit(6290)
                .description("DSrYQmTFD8MK4LhwIRladKEnUCUBMTsHjSLXQWZdqZHXOS9NchMxuvMOV5pE0ThIcNVnpd1n04FvafoOT5XflXygJfyBJl1nws6Ne3S7kdpHli9FCf9")
                .name("vj51iwXi5vVkai7fMidPllBkchJ2ELHNBkuEPtWGn");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test41() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "98643617-5492-4616-8d92-3e5eaa3a95f1"
        )
                .discountPercentage(1850.0)
                .displayEndsAt("2023-04-13T11:52:53.000000Z")
                .displayStartsAt("2021-07-26T11:21:57.000000Z")
                .endsAt("2024-06-30T03:27:13.000000Z")
                .startsAt("2020-02-14T18:14:30.000000Z")
                .discountUpperLimit(1447)
                .description("tknXv7iBjpuz8kXfTQVtq7nYSMGg6A5q48d0VvhbqvZRxaI0AVDH5phIrM988xOpACBuWehCLI5Ithzpo1sbw0fi8Tfl4MiezYuuDN5NO2HkiJUlQ4dKgR3uo3pyHQ")
                .name("KCLEzAV2HW0T6wtgFowhjkpuax7inTCKJlAlkDX0z");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test42() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "98643617-5492-4616-8d92-3e5eaa3a95f1"
        )
                .discountPercentage(2100.0)
                .setDisabled(false)
                .displayEndsAt("2023-05-19T00:53:00.000000Z")
                .displayStartsAt("2023-12-25T17:43:44.000000Z")
                .endsAt("2022-01-27T15:06:39.000000Z")
                .startsAt("2020-04-06T00:43:01.000000Z")
                .discountUpperLimit(3633)
                .description("pGDCB7WpLioRLUylhwp3jBXylmnzTDYQPTQEhEDpiIl88uXhFr9tzNaCFLhrW7Qg63LOoyDRk2frbKYDtHXRSpeSviFk4W1qsOLMcNwe8KEeqmGGreSt4nt1ybC0Ywm3a7y1jkUDzYl")
                .name("QVbUnnRBBQRDsGnvgO2bodBPeKpRFsQIEwGMkE");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test43() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "98643617-5492-4616-8d92-3e5eaa3a95f1"
        )
                .discountPercentage(3613.0)
                .setHidden(false)
                .setDisabled(true)
                .displayEndsAt("2021-11-30T21:36:02.000000Z")
                .displayStartsAt("2021-06-16T21:49:18.000000Z")
                .endsAt("2020-07-15T13:10:21.000000Z")
                .startsAt("2021-05-03T22:35:12.000000Z")
                .discountUpperLimit(4126)
                .description("OKbpkXgOJ3P1nM9riBWugVW8sRaEhx8aJkSJHuUfzU3cxqLSG8S4a")
                .name("P0CNMNfb6VowWUVfzovzP7VL5ebcijLtVhmlM6kB");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test44() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "98643617-5492-4616-8d92-3e5eaa3a95f1"
        )
                .discountPercentage(9845.0)
                .setPublic(false)
                .setHidden(true)
                .setDisabled(true)
                .displayEndsAt("2020-08-14T17:00:51.000000Z")
                .displayStartsAt("2023-01-23T22:18:17.000000Z")
                .endsAt("2022-07-30T11:13:18.000000Z")
                .startsAt("2020-05-26T01:14:15.000000Z")
                .discountUpperLimit(7893)
                .description("7BlWsNECFWA4hHlvtcjGtIPadSKiVX8t6IuP7AfSh1iSdnomWlXA8y2vwAsTNYaeLyV7CWdrmk7DRyx2nAdRh4U2Gnj6HilrfsKlPIExrXeCFOu5KxrV4xhz7DzBywKIciMlN0S7L0N0uBHj0xIlmI7crwjgiJmBq8x2BMoiejWmPY8qwKCFWRUhTWJtrSHM5")
                .name("vGCx3jvLeQXqJ7fOtRApW564YK0LvLN69VHlYJhXH6cUQL7XLfiXA0zUZ8WIiKSeWU9z6lAbD3wp");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test45() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "98643617-5492-4616-8d92-3e5eaa3a95f1"
        )
                .discountPercentage(3782.0)
                .code("s")
                .setPublic(false)
                .setHidden(true)
                .setDisabled(false)
                .displayEndsAt("2021-12-28T17:38:18.000000Z")
                .displayStartsAt("2024-04-24T07:37:39.000000Z")
                .endsAt("2022-04-08T06:55:14.000000Z")
                .startsAt("2024-07-21T19:55:51.000000Z")
                .discountUpperLimit(4577)
                .description("BKUJdHLf9kwaxRbmzAo5vzrqC43kvR5VzS4JSx7Qk5qYm8EJV1By6vGk0FuWZ3ptkSyNBcc9paWacdvlF8sKq6M8TMch0t9MLsXgvG8EYKbsPpBkO0z5h9VDX3NEhsO0rjGagOIQ6x9sSfu0zX8zd")
                .name("niT7rbp4RdF8jzLLX07kGwmRZR89QJDyeQCnprhi7qh3KP4T37Wi9g9nZZhOiq9TM1kL");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test46() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "98643617-5492-4616-8d92-3e5eaa3a95f1"
        )
                .discountPercentage(8962.0)
                .usageLimit(1825)
                .code("MOaPoa")
                .setPublic(false)
                .setHidden(false)
                .setDisabled(false)
                .displayEndsAt("2023-09-10T13:28:35.000000Z")
                .displayStartsAt("2022-08-09T04:43:07.000000Z")
                .endsAt("2021-06-17T02:46:52.000000Z")
                .startsAt("2021-05-28T17:55:21.000000Z")
                .discountUpperLimit(7102)
                .description("1SL4LwXctk2uyuazqzFpngLk90ZBFe71DIECbUavopCer6amUqWii2uDVrmTki6pqO0f8cnptMkBRjmpnn")
                .name("beCg4xumOoxK0oT4F795unttA065Yr03Qzj1SYSblk7QSM");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test47() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "98643617-5492-4616-8d92-3e5eaa3a95f1"
        )
                .discountPercentage(6628.0)
                .minAmount(4459)
                .usageLimit(4224)
                .code("kKPrtzfsC")
                .setPublic(false)
                .setHidden(false)
                .setDisabled(true)
                .displayEndsAt("2023-06-29T08:12:17.000000Z")
                .displayStartsAt("2020-07-18T08:24:12.000000Z")
                .endsAt("2023-06-11T14:41:15.000000Z")
                .startsAt("2023-03-08T13:39:55.000000Z")
                .discountUpperLimit(7603)
                .description("OFn1WKJz5hhBZBCZgSERTDaoK9IqITw9RXh5VLaBXSS3EzsrMpj8GBIyJaRyweuGKy2nXN4UBPwGQ9mhvxLr7QQxCiR4LJ0VAGQ0LknXBVXV6IePzMvb8rIAKhBAUImOpB9NJd0FGb0jOdIa2VbV1E7pIBf60ZOpXb0uUTjEzrW5FEq6VpVqu1DpFd0JaBsPB")
                .name("jjxsN82R5bV74h6MclFLskpVJhF8OvhWGp3gTZC60RTw4fZ8zWBqSC3vDIMcnooU2vsEkh");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test48() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "98643617-5492-4616-8d92-3e5eaa3a95f1"
        )
                .discountPercentage(8196.0)
                .setShopSpecified(false)
                .minAmount(5806)
                .usageLimit(9152)
                .code("MP7")
                .setPublic(true)
                .setHidden(false)
                .setDisabled(true)
                .displayEndsAt("2023-12-29T13:03:03.000000Z")
                .displayStartsAt("2022-05-28T12:08:14.000000Z")
                .endsAt("2021-04-16T05:06:06.000000Z")
                .startsAt("2023-04-05T21:00:40.000000Z")
                .discountUpperLimit(6792)
                .description("0jy8CyXSjsNQfhm4JdiSR8LU0sAxVpKo9Pr8tnCR4b3VVcnR7ySaTJSL")
                .name("XaRbjFaOCY9HY0faJMcRsZ");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test49() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "98643617-5492-4616-8d92-3e5eaa3a95f1"
        )
                .discountPercentage(1706.0)
                .availableShopIds(new String[]{"3cc2a17e-e514-48f4-80e6-2a7f71ff55ac","d5806b2b-bb18-476e-b108-d8a61340b199","a83fb634-3ff0-4ef1-925d-eb0f7ac099a4","b1cf6f27-ecbf-48af-8564-9805f453bdf0"})
                .setShopSpecified(true)
                .minAmount(6419)
                .usageLimit(2905)
                .code("gOV")
                .setPublic(false)
                .setHidden(true)
                .setDisabled(true)
                .displayEndsAt("2021-09-04T11:53:12.000000Z")
                .displayStartsAt("2023-06-16T21:20:50.000000Z")
                .endsAt("2022-10-05T16:52:43.000000Z")
                .startsAt("2023-03-31T03:38:41.000000Z")
                .discountUpperLimit(7816)
                .description("FcqtkzhdfPKiy9SERDVnpaYhOvVB8b8Y5rPTIoQafvlfkuyBchbjOVFfaAmwoPiUeFs2qGGZk77FXigkPx1NC7bcdhHDyq2BmegmNcooOzsV0UAnFDq2j42XbKSjWX0mczdG92I3EQWa6MviKhzgN1WE1E9QE8I1WOtKGTOoDsggK2zVvIrNmjPyMt7JZTknlcSLOAfgHki7iE")
                .name("UUEZsYB8I8w6YX9AjYRSoiU1BYQYTGkBMdZ9gxwOlUDO");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test50() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "98643617-5492-4616-8d92-3e5eaa3a95f1"
        )
                .discountPercentage(7949.0)
                .storageId("176f15a5-ab22-42c2-93d2-60e90be3adf9")
                .availableShopIds(new String[]{"372c90e5-fce1-477d-9810-1002017936ed","ecafef65-d7cd-4e61-81d9-505e92224e89"})
                .setShopSpecified(true)
                .minAmount(4101)
                .usageLimit(4380)
                .code("b")
                .setPublic(false)
                .setHidden(false)
                .setDisabled(true)
                .displayEndsAt("2023-03-21T00:35:26.000000Z")
                .displayStartsAt("2023-09-13T00:28:40.000000Z")
                .endsAt("2021-04-26T03:38:10.000000Z")
                .startsAt("2021-06-30T14:15:07.000000Z")
                .discountUpperLimit(9957)
                .description("v3hkGmk4iWQZAVafOlabiOcEnloh2DXft8ZR3ZIT5H8aSOl3MDXnG9yHqEAThwDuq1zewsMIx1hpzHiKxcCexEPrWNcD1BCJ2Q7A3yxMyBqUSnmfmyMf158jbodxUJxcIS6QwIFvAWCZsB1EYOxuNXsb8K4XyQ60l6nZCLpElUd6iH1X66E0nqBBGmKnZ6uDIn3iuFQrrgeXzyNXNrNkeWa9hWsLSo6RhlRrNdmMatyDW")
                .name("2s5SKsd06fYHa9pHdUJ2NkpD9XRln1g4q1AmzenaBAIYsPX5BE");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
