// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.UpdateCoupon;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class UpdateCouponTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "babeb50a-c00a-42cb-b829-bca4aee7f97f"
        )
                .discountAmount(331);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "babeb50a-c00a-42cb-b829-bca4aee7f97f"
        )
                .discountAmount(5460)
                .name("27e8aYqnR84FBM3C6v8v9ePjUa08oj02kZCsA0FunMZAAfen0BwsGxdaWrJDAkAkwI7jchZEyL7hLuPk5TkktUEQz");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "babeb50a-c00a-42cb-b829-bca4aee7f97f"
        )
                .discountAmount(4747)
                .description("NQ8X8UT9pwsy8gCbkgxRGLsJCf4KPwsNE9wHmypELLpLk98Y5W9RgaUtCZCBQGnOUZ0AN1yTy1HUTTQZgiKGQvFToLSPjq2iqEHy7QyVwlopGlmqjeQ6krWwSS2ZKdxfu47FUdbY3e3KsHjK6yq0UVotpX66fZqweZNCF7ud15492XgZvDpGTOwTmIhMwUzzE708aF5dFai9kZ4nfndyKVq6gdXWUq4F")
                .name("ZZiQtaO5kfTxoH4l7RW3H9lFHGkvKlyEqFet");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "babeb50a-c00a-42cb-b829-bca4aee7f97f"
        )
                .discountAmount(6114)
                .discountUpperLimit(154)
                .description("tpNk7nHhh7Hd43Haz3yIG0HSL6VFkZ0aamld0V6qNKi536puNiz0x54hk2hXPFhpEXDc7SH6CARUcel6Aj79e5dsWFahzkFbYWGNCYxx1qoLKCR4LtfJuHo9w2h4kTq9fWztlazlL0Wlov8fxVakcRFJy5KtzRnyENU3HxzKrYWC")
                .name("bhoVK5VX9howUUIQvvjmdCfD3dVLOMY00LFmwmrAlp7wz");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "babeb50a-c00a-42cb-b829-bca4aee7f97f"
        )
                .discountAmount(2480)
                .startsAt("2018-08-04T19:07:54.000000+09:00")
                .discountUpperLimit(5166)
                .description("G02V9HSxr9KoHhCXBz")
                .name("BL0Kuow4PFBmucvGNPFyNLhgj9hzguknWs4VWcTQ72cV23mjJBA77W5LjPik9ZKUVgVmY6ujOy5iQ2cfYZB0ZtX5nSBYGQZ1fRA7JBMRzaQeQr2c");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "babeb50a-c00a-42cb-b829-bca4aee7f97f"
        )
                .discountAmount(5914)
                .endsAt("2018-08-09T04:59:01.000000+09:00")
                .startsAt("2023-09-03T20:09:33.000000+09:00")
                .discountUpperLimit(1800)
                .description("p9KNgDWeLjtyYvDXYLBf65PTLrPmKxY7YkIhFFgsEzTdPn8dtUGQMR2lvVqCI763Cb5nKeCWzPP03qu0pWU7za93O3hBOCuLezpVPKGiBWV2oQOsyX34JuOzi6hRg1ZSv")
                .name("NLGEYxjz3wUzNoIC5w9zpFYIZAY94IuPrFZPAOLgtEYdERNmmKzCI86moiF2av8mXfdMyEeBpeBvfbNJ1mKHdseFX63c1DvHT7hx");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "babeb50a-c00a-42cb-b829-bca4aee7f97f"
        )
                .discountAmount(4453)
                .displayStartsAt("2023-09-25T21:57:36.000000+09:00")
                .endsAt("2021-10-08T21:59:43.000000+09:00")
                .startsAt("2022-12-02T05:37:29.000000+09:00")
                .discountUpperLimit(955)
                .description("V9yrE7sqBe594dSHEv6ZP500kvRssNV55xyrkYMiodQ4BraO5GxsOJBdRkw5H65gLG6SARfdKahyoQWfztYMtZpW7Z7uZTkchpdh")
                .name("T6mkyRYQssaVu9byBTzEQOcXzgT24udLAuyzNbG5eE6D15sfaIdv0eAPZO21pYxFxkkBzeH6Vx");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "babeb50a-c00a-42cb-b829-bca4aee7f97f"
        )
                .discountAmount(3672)
                .displayEndsAt("2020-12-12T03:24:30.000000+09:00")
                .displayStartsAt("2024-12-03T03:46:07.000000+09:00")
                .endsAt("2017-03-25T12:39:15.000000+09:00")
                .startsAt("2022-08-07T01:08:09.000000+09:00")
                .discountUpperLimit(3706)
                .description("islNb9OnO2ztAZRtHkXUHHbfmA9MsXX1AT4zlflHv1xMep0jg8JrijmKLwhzBq7zdLjf7vY5VLW2mNkNR7GVFh2ra0VYTkeuPiQqEt9ayDUgPXMrH8GRtYZFkpOXIYma29YDdVLJfYL0tjYrUFWbWZzYmxGR7")
                .name("OLOX5YVGcJp0F4TUtA6P6W0C47XvVF5scnz2u5mT3Pa5BvQk0Kksb2H7YYC2ivpnZnlPGQa9KLZzJdOkcmbed8QewQnTLhXKSzf");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "babeb50a-c00a-42cb-b829-bca4aee7f97f"
        )
                .discountAmount(1152)
                .setDisabled(false)
                .displayEndsAt("2020-11-01T05:23:50.000000+09:00")
                .displayStartsAt("2022-05-26T03:04:20.000000+09:00")
                .endsAt("2020-09-24T04:06:16.000000+09:00")
                .startsAt("2024-09-24T15:31:33.000000+09:00")
                .discountUpperLimit(4863)
                .description("bv5zOoznPQzmqKUiMYCZuhPGL5LANywdY2ilcP4gRbMmn5LZgNJf32ZxIMi8Hf9jxu9z9JK9r2")
                .name("RxsujhsbEHYw96FuKqeZrMCzGXKhVBAYL3E22oi6OtAXsnQPYiHuh67pQWvU25c9pJlffI9xxSGD2FDBBi809hsjQc3V1m");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test9() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "babeb50a-c00a-42cb-b829-bca4aee7f97f"
        )
                .discountAmount(1029)
                .setHidden(false)
                .setDisabled(false)
                .displayEndsAt("2020-08-07T06:54:30.000000+09:00")
                .displayStartsAt("2017-04-10T12:45:58.000000+09:00")
                .endsAt("2023-11-11T02:18:34.000000+09:00")
                .startsAt("2018-11-22T04:50:43.000000+09:00")
                .discountUpperLimit(533)
                .description("JdJkq8qTzklBx6f5KigHpdMzzJfFUrDx5QcHgv3N5PqZvjy42o6tnQUgxqhD8NuaRYJY759kQBvWy6YlVE3F4ejtmjDPT1pntyrsiHC60HoLI7x5QORDrPdbKPgBA781cfQ3zLVu8aG7YDfI5kysMGn5Y7Csq3CMQKig4xKcnCYvKx0Tkl1oKGbZNRHNvbcSwu7rPA69Lsy")
                .name("xIOeawZlHXS8tZODNmonrkezakD7h6AS39dGgVjbiYyzhCU3PtAY5jr7bSslQtWpCtZ2zM55BVGK10FXzzPZzSMIBSL4f1");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test10() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "babeb50a-c00a-42cb-b829-bca4aee7f97f"
        )
                .discountAmount(8406)
                .setPublic(false)
                .setHidden(false)
                .setDisabled(false)
                .displayEndsAt("2025-04-17T03:37:36.000000+09:00")
                .displayStartsAt("2023-07-02T20:32:49.000000+09:00")
                .endsAt("2020-04-08T00:02:10.000000+09:00")
                .startsAt("2019-12-11T15:26:44.000000+09:00")
                .discountUpperLimit(8478)
                .description("xR8JzlMyiKif6vXekCGj501qJO3PTK6KH0k4aGayTyA8I9JJ6MtYqSSu6mqVOFowTAJ3LhKoYIMtn0MXmqbvJq8xOS0tUFxEdvsQoJhBHBkAmUfGySuKDt5LYGyV23rZ4JX3TX7vrywIkNjmz4CSyaBWkOvAqHIk0rd2DfTnkDTNETK9WNXfqteW8EKVVlbRe7TebUoVaRxCdpGjuewpFK3j8c1")
                .name("mthaJo4YQ4ohRRPFMXcEX7SYvZf");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test11() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "babeb50a-c00a-42cb-b829-bca4aee7f97f"
        )
                .discountAmount(2333)
                .code("bicuHC")
                .setPublic(false)
                .setHidden(false)
                .setDisabled(true)
                .displayEndsAt("2020-11-30T07:50:52.000000+09:00")
                .displayStartsAt("2016-11-09T21:12:44.000000+09:00")
                .endsAt("2024-10-16T04:18:39.000000+09:00")
                .startsAt("2025-05-28T03:39:39.000000+09:00")
                .discountUpperLimit(9888)
                .description("5J48wMWezCjux7znEJA6VT")
                .name("JRRP574ot7paK7ZxwTv3VHfOB3m8c3XNMsuSFzgptdJElhTl1wVvlrVD2RkhEnkZA4QO9ZzURlGSjoJpUut");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test12() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "babeb50a-c00a-42cb-b829-bca4aee7f97f"
        )
                .discountAmount(8963)
                .usageLimit(5640)
                .code("T")
                .setPublic(false)
                .setHidden(false)
                .setDisabled(true)
                .displayEndsAt("2023-08-12T08:20:18.000000+09:00")
                .displayStartsAt("2021-12-15T21:23:09.000000+09:00")
                .endsAt("2023-05-29T06:04:51.000000+09:00")
                .startsAt("2019-07-08T23:40:41.000000+09:00")
                .discountUpperLimit(6564)
                .description("B9fA7IfEOygel5WcOIP7of4EgDHLHoZBndidVb5lfoYJiTlqmLOksHdTt5M")
                .name("F7vasCc8HSpXck6dyE0zBb3LpUNAj2");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test13() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "babeb50a-c00a-42cb-b829-bca4aee7f97f"
        )
                .discountAmount(2092)
                .minAmount(3613)
                .usageLimit(2744)
                .code("C")
                .setPublic(true)
                .setHidden(false)
                .setDisabled(false)
                .displayEndsAt("2016-04-15T02:53:14.000000+09:00")
                .displayStartsAt("2025-02-28T20:21:28.000000+09:00")
                .endsAt("2025-01-30T22:59:04.000000+09:00")
                .startsAt("2018-08-01T16:24:46.000000+09:00")
                .discountUpperLimit(504)
                .description("7NkqlAR8d1LXN679RPbaVkzGMnr2POy05dJKyyBnqT2x5hr4qhCvNbEwFSnn5auS60u3IKm1RZSLSPkSOBmmqJH0R8MR83xmNxZ4pXEoVr0r6b5PBDO7KSIVhfSBgvAb0hcKUK5Q4aIIVAUUHAbRj6dTwStCGaKoWiwvPZ6m9TiLBNE")
                .name("fdEjZm7lKutEvUZRbCHifau4tp52aZS0T7mjdQw8fxmpQ8oQzP84NcoBVXaCQCrb4c1mqloAvtx7IkEP9P8");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test14() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "babeb50a-c00a-42cb-b829-bca4aee7f97f"
        )
                .discountAmount(7541)
                .setShopSpecified(true)
                .minAmount(7830)
                .usageLimit(6422)
                .code("xYTu3X")
                .setPublic(true)
                .setHidden(false)
                .setDisabled(true)
                .displayEndsAt("2021-04-01T16:45:28.000000+09:00")
                .displayStartsAt("2021-04-23T00:16:37.000000+09:00")
                .endsAt("2019-10-28T03:17:58.000000+09:00")
                .startsAt("2022-06-30T01:56:30.000000+09:00")
                .discountUpperLimit(1332)
                .description("61N3qfmO2kMHZKjwwmRJWWqQcM4G9OxCEHatQZSFBelBJFi8Vk8GNldmh3POh344lr07NskUfBVqpPwEJL9hVPI2nBFrGxfAXbQakN83sz4iBfOhjw7vZppk8w8uJFKvrenw5yaGO0vIYv0wvyRzFR37sbh9igXSNdelhkcku0hgcjofvPB0sYU8wxuHZCao9QBpfEQzFAzH5VFWIAlaiJ9fzmacZ8qDfsE")
                .name("35");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test15() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "babeb50a-c00a-42cb-b829-bca4aee7f97f"
        )
                .discountAmount(5916)
                .availableShopIds(new String[]{"f42d44b4-51ab-4c4f-999b-0a927699a291","60e05f09-9da4-4b93-938f-c384e53963e5","bdb90606-e770-4065-8c1d-4e098103e56c","aaa42ece-4db8-4d33-997f-de28ade055ea","e6f5a30a-9125-4796-a6a8-d3bdf359ac14","669725b2-9c39-476e-851c-5f7257702dd2","39b79795-36c4-400e-afcc-27641e949fdd"})
                .setShopSpecified(true)
                .minAmount(2587)
                .usageLimit(8658)
                .code("TcGKBI")
                .setPublic(false)
                .setHidden(true)
                .setDisabled(false)
                .displayEndsAt("2023-07-18T20:46:45.000000+09:00")
                .displayStartsAt("2019-12-24T18:04:18.000000+09:00")
                .endsAt("2021-12-10T02:26:38.000000+09:00")
                .startsAt("2020-06-16T16:56:56.000000+09:00")
                .discountUpperLimit(777)
                .description("dTm9XEMCyp8mIoQkSGtqOMKpWeoUCbA2pYmVtD643RlEvxTjelqckwoDjeaMpzNaz7ZpTFEi3DOWdFhUMVsj3VYDw4ZdXoYg")
                .name("kIr8B");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test16() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "babeb50a-c00a-42cb-b829-bca4aee7f97f"
        )
                .discountAmount(6198)
                .storageId("f18a5f8a-efd7-4dce-be0c-d2aade23ce2d")
                .availableShopIds(new String[]{"54f41b07-9025-4572-ad12-bc9708f72004","1a94f6e8-5298-4a43-bb2d-fc152b3fde47","de4fb453-d701-4009-b6df-43216445fe0d","ca789452-7378-42e0-b8b8-73a8b936a8b5","269b51d8-b053-475b-8d20-d45053586a8f"})
                .setShopSpecified(false)
                .minAmount(493)
                .usageLimit(9974)
                .code("h8ZWrLMfJH")
                .setPublic(true)
                .setHidden(false)
                .setDisabled(true)
                .displayEndsAt("2025-05-01T00:26:19.000000+09:00")
                .displayStartsAt("2017-07-18T17:44:57.000000+09:00")
                .endsAt("2018-03-02T16:35:44.000000+09:00")
                .startsAt("2024-10-29T04:19:16.000000+09:00")
                .discountUpperLimit(9365)
                .description("sgOylyjLWb48TyiHcLHPcK48i7ip32pWe219lWcmwjxu1RdR5k1nC6qdWSSeI017WxW0VOFDtw6FEd0qr6fvoHlEwQDxPjTCWK2ZhmlvXhwK8rkYriRHcdfO4CyhuBsRg8T8p19AgnI1DRkf3D64n4cJoRC95")
                .name("IMyuPuJatTfxKb7KZOhimeS");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test17() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "babeb50a-c00a-42cb-b829-bca4aee7f97f"
        )
                .discountAmount(8970)
                .discountPercentage(1541.0);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test18() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "babeb50a-c00a-42cb-b829-bca4aee7f97f"
        )
                .discountAmount(6315)
                .discountPercentage(651.0)
                .name("9KbIVKhBWIRbIxG12pghFFKO9gfnmDJz8OZDYzlImB2vF8LG4peWPYsbZWLupPnzyRFBHhFpzqJ6Lp6PDqSyYCl1JdQ6iV8EynE3QsJWP5wBJ1lazlZNJqcJD21Zw3");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test19() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "babeb50a-c00a-42cb-b829-bca4aee7f97f"
        )
                .discountAmount(6836)
                .discountPercentage(372.0)
                .description("iCDW4sWANu9E2dhTfMqsm5ankj3fL111u2XTwLfBP9tonfXd3G29")
                .name("Y4LniFTWF97s970tzJzELSeKLBSlZ");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test20() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "babeb50a-c00a-42cb-b829-bca4aee7f97f"
        )
                .discountAmount(1137)
                .discountPercentage(8640.0)
                .discountUpperLimit(7290)
                .description("rzfAsfec6AtsJs8oqDkvJ8MxN1If8bTKi26RVSBq8kUKzmBQ59DyP6jSkaU5FMyAX4FQE6BCfKgPueQPMNMWNNFig0RlcZNiIAKLUI9fhoA3aiYsBosFO")
                .name("ogILcYvQuZ10WBA0PuSFZrC6l19Fzd6fQDAi7UPr3dE14iTFM1ZhQZcvVZGkT55k5XGbNF2iS7V");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test21() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "babeb50a-c00a-42cb-b829-bca4aee7f97f"
        )
                .discountAmount(635)
                .discountPercentage(9115.0)
                .startsAt("2022-03-23T15:10:00.000000+09:00")
                .discountUpperLimit(1012)
                .description("bIMoA0ElrMxMnjmaX3xPJlIMJZr1URiP7RI1TdPMLylkx9Py85mXCPETHGn41wAUPFGY4sY94NkzA2VvEd6")
                .name("YlZlqwE8ODD85Vl7GeRZSlZFeSI0MgK0AporlSHxJopK60HHsa2rUJnuH2dXy8g8uYhLN4CBsMsNtbk1GsBpd63wCYGShF6PJ6AcEZMJXkQ0JMzANfXDeANrGQ0JjHl");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test22() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "babeb50a-c00a-42cb-b829-bca4aee7f97f"
        )
                .discountAmount(5683)
                .discountPercentage(8854.0)
                .endsAt("2016-05-16T06:34:34.000000+09:00")
                .startsAt("2019-03-03T12:40:18.000000+09:00")
                .discountUpperLimit(4252)
                .description("USV3O00lQPTzYrpwTVnfl62UOL2NXyItNta1EHFYj")
                .name("mRJLnpons29qHfUPr8OeXroo9BSwY0xHfWp2q2n2AboDtcq");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test23() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "babeb50a-c00a-42cb-b829-bca4aee7f97f"
        )
                .discountAmount(8219)
                .discountPercentage(4417.0)
                .displayStartsAt("2022-02-20T09:43:51.000000+09:00")
                .endsAt("2018-08-29T01:25:06.000000+09:00")
                .startsAt("2019-10-18T16:05:08.000000+09:00")
                .discountUpperLimit(3797)
                .description("WhtoYJOlVCA8pxeNGh9sUa89cb7dJGrvrJG0YnbFlq1MQmbOP5mA4xfn0otoGaZCgWBYwiOhrzrbg4")
                .name("AieEDtSgJMpiUBnNqCPsLS28yqQyOjW");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test24() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "babeb50a-c00a-42cb-b829-bca4aee7f97f"
        )
                .discountAmount(963)
                .discountPercentage(5181.0)
                .displayEndsAt("2022-12-10T08:58:02.000000+09:00")
                .displayStartsAt("2023-10-29T22:30:29.000000+09:00")
                .endsAt("2020-10-16T20:02:53.000000+09:00")
                .startsAt("2015-10-30T08:39:21.000000+09:00")
                .discountUpperLimit(6588)
                .description("WD6c3t0SOT8zAl2iFtCeKYRRz5qwX1nD2Bw0jvD7uKVKTnFMjE5lLn19LoE4eUUU0Ok3")
                .name("DiiGiurC25lt46LT6qFqqFtSFUGf1QDz9SlTmld5ZDKRSJVx2TbJLlXGEyYSnl4fN20UDqsJ4v9x");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test25() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "babeb50a-c00a-42cb-b829-bca4aee7f97f"
        )
                .discountAmount(4399)
                .discountPercentage(8273.0)
                .setDisabled(true)
                .displayEndsAt("2021-07-27T12:45:14.000000+09:00")
                .displayStartsAt("2021-05-17T19:59:01.000000+09:00")
                .endsAt("2022-03-10T14:58:29.000000+09:00")
                .startsAt("2017-01-27T21:57:14.000000+09:00")
                .discountUpperLimit(8599)
                .description("38BN7qQYHTq4xp530U1kI9qFOAzPEHIFcLYtud18tLNMxHuC3DB7NO4rTzyvwKnv22NEITgFpGwLPjIKKffRC5qyUKSxdFvO0gZ7wz5Jm4Fb142TV2hzQbESODnXlpIlSxzLIF4H7V8kjoUORjoq6vDsPkl6BwHi")
                .name("8Ugwmv1EGCBTA9pOnpQWIdP4EU8MG829rP2Asw4tV1dvgUPMml6yc4A9sog54O4Q1AIHPehoTpgPUuj5g4b8YyD8tSDyltEdWgYo9KPeZlu4yWbfaqb5Ucza");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test26() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "babeb50a-c00a-42cb-b829-bca4aee7f97f"
        )
                .discountAmount(3950)
                .discountPercentage(7324.0)
                .setHidden(false)
                .setDisabled(false)
                .displayEndsAt("2023-03-31T10:36:32.000000+09:00")
                .displayStartsAt("2019-07-26T18:58:35.000000+09:00")
                .endsAt("2017-07-19T00:39:53.000000+09:00")
                .startsAt("2017-09-02T07:09:06.000000+09:00")
                .discountUpperLimit(1812)
                .description("QpGdD12sUSgiNiPerSgCPcfNcypxOQldwnAMEHbJRPmS3SQPCusjUlUNbBM8omoiJgmUSHbQwhl99VLedEiWriSqYqSU0l2ykCDpJYoScK4nl1WKEC4JmfP5CEvrEnRO4H1rOAr0ApFQmldhPuwBD6RRHLk")
                .name("uBZbeB");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test27() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "babeb50a-c00a-42cb-b829-bca4aee7f97f"
        )
                .discountAmount(7023)
                .discountPercentage(3719.0)
                .setPublic(false)
                .setHidden(false)
                .setDisabled(true)
                .displayEndsAt("2020-07-14T06:10:51.000000+09:00")
                .displayStartsAt("2017-07-04T22:49:07.000000+09:00")
                .endsAt("2022-05-08T21:46:54.000000+09:00")
                .startsAt("2025-04-18T22:35:36.000000+09:00")
                .discountUpperLimit(9618)
                .description("wHA9IsTvopXQjP9oyZJJ5LwWfa6PBj8tCRnPVFjqFGEojTLl1azI2np1mzLYjrCBSRd7rfMFBkj")
                .name("U4Aujtj2bwd7vYnfqxEXaz");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test28() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "babeb50a-c00a-42cb-b829-bca4aee7f97f"
        )
                .discountAmount(1667)
                .discountPercentage(2275.0)
                .code("QbJ7OU")
                .setPublic(false)
                .setHidden(false)
                .setDisabled(false)
                .displayEndsAt("2023-09-29T04:22:31.000000+09:00")
                .displayStartsAt("2019-10-07T21:31:35.000000+09:00")
                .endsAt("2020-05-02T11:11:38.000000+09:00")
                .startsAt("2025-04-25T14:48:46.000000+09:00")
                .discountUpperLimit(9146)
                .description("kDDAXSnewD6zuex1ZQiNBlQcaXSaRzSeCKRVh80YDuehjLyBFVfl95v6s1qKwXQFOOgNkvW1E9KjSwyvQMn29tw7E6WFjMLQPFtgWPfFFsk6QY0isFx9ByQ9pYAg4lwa4di9hhR3NrzDGQxyeRzBPCxk7BOQEGc6turUSVEBK9H5vshDHrnQdEhaejz7x")
                .name("NvKXUV4oHpHyDJJHaFURU13ARyF1COIKISEuCw8PvcUyenZ0dGQHHuNZo1P6czc2aBM8i");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test29() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "babeb50a-c00a-42cb-b829-bca4aee7f97f"
        )
                .discountAmount(909)
                .discountPercentage(1106.0)
                .usageLimit(4215)
                .code("9gvUQkpRs")
                .setPublic(true)
                .setHidden(true)
                .setDisabled(true)
                .displayEndsAt("2015-12-14T06:00:05.000000+09:00")
                .displayStartsAt("2022-06-30T02:38:31.000000+09:00")
                .endsAt("2019-12-01T22:30:21.000000+09:00")
                .startsAt("2017-08-29T09:27:23.000000+09:00")
                .discountUpperLimit(168)
                .description("di5JSTpkArn3DfKlLjhXWAW3RCzyjqfYrYZr70Ku9qdC7Sni940sdDheL3zert1vZTyJYWW9l973tvmLVjIR2Qiq7m5BQO5fKdGEjUAqew9ioNesQVgA06qDZtO1iPsPUcPnon8n")
                .name("T9F0ruIDuHkqrzpPsJEHcHfNfi4FP9MLOfBkNq0Tm8UhERKWFZF");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test30() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "babeb50a-c00a-42cb-b829-bca4aee7f97f"
        )
                .discountAmount(259)
                .discountPercentage(6082.0)
                .minAmount(9626)
                .usageLimit(3620)
                .code("Xx3ptKla1p")
                .setPublic(false)
                .setHidden(true)
                .setDisabled(true)
                .displayEndsAt("2015-11-04T22:47:03.000000+09:00")
                .displayStartsAt("2015-12-09T05:13:06.000000+09:00")
                .endsAt("2024-02-27T22:22:16.000000+09:00")
                .startsAt("2016-08-02T07:39:44.000000+09:00")
                .discountUpperLimit(7835)
                .description("zIkCT22ovfyZKkZQLaUmT5JQz6vxASHARyhgoED5SyPVP5uAcnp2Dhzh2EKDpmwLK78RpTwfpJ16uGeu9SxACDsbMJwP6GQ4oxhzSHlPmyq28penfBlMhBOqHZZ14ZWPz0tekbpL4zP1ZVcjlxhk3OE87fu5IcStf8YM1dzQJnPVDiQQAAld5bXjSiMkpxoHqucs4kQKE4NzYW0Tth27TzYF6i31scvBy7qnB8xdIf8UdaQMttbvdawDWlDQnp")
                .name("tmYdcO0C");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test31() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "babeb50a-c00a-42cb-b829-bca4aee7f97f"
        )
                .discountAmount(6513)
                .discountPercentage(4627.0)
                .setShopSpecified(true)
                .minAmount(4587)
                .usageLimit(8822)
                .code("97Ju8j")
                .setPublic(false)
                .setHidden(false)
                .setDisabled(false)
                .displayEndsAt("2019-02-23T09:12:33.000000+09:00")
                .displayStartsAt("2022-03-30T04:33:28.000000+09:00")
                .endsAt("2024-04-02T06:54:20.000000+09:00")
                .startsAt("2018-11-22T12:40:09.000000+09:00")
                .discountUpperLimit(8588)
                .description("bKiv5jFZpxUNV80dxsWL2tqEaaGkmxhj51VHopz2gqlsLVsL0bza8C1UYWZWCtif7CvQtDyqQOmrfb7Kv6AULQhWxzwlr1XOl7HDTwmGnDhaxqXx35thIpb6pE3qmAxLvZOWtILDTmfJ8JHwhySwLR6p7Lg9MDGKj5bOX6OTCfoC76CqrtzyutYj98nPByEmeH")
                .name("NilMKoDSwwINB4eC93BvFBWx2KI4T9GjEtda2L1z1sz5dQ7PROI2Fi4MSUlC0mTeLpTssEiFRYbMbcZyo");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test32() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "babeb50a-c00a-42cb-b829-bca4aee7f97f"
        )
                .discountAmount(2695)
                .discountPercentage(2461.0)
                .availableShopIds(new String[]{"291c0c9d-417e-4afe-85cc-2efba3491ba6","7ccec5d9-b7aa-46d8-abce-6af85f0d229f","78540d28-e0ef-4cf2-8162-50590343e1ee","e090ac54-bb8b-4dae-a27a-cd438f4a1881","0eff3b57-3f12-47ec-bd7a-b0980e6f702c","a96cafe7-dee7-4a98-98e6-eea72851b176","f8333845-4db4-405d-a820-fd1c6cd98cea","9b38bcc0-1d27-4165-8dab-843ce848c6ba","50549d71-0b56-4b6d-af0e-bc610ce5809f","c2648d33-24ea-4b37-87e0-f01c805cbbd7"})
                .setShopSpecified(true)
                .minAmount(7394)
                .usageLimit(3127)
                .code("ENKYIV")
                .setPublic(false)
                .setHidden(false)
                .setDisabled(true)
                .displayEndsAt("2024-11-14T05:05:48.000000+09:00")
                .displayStartsAt("2015-10-27T06:38:06.000000+09:00")
                .endsAt("2019-04-14T10:28:30.000000+09:00")
                .startsAt("2016-01-24T05:24:47.000000+09:00")
                .discountUpperLimit(3965)
                .description("PwxEQGntmHtlA6lYmd6VG9KsFgsBc0lcLfRI9GFpwimNOlv5TpnnVL5CYhQY27WqTUK310zzgSa5jYofhGj3yY93umty1fKUBHL5xROII6W")
                .name("dEnYB2ZZhk8PdbqzpokcqF3dlH93YCaObgWbM1sCs34NesvZRO5S0y120B8s6HiKoHinuMf8qj8AbrFMFEOYXvxGVZxX5WFeOW7apqppX1");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test33() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "babeb50a-c00a-42cb-b829-bca4aee7f97f"
        )
                .discountAmount(4344)
                .discountPercentage(7801.0)
                .storageId("d4c0fec1-39f9-4bce-9152-d3845aeb9653")
                .availableShopIds(new String[]{"7bef2375-36e9-4c00-a8a1-3ee73eb4d9c5","1786e007-82a4-4457-aab5-6f5d165b90a0","68e86913-fef5-4c30-b27e-92b2b674209c","d0d1873a-6f94-4a00-99c6-eef9c1c38a08","e66a09c6-74aa-4963-bdec-1f77943ee2ce","85af9ccf-62e1-4b68-8ab1-ff2b56a04ab5","79bdb0ae-f52a-4c02-b67d-4fea88d5bade","7a006d13-268e-4a2a-9178-199dffaec27d","6e933568-aba2-4717-9cc9-f0f3dd754fb4","73d09ddb-1363-4147-b7f5-ecb5fd236b23"})
                .setShopSpecified(false)
                .minAmount(1838)
                .usageLimit(387)
                .code("OtVy")
                .setPublic(true)
                .setHidden(false)
                .setDisabled(false)
                .displayEndsAt("2016-09-21T07:31:07.000000+09:00")
                .displayStartsAt("2020-05-19T14:21:05.000000+09:00")
                .endsAt("2022-10-04T00:05:41.000000+09:00")
                .startsAt("2024-06-22T02:03:21.000000+09:00")
                .discountUpperLimit(5604)
                .description("cgNdU1wRbF04e36USHXCObTLh1OELzpEN7LcyAQGj7sFN8GtWQa5B2NkVEcLEW3yGut6cgOVQdCBLsk9qu29lFt0iEDBrBchfsbr86KbyVxJfLKfiBLK4SN2EeiUcoCCCh0xQaCeM5")
                .name("Oz6i1Z3uT3fU1GDQDVWdpJg0U3WN9IvPrBC8k");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test34() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "babeb50a-c00a-42cb-b829-bca4aee7f97f"
        )
                .discountPercentage(295.0);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test35() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "babeb50a-c00a-42cb-b829-bca4aee7f97f"
        )
                .discountPercentage(1114.0)
                .name("xZSOa8Iy13GiJyab51SFRC0idaPPP4lAmDrNO");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test36() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "babeb50a-c00a-42cb-b829-bca4aee7f97f"
        )
                .discountPercentage(3288.0)
                .description("a8Fw1oNb5v03VRMqgnJtpufdH8REoezYPoRD0Oo1Vgla8Ri0v05mcdPqcxrQYQvST94p1yMCX")
                .name("IT9sShvUk9ugOiarxt6fY4uCREW57HnJky5ef5plAR77jpi0GEQQpA5dXrNL2AWlDEou");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test37() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "babeb50a-c00a-42cb-b829-bca4aee7f97f"
        )
                .discountPercentage(5795.0)
                .discountUpperLimit(6526)
                .description("bf")
                .name("cFudBexllCeZspaVzOpLqfs");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test38() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "babeb50a-c00a-42cb-b829-bca4aee7f97f"
        )
                .discountPercentage(2188.0)
                .startsAt("2024-12-09T22:30:02.000000+09:00")
                .discountUpperLimit(8956)
                .description("u1T6ynAnkjbdly3h6R1Jijm4Imzgcp4diiI8WMZnsn2L39QI9e62Cd5mpzLQuWmfP2Vy0Quhj6Hffggwio1eB59QVm4ZCwnCTCoPWTAaP2l3VJw5twxBBr")
                .name("ELloGdN1yS3CgNtniGNsd1KsWaNaTk6dqC4smlJaXpxiREXxctYIJbD0O8hrc4cyxZt2hgc7aGE4WFYeZv95P4V8iwMaUmEdNgWrovD");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test39() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "babeb50a-c00a-42cb-b829-bca4aee7f97f"
        )
                .discountPercentage(5142.0)
                .endsAt("2017-01-21T01:42:57.000000+09:00")
                .startsAt("2022-11-15T12:22:21.000000+09:00")
                .discountUpperLimit(584)
                .description("sd4YJ2rHwUPDWKLKVqjQ0gImm0sJYR6fN0KbOXu78IvfS4H9")
                .name("zJ6Jn9xUxwRhKUbZDtq94fdu4v1tjhG0KsD55rCVsEXZ8H7M0Cfmrc31VRxzxrnT7Ren1FBcFNjcMGJ9KqL6a2tUK42OlB");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test40() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "babeb50a-c00a-42cb-b829-bca4aee7f97f"
        )
                .discountPercentage(6739.0)
                .displayStartsAt("2021-08-21T18:59:07.000000+09:00")
                .endsAt("2018-08-01T07:39:45.000000+09:00")
                .startsAt("2021-03-28T20:17:22.000000+09:00")
                .discountUpperLimit(9963)
                .description("3")
                .name("GhdbQAc1tk1KOmiVuvY5kvwRvyqVN0lhSpawNcqwYP");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test41() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "babeb50a-c00a-42cb-b829-bca4aee7f97f"
        )
                .discountPercentage(675.0)
                .displayEndsAt("2024-01-18T09:37:26.000000+09:00")
                .displayStartsAt("2024-12-27T03:23:06.000000+09:00")
                .endsAt("2022-04-11T16:53:10.000000+09:00")
                .startsAt("2016-03-02T15:58:33.000000+09:00")
                .discountUpperLimit(5175)
                .description("LNw3THbut2f4KRLFC4Id3FaEcwPUs2YBJZR9M7R15IsTgKwoY2In4qty4gMjmJSb0bsspBnjuWpokRrgQVKqIYOuMkratMUBh8iwk1uaXUb3OrvaURDIICtIeACBNrdL4KPnqg98plK5Lw3ID9E3lzpnmkkVuBHUnt2zLUnAmCHOfnHGqMemZClHznx2bOWG5oEfw1ySdL5AFbsRK9ImgWSNme8j5FiShnxvTNmls0uG1WsGhBYPe03R6tDOb")
                .name("uXeJHx");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test42() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "babeb50a-c00a-42cb-b829-bca4aee7f97f"
        )
                .discountPercentage(3538.0)
                .setDisabled(true)
                .displayEndsAt("2021-12-23T15:47:39.000000+09:00")
                .displayStartsAt("2021-04-21T14:39:32.000000+09:00")
                .endsAt("2023-11-23T15:24:43.000000+09:00")
                .startsAt("2019-03-08T01:06:17.000000+09:00")
                .discountUpperLimit(9093)
                .description("9CMtnNxcXjJiuODIoUzEfowgT5VX878myadm0kZC4NL8nivj240dPUpulAtujRC7AsoITABROymeVuDxy884eVFLMVBhvvrQ9jVDfHswDcTMcC13PFgZ5eOGnOiDaRCCD7DcJGs4buR1vjig3RH7POt1I6HbSTNyMcNJiLebBay8DV31ZSIA3qLFaXFUq1ictVF30NhErTOQKTysdDiT0UrFg5WHa5qiYhbHuRCk6k")
                .name("8PETgQy6NREdisaOWVaAwI45rk6fo5YyWfunmQLJpxYz0o2VIOSXFdOqP3xR8fZclT0PSyX9a0PH9MtYjg68PldBtJqK8eam5ON");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test43() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "babeb50a-c00a-42cb-b829-bca4aee7f97f"
        )
                .discountPercentage(8708.0)
                .setHidden(true)
                .setDisabled(false)
                .displayEndsAt("2016-01-20T06:25:02.000000+09:00")
                .displayStartsAt("2019-12-22T23:54:53.000000+09:00")
                .endsAt("2021-09-13T05:42:36.000000+09:00")
                .startsAt("2022-01-19T17:12:38.000000+09:00")
                .discountUpperLimit(5896)
                .description("5cqk9EntacdCKLPDrKFAGo16omXBcwHTYU4pPGiMklyc0jcGmxD35RCACOIIzTuQqtpWzQSSw9ZyQirfY1vMhXiURDmiYfFdAF4K8uxCrHE9QKYnn4lNH6guwxzXMtE9sQPTkLrPAChWwI1gX7LSaJozLrK9rx5nJG0ieYsEQrQ69ywhtJ9V")
                .name("nG08x");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test44() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "babeb50a-c00a-42cb-b829-bca4aee7f97f"
        )
                .discountPercentage(4488.0)
                .setPublic(false)
                .setHidden(true)
                .setDisabled(true)
                .displayEndsAt("2024-09-28T20:01:22.000000+09:00")
                .displayStartsAt("2023-05-29T06:24:53.000000+09:00")
                .endsAt("2015-11-10T07:29:40.000000+09:00")
                .startsAt("2021-11-06T22:32:45.000000+09:00")
                .discountUpperLimit(9070)
                .description("iOooN4RwGgOyZZq88zcabKnffx93EbalUCLPzchMK8if0Mc02S4ue9sLEUTQivTwmSJU8xfUCKRbyawGsUxA8Y2vvWf1qEBKCdALSiWSZHQ6L0kj9c4tjg3V5tGM8OnDlgRkSOYb8646kKl6DwMLglFzJqrYHI8KHzke2wUeWA83WYCz8wsHDigof74O2b3oEfjXyp")
                .name("J5hhDJWiAXXUnaibbDHleELE86HWy31ji29Gm0rChP1LHCcytKqkYWUc6AnAQFZRdFQXU4yBXs");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test45() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "babeb50a-c00a-42cb-b829-bca4aee7f97f"
        )
                .discountPercentage(6873.0)
                .code("s")
                .setPublic(false)
                .setHidden(false)
                .setDisabled(false)
                .displayEndsAt("2023-02-21T23:25:10.000000+09:00")
                .displayStartsAt("2023-04-03T08:01:12.000000+09:00")
                .endsAt("2016-05-16T01:54:04.000000+09:00")
                .startsAt("2023-06-16T16:02:42.000000+09:00")
                .discountUpperLimit(1350)
                .description("38SG9wkrVwHvs5zketNO")
                .name("NWx4AIGZWp47VP54nqpG9sGq5EfkSsDji781yZpPa2DUi2HBm3QP5jAgVOsa291pdQXHLOrNMILlKQ5kz8nYlL1H0DyF0Y5IHvlxnZO");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test46() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "babeb50a-c00a-42cb-b829-bca4aee7f97f"
        )
                .discountPercentage(9859.0)
                .usageLimit(2812)
                .code("KN2lt")
                .setPublic(true)
                .setHidden(true)
                .setDisabled(true)
                .displayEndsAt("2024-10-02T22:17:02.000000+09:00")
                .displayStartsAt("2021-08-16T01:49:50.000000+09:00")
                .endsAt("2023-10-15T01:18:03.000000+09:00")
                .startsAt("2021-05-31T16:42:12.000000+09:00")
                .discountUpperLimit(9430)
                .description("uUuamqaavpSmu1rk7o53B8qXU5fCtnvQHRyzK2tbhaszPs5ih2nqJfgzAW9wryk0GrY4H5YwzcVtfGZJHuIhiJq87ojuKzQ6G6f7qcO8YB0Fonu5vXqHd7nIQhc7DlqKtQ9m2ND3IGg7uys1TNcnqDVuPZLG8H6sXvm9ecu5GkWiuMb8df2j6zW5L2zw2DIaxOxhzskAzmImkNxeIbYKCmQMovtRSB9i4zh10SGMC")
                .name("l7486950KMBnS6bFobrWNs9lSWiPGb2tKo");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test47() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "babeb50a-c00a-42cb-b829-bca4aee7f97f"
        )
                .discountPercentage(9946.0)
                .minAmount(1422)
                .usageLimit(6726)
                .code("ukMGz5")
                .setPublic(false)
                .setHidden(true)
                .setDisabled(false)
                .displayEndsAt("2020-07-11T08:49:13.000000+09:00")
                .displayStartsAt("2018-12-04T05:50:48.000000+09:00")
                .endsAt("2017-09-06T07:48:42.000000+09:00")
                .startsAt("2024-11-11T07:00:30.000000+09:00")
                .discountUpperLimit(3649)
                .description("JNgUvgjPfFzXMl5tazay9ZZj6")
                .name("E7yYo9P7dTR0LAyWRG60m2B8n1DDnKsYmBx8tifa7T82Ybddh");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test48() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "babeb50a-c00a-42cb-b829-bca4aee7f97f"
        )
                .discountPercentage(1689.0)
                .setShopSpecified(true)
                .minAmount(6429)
                .usageLimit(3591)
                .code("bPFwnPTl")
                .setPublic(false)
                .setHidden(true)
                .setDisabled(false)
                .displayEndsAt("2018-06-23T12:10:31.000000+09:00")
                .displayStartsAt("2025-07-02T17:49:25.000000+09:00")
                .endsAt("2024-03-15T11:50:33.000000+09:00")
                .startsAt("2020-09-25T23:35:08.000000+09:00")
                .discountUpperLimit(493)
                .description("VlmAGfV79aBqe2n3ngAHiWwfxh4aQ")
                .name("v6ceVsUE4XcbAnNpIEIS1m3RfssxKHLxaDf3K7tKWfgmjmU5Cr9kRdYJE3fLw1MJUtBQeQ009m7NAOa2uv5GB");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test49() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "babeb50a-c00a-42cb-b829-bca4aee7f97f"
        )
                .discountPercentage(5710.0)
                .availableShopIds(new String[]{"f0df83bb-28f4-4519-8489-4f9fe62c09c7","5aed84f1-6098-45b3-913a-11e99aa3a022","e75ff4c1-8ee6-4f2c-b84b-28667caa4d29","4a12135b-b662-46f6-b294-0e503a18deb1","093cd985-ec4c-47f3-a47c-3509ac28823a","09233314-9fce-4406-ae2b-35dac61a6acf","ac9537f0-dbb5-4291-bb84-29bcee353e2f","d59c9754-4820-49ab-b98c-ceb459331cf8","08a90308-5e45-4ee6-8212-47c1823f7648"})
                .setShopSpecified(false)
                .minAmount(742)
                .usageLimit(7768)
                .code("m")
                .setPublic(false)
                .setHidden(true)
                .setDisabled(true)
                .displayEndsAt("2025-03-01T11:35:51.000000+09:00")
                .displayStartsAt("2023-05-22T20:53:18.000000+09:00")
                .endsAt("2015-10-18T17:45:56.000000+09:00")
                .startsAt("2021-08-17T15:01:00.000000+09:00")
                .discountUpperLimit(7755)
                .description("FZY7zMNF0tTfIWEu1Ja4gOpc5x69ekxh")
                .name("kf35ylVbrPf6qiP4KvP3XYH2jtuhc1WoWpm5iK44K18QleT4KWteMNApjYEk9kVS0hS3xKcH3OW");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test50() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "babeb50a-c00a-42cb-b829-bca4aee7f97f"
        )
                .discountPercentage(3312.0)
                .storageId("acb85eef-d641-4fa9-bb38-6c679b6fea25")
                .availableShopIds(new String[]{"5dca9691-a0d7-4cff-8013-49a6de81520c","11f61947-a606-4a84-8f66-4980e7a6a80a","1d390ef8-f7f6-403f-8cde-edcdd8c4a717","6482b2ff-c11d-4696-9fd9-8aefac92aa30","d73b7d4c-7193-4019-9340-44e4751d54de","b9878691-34c1-4b14-b05a-14b800baa85d"})
                .setShopSpecified(false)
                .minAmount(1032)
                .usageLimit(1542)
                .code("WN")
                .setPublic(false)
                .setHidden(true)
                .setDisabled(false)
                .displayEndsAt("2017-05-17T06:02:52.000000+09:00")
                .displayStartsAt("2016-07-03T05:59:37.000000+09:00")
                .endsAt("2018-09-30T02:42:41.000000+09:00")
                .startsAt("2017-04-23T08:40:33.000000+09:00")
                .discountUpperLimit(5146)
                .description("25knpDP5mha26trwESLK1xmAgZ8Ru4MXPy8dzSMpwuhVvWgHOOsm8FJkkTJoTuz7Wddm0MuP9cK55VE0x3rrpunWjkRa5tlEQjjGQEeij25EE4uJStt7GkL9zuCya6IwuWfwUx5QwWpZqe1UckwNGbyfSRxmvAaveswRudalUxbBa")
                .name("myBLazuiJJSd8bUzLpjiuZdFtk9oBoTMgVvdCIAyPbF5NOETz");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
