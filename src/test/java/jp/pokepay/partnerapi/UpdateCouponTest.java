// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.UpdateCoupon;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class UpdateCouponTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "961e06fe-72d4-4f99-9b9d-24477d00f7c2"
        )
                .discountAmount(8987);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "961e06fe-72d4-4f99-9b9d-24477d00f7c2"
        )
                .discountAmount(286)
                .name("X3E1D3yRvebpZ1AmxZ9KnCaXNEool1NJWTuVk3hxoTEqfLCrpqtDrNm8cwUhsoMJ91NBOoJMxlQCBvfE75eng7RNpAFwRIYheoiKsFswYKbyKGcEnuP3yQezEtIq4q");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "961e06fe-72d4-4f99-9b9d-24477d00f7c2"
        )
                .discountAmount(4288)
                .description("yh89msEXdxR3NYvWgkJSw4MkPPcdCYWCvyWfUaqH45II12HGfbv7gKGUplMG1jZ03xfderUbCCgCLFyY2XDEVjkYAgRtnCQot46IEWskJOFG9fIqDO7DNNnx3cjqjo73du29FTyUWiVcJA")
                .name("jddSVVqNfzUtFpVdXSZjLDlfNnbyUsUy1fdG5Mo2396v5s3Yrwx1v4JYYx600BO9eOJgQmHmlLY8iLQufPycDnH1MDhI4gXGLUSbtUMwv6Qvla0gHOxqL");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "961e06fe-72d4-4f99-9b9d-24477d00f7c2"
        )
                .discountAmount(1129)
                .discountUpperLimit(4310)
                .description("GXM24tbLjqMcTuKDYmLeobSMeSEkjBq2N4ltaGjE5qMYJ8fIB5MbcSjjKmDl4aGHp3klNQwC")
                .name("l75eeKwTjxGEqHMGcUErSEnMymhIBcGdvWwUUEVjRTlbygExPqLFDqsLCELLCUkVliUjHAYKQiYjCcg4rFQnvtmI5a0NxPxtOf9Zts9VNESdwOVc2P1jDffhs8jZ");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "961e06fe-72d4-4f99-9b9d-24477d00f7c2"
        )
                .discountAmount(1971)
                .startsAt("2022-10-24T07:29:57.000000+09:00")
                .discountUpperLimit(3395)
                .description("DG04oShBA7p2cnpSui8QoTAyN1r5Q65lkhvNwHERwvub5uO7Qk7MhnFh7U31lx4B5mEpzJgEtfetRwg3VrTTJ6SCqzhPZ1AEijlC1OV7XMUiSZ0Drs6tC5ZQLh76i22i3hBeWTv6GaTCay8EP8Ie02Ekq0S4GE7MssU0ub0QHffhA0mJtDWsUHeODUkHsaI2tVyUhGIq1wZy165819SR1KAgdvjHBHCaRcbbgjoxjj1gdJi3aJ")
                .name("Ig33sXol2g6JlLzxByvwMAlKcOu0UkAzKqr8EYyS6SQ4NNPYKx1");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "961e06fe-72d4-4f99-9b9d-24477d00f7c2"
        )
                .discountAmount(9489)
                .endsAt("2021-02-03T08:24:24.000000+09:00")
                .startsAt("2020-12-18T05:17:26.000000+09:00")
                .discountUpperLimit(4298)
                .description("tqb6yMVKJw3aifrrjYZkEfcfWfVnxGrEKxlRrBv8yPjGUDvPmd22zIRi9HbBEVh52yMwsrV5RbtHNi0ZtDl4pXsL7yBnujdjZo3J1UczU0SX6FwQGPGk9JFRWnXQclktoZVXa3YnWDFPQ5QppSnCsgeicLOcPdbx8iBRlOgQRQVe08t1VXH3cqxwzlDzMf62zTsHIWcmuhB1WyS2DixJtDdjRZsAgfTF5MGF390pljgdOrF4IxP")
                .name("fbjjcWU4qfQ2jjbfFAwpvtnsHRw2JtnjaFhV1sVMlH7VFdbjEHva");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "961e06fe-72d4-4f99-9b9d-24477d00f7c2"
        )
                .discountAmount(7141)
                .displayStartsAt("2021-01-13T23:22:38.000000+09:00")
                .endsAt("2021-06-28T18:55:53.000000+09:00")
                .startsAt("2023-07-27T04:34:58.000000+09:00")
                .discountUpperLimit(2899)
                .description("CSbTIEbqIwk8hq3pLxwRSofUMgym17OUkMISWN2feIy")
                .name("K9AlAZmMRxxuOWVEGU1kCjjilwFiIu0");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "961e06fe-72d4-4f99-9b9d-24477d00f7c2"
        )
                .discountAmount(246)
                .displayEndsAt("2022-08-05T23:18:09.000000+09:00")
                .displayStartsAt("2023-12-24T01:39:04.000000+09:00")
                .endsAt("2023-06-25T15:24:19.000000+09:00")
                .startsAt("2020-09-03T14:21:55.000000+09:00")
                .discountUpperLimit(6406)
                .description("dEuWQpoLOvUYMWJfup5j3OiDVbQtABJOhfbrCJTBb34fCMyM4rdX8WGiRULCyNlEquU9GSRTcdqZQK5aMoIdDIqFt5XPwe43kdQBDbzNjJFfDAZ0z8F4YtO")
                .name("kvQSjAgW6opPfDNniRadHJ1VBgbuVyynKLhWfxTCbl6kcB44YdlBBXIERdxrrFZOXMvd2IoDqW7HlbfFIW9C9RXWrgBCb0Kv6P0AOX");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "961e06fe-72d4-4f99-9b9d-24477d00f7c2"
        )
                .discountAmount(5227)
                .setDisabled(false)
                .displayEndsAt("2020-12-15T23:20:42.000000+09:00")
                .displayStartsAt("2021-03-22T18:45:40.000000+09:00")
                .endsAt("2023-04-29T18:20:54.000000+09:00")
                .startsAt("2021-10-18T21:24:32.000000+09:00")
                .discountUpperLimit(5226)
                .description("5PGFL27Ae6vSHySZ7NHmopG4vU")
                .name("c5derECYJwwnaCLmqlK7eidIMc");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test9() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "961e06fe-72d4-4f99-9b9d-24477d00f7c2"
        )
                .discountAmount(4845)
                .setHidden(false)
                .setDisabled(false)
                .displayEndsAt("2024-04-01T07:38:32.000000+09:00")
                .displayStartsAt("2021-05-03T06:26:44.000000+09:00")
                .endsAt("2022-05-04T10:37:37.000000+09:00")
                .startsAt("2024-05-06T21:48:46.000000+09:00")
                .discountUpperLimit(1334)
                .description("2vLcq1twW3Xh92xvAM3yu8iqZzLmg8jIBYPuYmoYStJMx8S9mobkjh1")
                .name("UfY0Yc0petIgOJfO6B9zaNnGA73UlYoHgdBD2PkUHf3ArtRXdEfT2ZJYqwzvd7XH");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test10() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "961e06fe-72d4-4f99-9b9d-24477d00f7c2"
        )
                .discountAmount(7433)
                .setPublic(true)
                .setHidden(true)
                .setDisabled(false)
                .displayEndsAt("2023-06-26T00:30:51.000000+09:00")
                .displayStartsAt("2024-07-05T06:59:21.000000+09:00")
                .endsAt("2021-05-26T16:31:53.000000+09:00")
                .startsAt("2021-08-10T13:47:11.000000+09:00")
                .discountUpperLimit(9141)
                .description("UGdEETrprfUNH4sFXzoHWyOqGzavxeefzrMev9AKuOMdAJcawoExSuRKVITOSwUfiIKSBhoTts8vgePwBLxPuYbMyJlX8Cwvuwzf7OFzK9Gr4hyu3l3rZlUIR4rWFJreSmkCvQtehPZJtSDHen2VDmBGYaPj4dZ5GUdUtV5VABp7I8wBU94xYypK9o")
                .name("Pg5RXTCqvRTsFm0ubGu1SfoZdCS4uits8AiLLcJNrvA8UV86GIK8GtkiobHr3My3j8DqG1KSue8UnP7eUtmBYhASmbNYN");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test11() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "961e06fe-72d4-4f99-9b9d-24477d00f7c2"
        )
                .discountAmount(3438)
                .code("1Xr1h")
                .setPublic(false)
                .setHidden(true)
                .setDisabled(false)
                .displayEndsAt("2021-01-18T23:13:22.000000+09:00")
                .displayStartsAt("2024-02-22T00:34:28.000000+09:00")
                .endsAt("2020-07-14T04:56:02.000000+09:00")
                .startsAt("2020-05-09T01:33:03.000000+09:00")
                .discountUpperLimit(1933)
                .description("zPlQssRnyWbBmtg1Ozbsq93isb7JMTVVflelYKZ")
                .name("zQJFkqGuxTcN1pBr8lhZt9p2DB8dEsWdjn2OyoWkB6EykvgvstFZlQpjRjSvNhPOGd5l6LmWPsL");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test12() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "961e06fe-72d4-4f99-9b9d-24477d00f7c2"
        )
                .discountAmount(4139)
                .usageLimit(8761)
                .code("k3foIRk")
                .setPublic(true)
                .setHidden(false)
                .setDisabled(true)
                .displayEndsAt("2023-10-15T11:39:41.000000+09:00")
                .displayStartsAt("2021-01-22T20:13:28.000000+09:00")
                .endsAt("2023-04-29T19:13:56.000000+09:00")
                .startsAt("2020-08-20T00:31:11.000000+09:00")
                .discountUpperLimit(4450)
                .description("1twazc9QS9wOPDMlCFiOKuj16q0wbH5H5DsZELhsnDXiSFgEm0QjcNefigHElvCCdFYXyTiYant5XKw0gAs3VYuShRpz0FOkZUoW9ZT2O3ZsFOKbavAjvFkSjmd8S8iUxE7D4BrAn")
                .name("m44bPfX5X6Nnid");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test13() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "961e06fe-72d4-4f99-9b9d-24477d00f7c2"
        )
                .discountAmount(9775)
                .minAmount(269)
                .usageLimit(7784)
                .code("Qym2s2")
                .setPublic(true)
                .setHidden(true)
                .setDisabled(true)
                .displayEndsAt("2024-06-10T03:14:44.000000+09:00")
                .displayStartsAt("2021-11-28T23:07:35.000000+09:00")
                .endsAt("2024-04-10T22:29:28.000000+09:00")
                .startsAt("2021-05-25T03:31:11.000000+09:00")
                .discountUpperLimit(8868)
                .description("FOeAb8cqXQccODNpROAoQaoUQhEbD")
                .name("aU0TKYhnFARqjgci1A");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test14() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "961e06fe-72d4-4f99-9b9d-24477d00f7c2"
        )
                .discountAmount(3649)
                .setShopSpecified(true)
                .minAmount(3422)
                .usageLimit(5942)
                .code("c")
                .setPublic(true)
                .setHidden(false)
                .setDisabled(false)
                .displayEndsAt("2022-09-17T09:30:19.000000+09:00")
                .displayStartsAt("2020-11-01T18:39:05.000000+09:00")
                .endsAt("2021-05-16T21:38:53.000000+09:00")
                .startsAt("2021-10-07T20:52:46.000000+09:00")
                .discountUpperLimit(8807)
                .description("yGvoHb5vDgyqM4g7ylgMfPTdayQPGZwLIyVI3RxIAr8lQqrX4fdkI1t3qltU2QgnGRQcXdMDlyi")
                .name("xavm7StOSn9RLTTe7AZe5zWOVB5eL3YiTE2nc0kWJ1wCowyQKhw6yE36V1iDRYQhXuCBPNXOC4agRpeKVVpU");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test15() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "961e06fe-72d4-4f99-9b9d-24477d00f7c2"
        )
                .discountAmount(2811)
                .availableShopIds(new String[]{"2900c17f-9afe-48b8-ae47-67b3498c785f","e99c8171-ed30-41f1-996b-13829806dfa8","4dda0374-05c9-4930-81fb-559aa9a1ed3d","4e3532c4-6427-459b-8203-6e1259c48e26","6a1f05a1-2a41-4df8-b306-40b4bdec559e","85c303ed-0ff5-4ab7-8e71-cdda40a2ced1"})
                .setShopSpecified(true)
                .minAmount(4413)
                .usageLimit(1102)
                .code("vuT4yrsxv")
                .setPublic(true)
                .setHidden(false)
                .setDisabled(false)
                .displayEndsAt("2022-12-14T14:24:02.000000+09:00")
                .displayStartsAt("2024-02-12T19:56:48.000000+09:00")
                .endsAt("2021-04-03T15:36:49.000000+09:00")
                .startsAt("2023-05-16T23:03:45.000000+09:00")
                .discountUpperLimit(8812)
                .description("3S5N2ZgIRSaVEU6wMSijGGqNNxfCuSk2pw0ftj5D4a8pHeOWZUZUshRzDOPRsKxj1XjqqFhOkYeqcXSTu3DLLJkiweDJ3kU0EB6LIMpaMLMfZ5eCnRMLrdz8CAcj8jCfDQ0VB6nd0GUUjacgRpLGgoOmUmgq7e2uZqPIomHcvjgugbWrMKFeiEH27FRDzwJs0Q2OLMLobkUYggd7bAzJfwrse46iNx6RDmmFrxcH3L3u24C2AhDTh")
                .name("NGEqGlKGBD46eRF1ze0KQWIlG9mNTsQr69KbpTM9t8xHhoUHSY2vVo7A7mZan6ShNHcdvpAVR5QCJp57gYKT3t6ailtrJ85xUEwjOi6MySj52kMlLw5EO8");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test16() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "961e06fe-72d4-4f99-9b9d-24477d00f7c2"
        )
                .discountAmount(1941)
                .storageId("bad78de1-71b3-43c4-aed4-38157e8a9a93")
                .availableShopIds(new String[]{"0311795b-55dd-4d8d-ab02-359c8c9bea38","caefc224-5504-4ebb-8dbf-74d93b3d90b0","4a65f351-436e-46c7-b7eb-2fcf4ceabe51","445871ef-6529-4817-8f92-a6f7f0cc0d07","3d1f3599-270c-467b-85fc-c6ca40f02032"})
                .setShopSpecified(true)
                .minAmount(4255)
                .usageLimit(7695)
                .code("IC7Ud")
                .setPublic(true)
                .setHidden(true)
                .setDisabled(true)
                .displayEndsAt("2022-06-15T17:11:25.000000+09:00")
                .displayStartsAt("2021-07-11T13:32:28.000000+09:00")
                .endsAt("2020-03-07T10:40:34.000000+09:00")
                .startsAt("2021-01-18T09:32:58.000000+09:00")
                .discountUpperLimit(5992)
                .description("itT2LqdP9EpIRqtNkgiiTRsyGVlkXuMgln8vsgpimOeW5Fh2NhETnolKYIA7wMdfebGeymGpbbd9mOWvrCNbubH4DzigQa4VJg04Mi0hs93B08u4vPk5MK5CsSbNqpA4z4vp95ybR8xPiThoSnB2WhMwyNvdEpE4cO8C9MGl5WKr9Bmu7AwO1svjiovUWPLK2X4JsVNi4mDMyubPmc2uleFP7deWchTsoAWYWWMGKDJAKRgw7pwuJJ1s70rdRZ")
                .name("w9KkoUwghO2gTqTvz8Yuiopf4QMNdge3qjY9");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test17() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "961e06fe-72d4-4f99-9b9d-24477d00f7c2"
        )
                .discountAmount(9545)
                .discountPercentage(6028.0);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test18() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "961e06fe-72d4-4f99-9b9d-24477d00f7c2"
        )
                .discountAmount(8362)
                .discountPercentage(5025.0)
                .name("io88e0ug9macPD");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test19() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "961e06fe-72d4-4f99-9b9d-24477d00f7c2"
        )
                .discountAmount(2329)
                .discountPercentage(791.0)
                .description("61Ejs3VFwpDpUZGYp")
                .name("Op3BmD5");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test20() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "961e06fe-72d4-4f99-9b9d-24477d00f7c2"
        )
                .discountAmount(776)
                .discountPercentage(2291.0)
                .discountUpperLimit(8538)
                .description("tFHhCOD7448V8CFLAHrqo8IkZVr3g9HfGBopAXNHCOSuMtPfXgL0JeDdB35HTvcLB39FX9FSb9peJv1aQW1StLthgQ0zlp09aPunIxOEUZ82XehU1rYyk1wFrGqNbZJtgMeBb3y0QiqwDmNlkf7njIuGipFaK5o2iokmrUc8AdMnDKlrSG4csYPvPNKVetZjORveZs7CIODmYEApAdiaHJgpHG6UQQDXqznFkpdGercGoNn")
                .name("0GaOgWMrybnBftCjMS3RrUz7xzIEJEwxdWKyBJoslo6BaQPE1euSQwCrYYbuhS4SUENCUIvXojgtzLjfIGI0QwUnY0VZk5A9eVveL45e0");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test21() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "961e06fe-72d4-4f99-9b9d-24477d00f7c2"
        )
                .discountAmount(1543)
                .discountPercentage(6702.0)
                .startsAt("2020-05-30T06:29:21.000000+09:00")
                .discountUpperLimit(3188)
                .description("qKdSklHy11Q2elwnrbGLuUU1LNfrASmtoa5huMvcDJd04O2q73hHtoObpY0E2I")
                .name("mq4WLoHajWDnRcV");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test22() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "961e06fe-72d4-4f99-9b9d-24477d00f7c2"
        )
                .discountAmount(3462)
                .discountPercentage(7275.0)
                .endsAt("2020-12-26T05:12:08.000000+09:00")
                .startsAt("2023-08-26T02:37:38.000000+09:00")
                .discountUpperLimit(2543)
                .description("DFzgQeV7R5X5QdcTiPYd4gTpZIipNoO5iXX3Op5MNr522b4JUBvvkONlWUqLjk2D6nQbmLyi9dZf24aLqLpYhFbEyRv2RmB2FrslXFx526c3ARXXCzJJkuujIOs3XMQF0xPuyUOGlsAQuC3sWmZQf87eXmWDx")
                .name("evUM8AKbssQ7T4bJqJNU0p");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test23() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "961e06fe-72d4-4f99-9b9d-24477d00f7c2"
        )
                .discountAmount(878)
                .discountPercentage(3213.0)
                .displayStartsAt("2021-04-07T09:35:25.000000+09:00")
                .endsAt("2023-08-19T16:19:57.000000+09:00")
                .startsAt("2022-02-13T07:36:18.000000+09:00")
                .discountUpperLimit(4655)
                .description("rDkZlyZ9nPj5HF80YImvHKAx")
                .name("IsDtGf4KT6MTGleVuKmZhZAwOzWsTncW2t4GrBnRZ6GOID6Q4MZHyZcvTDtlK83I0BtP8S4it2RQoZTMmiN42rveAb0nhEK4FjPbpCrNLzInWzRDR2pRriWzKu7");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test24() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "961e06fe-72d4-4f99-9b9d-24477d00f7c2"
        )
                .discountAmount(6484)
                .discountPercentage(7446.0)
                .displayEndsAt("2024-05-11T03:10:34.000000+09:00")
                .displayStartsAt("2023-04-26T14:19:32.000000+09:00")
                .endsAt("2020-05-24T06:15:41.000000+09:00")
                .startsAt("2023-11-04T04:06:09.000000+09:00")
                .discountUpperLimit(8943)
                .description("EhJ7iyqvw7QWKqBj7PUO95VAYtj3sFVPxSvBDSrc")
                .name("8NIIzGPfqgkBvlJLXWmSAZ4RSOGu0sw");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test25() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "961e06fe-72d4-4f99-9b9d-24477d00f7c2"
        )
                .discountAmount(7700)
                .discountPercentage(6606.0)
                .setDisabled(true)
                .displayEndsAt("2020-07-12T01:33:27.000000+09:00")
                .displayStartsAt("2022-04-05T21:01:52.000000+09:00")
                .endsAt("2023-06-02T00:21:11.000000+09:00")
                .startsAt("2024-03-31T21:06:56.000000+09:00")
                .discountUpperLimit(9136)
                .description("y45AWR3aqCAU2VU9JCkptrOv6")
                .name("FNglZK6VPxVcTsvD6rsf9gzKxf");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test26() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "961e06fe-72d4-4f99-9b9d-24477d00f7c2"
        )
                .discountAmount(4006)
                .discountPercentage(3867.0)
                .setHidden(true)
                .setDisabled(true)
                .displayEndsAt("2020-04-18T23:34:49.000000+09:00")
                .displayStartsAt("2021-08-21T11:34:17.000000+09:00")
                .endsAt("2020-06-28T00:35:22.000000+09:00")
                .startsAt("2021-07-07T09:18:57.000000+09:00")
                .discountUpperLimit(927)
                .description("sJXy33oZ5hZOKsSXHuYyN1lac3DigA7mdK0tI5IMAvVilYxjmEimAxdzKQphR8mlyVqaT0mbAxYVAfxmPlvY4gm4AyS4wSAfc6KlSw4mo82ldM35uvYzzMEN669tLk4sffhdC6jqZbkGV4w9aAvc4iDYrIuEiaNhe0hCC6BnLSncNoJgLciwZFC")
                .name("kpMd1vSCWpbDaSXpS5oxBUg3E5PT04FJnH9p1olhEWfDo29DrBTaav");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test27() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "961e06fe-72d4-4f99-9b9d-24477d00f7c2"
        )
                .discountAmount(1837)
                .discountPercentage(5067.0)
                .setPublic(false)
                .setHidden(true)
                .setDisabled(false)
                .displayEndsAt("2023-08-09T16:36:16.000000+09:00")
                .displayStartsAt("2020-12-03T19:02:52.000000+09:00")
                .endsAt("2022-06-08T15:43:27.000000+09:00")
                .startsAt("2021-09-16T07:27:24.000000+09:00")
                .discountUpperLimit(4557)
                .description("Y0KBJckv3GgNDnKxIG0YG13Vf")
                .name("vjLnvpIrNGKnXBWP9nrsGdwGRrynTleS40Jd5NFKAxz4ygxFvLl6NN3UjXQzepu7bypxBbeLOpq0zodWEuJDcs0QQuybCUPokoxzPeMeMjdr6SJ8");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test28() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "961e06fe-72d4-4f99-9b9d-24477d00f7c2"
        )
                .discountAmount(2780)
                .discountPercentage(9215.0)
                .code("oOwDu0g8Kq")
                .setPublic(true)
                .setHidden(true)
                .setDisabled(true)
                .displayEndsAt("2020-10-02T12:21:59.000000+09:00")
                .displayStartsAt("2022-10-09T15:40:26.000000+09:00")
                .endsAt("2021-01-25T12:44:39.000000+09:00")
                .startsAt("2021-10-27T12:36:54.000000+09:00")
                .discountUpperLimit(2235)
                .description("6yacXrpaTyo5tv6CZuxzrl6IuXgRQqBQ3UNs8gVvG4bq8Sdn7wBN58kQiBRhzvXW8VnRoCpg6p")
                .name("7wOSCx77qf93slV2BLfp8zDESMrd0SDhYgbelaDDM9JdUzM5QQ1DQhxv5iMUshmvwHxIaObkSP8fdl9g7We4LRm8deyTyxd3fMbJjuNYenpUp2tSySx");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test29() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "961e06fe-72d4-4f99-9b9d-24477d00f7c2"
        )
                .discountAmount(8798)
                .discountPercentage(1930.0)
                .usageLimit(7479)
                .code("ZPWg2pvz")
                .setPublic(false)
                .setHidden(false)
                .setDisabled(true)
                .displayEndsAt("2023-07-07T01:01:23.000000+09:00")
                .displayStartsAt("2020-01-15T22:24:32.000000+09:00")
                .endsAt("2022-02-11T10:40:41.000000+09:00")
                .startsAt("2021-08-14T23:18:58.000000+09:00")
                .discountUpperLimit(8103)
                .description("IGXjEGeoeXQhoLsYUiQ0csAEZj2n78tCVbqgMx5QCNKSQEQFbQH3q0tad3g0IqfJOaRo2MxkK7i6NqndHmUH8vPVFxRQBw2rF3")
                .name("6QNvhKpF7LWvB1L4EWy0zuydBtyZTfR47jaQO3l1fvkLTPiBZY0JIPX");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test30() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "961e06fe-72d4-4f99-9b9d-24477d00f7c2"
        )
                .discountAmount(789)
                .discountPercentage(7909.0)
                .minAmount(6609)
                .usageLimit(5149)
                .code("IXKpPKCDS")
                .setPublic(false)
                .setHidden(true)
                .setDisabled(true)
                .displayEndsAt("2023-04-07T20:15:42.000000+09:00")
                .displayStartsAt("2022-01-12T04:08:23.000000+09:00")
                .endsAt("2020-03-09T05:02:11.000000+09:00")
                .startsAt("2020-01-29T21:37:29.000000+09:00")
                .discountUpperLimit(3282)
                .description("0z9OAP6tBpUf7LQuzVoXducbe9FvgoqONufdCZuEqbprlwABrYQZJpTp2nbzejUmxf2EJu2zH8RgFKm8Iomhn8rIfDSWOSr32fUqyfReGLKiRRctXPzpPgiPpgo726ddEByPk")
                .name("3haRi7Y5oIoukMN5AhFzWzvzOqby1iutc5ycDu79YOtf");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test31() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "961e06fe-72d4-4f99-9b9d-24477d00f7c2"
        )
                .discountAmount(5932)
                .discountPercentage(6256.0)
                .setShopSpecified(false)
                .minAmount(9882)
                .usageLimit(3802)
                .code("A")
                .setPublic(false)
                .setHidden(false)
                .setDisabled(false)
                .displayEndsAt("2021-04-20T10:56:26.000000+09:00")
                .displayStartsAt("2024-08-03T02:55:09.000000+09:00")
                .endsAt("2024-01-03T19:17:31.000000+09:00")
                .startsAt("2023-08-06T10:31:45.000000+09:00")
                .discountUpperLimit(2078)
                .description("R1RUdcpRu8zF4bhP3VCchQ7tMMaZyZknfijMcZnupyZ5LXfiCd4bQEgUwwodSrOX7FK9whbXlUZnHWcYeWUhs5uFFtJxO3Yeb2q6YWRZAp73l8qLVr2A")
                .name("7");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test32() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "961e06fe-72d4-4f99-9b9d-24477d00f7c2"
        )
                .discountAmount(4335)
                .discountPercentage(4402.0)
                .availableShopIds(new String[]{"0d49af38-7386-4450-9d5f-136980d24849","cf0551f9-ad33-4f8f-b6e1-6fc2341b3e37"})
                .setShopSpecified(false)
                .minAmount(7633)
                .usageLimit(3239)
                .code("xL0dV")
                .setPublic(false)
                .setHidden(false)
                .setDisabled(false)
                .displayEndsAt("2021-01-24T21:59:47.000000+09:00")
                .displayStartsAt("2023-08-11T19:25:35.000000+09:00")
                .endsAt("2024-07-02T10:39:50.000000+09:00")
                .startsAt("2024-02-05T01:44:33.000000+09:00")
                .discountUpperLimit(1856)
                .description("r6Drn0vgoNpyxlMWbYp4KjliL0MgzmBpjrRjbd9UoqBK0aWsuowlCACMor8rgylpnse3CzRh7JMpn")
                .name("TAa");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test33() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "961e06fe-72d4-4f99-9b9d-24477d00f7c2"
        )
                .discountAmount(6661)
                .discountPercentage(9378.0)
                .storageId("ba11e4c6-16ea-4066-abb8-4775891afd2c")
                .availableShopIds(new String[]{"833e574c-9495-4c0d-a4b1-925913d7b103"})
                .setShopSpecified(true)
                .minAmount(6925)
                .usageLimit(1155)
                .code("b9N7VBg")
                .setPublic(false)
                .setHidden(true)
                .setDisabled(true)
                .displayEndsAt("2021-04-21T00:53:44.000000+09:00")
                .displayStartsAt("2020-11-24T01:46:46.000000+09:00")
                .endsAt("2020-08-22T23:16:13.000000+09:00")
                .startsAt("2020-07-18T09:53:41.000000+09:00")
                .discountUpperLimit(2709)
                .description("B2YNEHPjyKJu2r0MBRJtKHcMooIES1fxYQUqG4J4VcVTHTisok7LDDZSl4frtFd1abWrpPl3NOgAMY1BK5tMDXcjZHlhwUmFfRDXCOMmmCvVUMXXKtlrCmEbwCweHXsQfeBs8yvni2uXZ19uIL3z1wDKBiwmjXHtHoSK1j0VUccfE3gkwiAQy2rB7lSM1J3ftDm6DEC")
                .name("SzQ0LovBRIKt06HIZigh5ZQRx8Z3Jeb2v5aGelov0AHNezdgZj4vI5tQEscO6IXHfVkuuNIlCDF6Zuk3l9xgQKz1F6bSFw0Ul46wkvzqmIAvl");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test34() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "961e06fe-72d4-4f99-9b9d-24477d00f7c2"
        )
                .discountPercentage(2863.0);
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test35() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "961e06fe-72d4-4f99-9b9d-24477d00f7c2"
        )
                .discountPercentage(9535.0)
                .name("O9EvckArdHv5HEL1kvJrc97IBWC7AW3SDe1R3ZdL8S93DGzHUcMNRcC1fJtFrnEGVMXX7anighEdkEP5mhbb3sFBehpu8iQENnjG8NQnsLIGqvZ17NTXlEer");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test36() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "961e06fe-72d4-4f99-9b9d-24477d00f7c2"
        )
                .discountPercentage(5491.0)
                .description("7BWOOss4LgR0T10Augt1lu8HMyOIV2r2n35370wqgjP8cKOjvo4QX4oxVpvGqaWPVzXKuQZKF6znJ03ICgMnuNuZjgdJZ7ush01wVsu0zE5")
                .name("YW2FwpYuelWJH74LDFYoORO7WvVMNnXwTZoKwpQJtnhGwGDKuv7me5V4tPUOt2EJ3kAdrtkc9R4GyT535rMRVADBHxb08r9KwC7pWcHxaZv2drGgjX4jytCYz");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test37() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "961e06fe-72d4-4f99-9b9d-24477d00f7c2"
        )
                .discountPercentage(4142.0)
                .discountUpperLimit(5837)
                .description("brQ6R0c4Hkyudgw9DxJ8w6lIddehugHmb4j3IKw8GJk5iRkhuc2wi1d0mM5Xc110RwuOwNzIU72GdczTZs542l7")
                .name("vct8sJxqtzqrvWTCQlboZu3O2weA2FJSCkrad5SZGLnp2PASWs3ZfN");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test38() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "961e06fe-72d4-4f99-9b9d-24477d00f7c2"
        )
                .discountPercentage(8866.0)
                .startsAt("2020-01-06T11:56:30.000000+09:00")
                .discountUpperLimit(3486)
                .description("hMjFMJpWYFnB9U6HavZwwkL6hQCkmUa0kboA7cJa21hjQW2LMLW0B3B0wVm91BbgPKpAg3ZyypeaZ7hTYvFkYG8PVWzbSjLedmxyDOOrP8gCfW03R2BU43lqpCjimHfXsXhlSgww4eITIZ1")
                .name("wclLX5ztjhKGWggxNpVCrxhMRJbrTHJ8punYMQluz0j7wJa9QQrueirqphyu6T1fGYXrcx07ifQqN12uE0S1zV2aVrN0g");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test39() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "961e06fe-72d4-4f99-9b9d-24477d00f7c2"
        )
                .discountPercentage(837.0)
                .endsAt("2022-01-06T07:00:57.000000+09:00")
                .startsAt("2023-01-16T08:06:32.000000+09:00")
                .discountUpperLimit(8027)
                .description("D94kjFiqtXsfDhnoYGjsRrlVFRAslKWvB8EKfFBtJCdf2ZJc20s40omDcektkz86li5fLU4E96auZAjYviVPM40IeC4ghjPN0v1")
                .name("EIYSgO5LXjpIIYN7m3ovHkcLbQmPZhKntKTRYNDyc3BRwtDFHi3ZzJp3x0f");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test40() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "961e06fe-72d4-4f99-9b9d-24477d00f7c2"
        )
                .discountPercentage(2960.0)
                .displayStartsAt("2022-10-01T07:54:30.000000+09:00")
                .endsAt("2022-02-15T22:43:22.000000+09:00")
                .startsAt("2021-07-21T09:42:18.000000+09:00")
                .discountUpperLimit(2744)
                .description("Uv1pGaw1AAsEWR7wrKRUCfx")
                .name("nQGQ8JZD6H9E7n4GdL3s5aYySwLeHgIHzDRPYgNlmn0bKlk9yGN3xdtkmPna1MimjuZ");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test41() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "961e06fe-72d4-4f99-9b9d-24477d00f7c2"
        )
                .discountPercentage(7392.0)
                .displayEndsAt("2022-01-29T16:47:06.000000+09:00")
                .displayStartsAt("2023-04-13T08:23:19.000000+09:00")
                .endsAt("2023-08-11T14:37:23.000000+09:00")
                .startsAt("2020-12-18T15:35:43.000000+09:00")
                .discountUpperLimit(3427)
                .description("iHXCwCNozzVTkUaFwodJRLLGFYBYv6tRFjl1NpEKobW4IEPaSPp2wg1DhEAcU")
                .name("AJxmf3kpxzCScdzsM7HcYEPvcLBISS6U8QLNcp86auGPtj6zQInA3mz1EC1Zo59taUe");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test42() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "961e06fe-72d4-4f99-9b9d-24477d00f7c2"
        )
                .discountPercentage(5751.0)
                .setDisabled(true)
                .displayEndsAt("2021-01-27T05:27:39.000000+09:00")
                .displayStartsAt("2020-02-13T09:48:12.000000+09:00")
                .endsAt("2022-09-28T18:58:24.000000+09:00")
                .startsAt("2024-03-29T13:39:56.000000+09:00")
                .discountUpperLimit(928)
                .description("6z30SoBxNXQSJp8hflJK8vMqanM0cLtuIH2Z4vYZbJtApzCVCCDX6IwZePx745Ery4LkQNCun2B37gXzv6sVRccHEEMiw572fCM2xnGofF09bhHzg7BySDOz1qxGJ27DURiMornx4GD61uHyBSgYAZjvM6CwKk1QhTUohXoXGGojqiV5L5lBSOa6lQuWp0")
                .name("t7HH4eRq8wh1f2gcvFT0FZBzPqmdhWwaNIc6BZoOPe831ptsEsj7HAiH2sifZcg6XPJmNRcV0Chlt1WmgnmjW6vTuhCEPlptPoPb3O1ZCPwKkL");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test43() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "961e06fe-72d4-4f99-9b9d-24477d00f7c2"
        )
                .discountPercentage(1557.0)
                .setHidden(false)
                .setDisabled(true)
                .displayEndsAt("2022-11-14T01:42:36.000000+09:00")
                .displayStartsAt("2020-12-22T07:18:27.000000+09:00")
                .endsAt("2024-02-12T01:33:43.000000+09:00")
                .startsAt("2022-10-22T00:57:11.000000+09:00")
                .discountUpperLimit(1496)
                .description("KSOedt5sKdbLQcQrMVq554VYaq")
                .name("DHZSQcWBOcCwbalZSAW9fck4GqM72qIEaPADQBuKPtSzALoZGsQqgf3O");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test44() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "961e06fe-72d4-4f99-9b9d-24477d00f7c2"
        )
                .discountPercentage(5636.0)
                .setPublic(true)
                .setHidden(true)
                .setDisabled(true)
                .displayEndsAt("2021-11-09T05:16:03.000000+09:00")
                .displayStartsAt("2022-06-24T14:24:53.000000+09:00")
                .endsAt("2023-09-13T12:28:54.000000+09:00")
                .startsAt("2021-12-15T15:57:44.000000+09:00")
                .discountUpperLimit(2156)
                .description("mE3SpIwGHMgwQD5QChsue6j2eQQonv754uHjBKMkXlNCdA4rEqZnKQ9ereXD6Noh52sJuQ8LT74SeM8MpnjFOsrAF5BVSp8qo59Hbo1CXPB34UqaY4GblclhDsWduA9iQgPrAKM9hHgTu7lxAyvHEGgcFhP8IU6c2YfoNKgaH4NlRTP8Z")
                .name("VVksse4M8G0a6vRqHaiLSTtiJkprdEmT0");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test45() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "961e06fe-72d4-4f99-9b9d-24477d00f7c2"
        )
                .discountPercentage(3945.0)
                .code("ibsvIO1BK")
                .setPublic(true)
                .setHidden(false)
                .setDisabled(false)
                .displayEndsAt("2023-09-28T10:56:43.000000+09:00")
                .displayStartsAt("2024-07-18T14:51:33.000000+09:00")
                .endsAt("2024-07-24T06:26:39.000000+09:00")
                .startsAt("2020-06-07T21:14:26.000000+09:00")
                .discountUpperLimit(2034)
                .description("Q3wiT1z0wEbUFjJCJsejCRGdQTFzwog4Lu5wXL0B5bqUd62b77fA3MxTmGj4aAANBPDn2uZRarV3egowwyH76ZFcL8Wbxspe8wyKiFDZHlXvGtqc1TaIPT2sEDt32gWWh1cmvO8vn7Zml6oBAFRCUfYRv3Timh2UzEyPhabme7tqG3VNWStMXyU45klC0ohZ2JgirSr431m4C3OokyS8x4NJn5075MRIJZXkE8eSGKJv")
                .name("NGk90x8ZRoUnNZ3xMlIXJpRLPmvez1yIWsXKCR4RkD22QL53s7oLYLhu5a3pFUagNAhBmz9tzRuavRkQDl9HI9XSiYgTN11hC5saITDfDiscsia9EdG0SraM");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test46() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "961e06fe-72d4-4f99-9b9d-24477d00f7c2"
        )
                .discountPercentage(3566.0)
                .usageLimit(4871)
                .code("ZGti623gP")
                .setPublic(true)
                .setHidden(false)
                .setDisabled(false)
                .displayEndsAt("2021-03-09T01:56:53.000000+09:00")
                .displayStartsAt("2020-05-25T11:40:21.000000+09:00")
                .endsAt("2020-07-21T19:00:19.000000+09:00")
                .startsAt("2020-12-28T20:07:36.000000+09:00")
                .discountUpperLimit(9132)
                .description("XEtghJiwOF38eNhQcL0SHTOTdEStiIHmRwRza5jzOcEiljVlox4y4ajtkS3nCBi02ZxHS50r5MSN6uhdqjSJsMf6iWT1DV3GBRSjRvzSpziYmM4lIjUGA9FVqe4gfq2d51NGvbrjDNbf8ydLbGgrMAJE2EYMKUXdQQrDc6OXS3kGl4SeCB710x9x1JOPeD8CpmklTIxZYj")
                .name("lptT5iBwe8CdfV8E6e1yHCb7xS9IPrAwfrbBwFFtxK59rwsa");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test47() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "961e06fe-72d4-4f99-9b9d-24477d00f7c2"
        )
                .discountPercentage(9911.0)
                .minAmount(6717)
                .usageLimit(6849)
                .code("qTh")
                .setPublic(true)
                .setHidden(true)
                .setDisabled(true)
                .displayEndsAt("2022-02-21T17:18:17.000000+09:00")
                .displayStartsAt("2022-06-15T20:34:30.000000+09:00")
                .endsAt("2023-04-20T08:58:28.000000+09:00")
                .startsAt("2023-09-12T22:38:32.000000+09:00")
                .discountUpperLimit(4963)
                .description("bYAmAl22G0JDW3xN9oHHZQwYLXJWPaYRv7VcBncroAbiSpHfGhH9jUvIq2wLcqAeUWUzADjk6ksLZrBsfoV3J6DRPi8YHJ2nhr6GlfFD")
                .name("XEmhWDOaaJcMMURR31fr1YKGE9p5pzNPzgZmHhesSQ4qRMt9K6YOPhFzYoZrRc3Iolo9gVL9Ltea7");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test48() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "961e06fe-72d4-4f99-9b9d-24477d00f7c2"
        )
                .discountPercentage(7597.0)
                .setShopSpecified(true)
                .minAmount(1614)
                .usageLimit(5191)
                .code("21QQUARjxt")
                .setPublic(true)
                .setHidden(true)
                .setDisabled(true)
                .displayEndsAt("2023-10-31T01:03:41.000000+09:00")
                .displayStartsAt("2021-01-06T15:50:31.000000+09:00")
                .endsAt("2021-09-02T15:09:58.000000+09:00")
                .startsAt("2022-11-04T12:44:58.000000+09:00")
                .discountUpperLimit(9218)
                .description("qoUdStyLocnE0GCT3Ciohkba0qEy4wFlVkKJgRmf5WkPwKY9DbXAZ0EHbJw05A4SwJMhRccaEB8SwaBYzQJh821OBRPM5HzKgnYzioUK7Ci1qPhirQ8c6w")
                .name("aEe2FcvdYi7YIEb84j0tPekuSHohP3B6xd2SVM5gxtg3QX2TiYUb1MIEuUUXCaFLTwU0nbIvcPwZxoQpr92zU49jUui7NQEhj");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test49() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "961e06fe-72d4-4f99-9b9d-24477d00f7c2"
        )
                .discountPercentage(4541.0)
                .availableShopIds(new String[]{"dd695316-2a01-4a0f-aa6d-4ab635b2aee4"})
                .setShopSpecified(false)
                .minAmount(9939)
                .usageLimit(1689)
                .code("YEIwG5mV")
                .setPublic(false)
                .setHidden(false)
                .setDisabled(false)
                .displayEndsAt("2022-05-16T04:48:27.000000+09:00")
                .displayStartsAt("2023-03-19T09:36:07.000000+09:00")
                .endsAt("2022-04-07T00:38:29.000000+09:00")
                .startsAt("2020-08-22T11:43:51.000000+09:00")
                .discountUpperLimit(2304)
                .description("CSzS47jV5YEhODPwFoSNSuKkMu5awX3HJ9zs63GLlZNc2LBnreHK1UyXTeLfTP9QUnFs4esHofxOrwgAsRKTgAommrn2ZOx39L9PBGS0S9kFERT83WfUL3MuLWI6yUOiZv8BdUvLJiM30xhdoFOFEOL8SoLExg5b6UqbonmmTGkS1NhGxt7KPitnB6Qp03VLs2L11cBBA11OpMERRR9PPtf0S4f9159f71dUOrnO")
                .name("ZO4EcacLokeZ3DXOLsTmoDBC0XTu3ml2lgl3Ftqw4dC02quk0mfY2XK91Amp0E9TPK515VZkEtbSwbvH26dxJgwyj2tW");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test50() throws ConnectionError, ProcessingError {
        Request request = new UpdateCoupon(
            "961e06fe-72d4-4f99-9b9d-24477d00f7c2"
        )
                .discountPercentage(4572.0)
                .storageId("3dca5208-bc84-45e5-be0b-f9559ee9fdca")
                .availableShopIds(new String[]{"169cd30b-d6a4-4a74-b154-d4a23d3706a3","1932c192-a2b5-4e8b-921b-521795e5c6a2","0d08b56a-6501-429d-a2be-429140feb6fa","142be295-e2e2-4c22-a8cb-c756e727dfb4","54d57c14-bb97-46d8-b7c6-89f28e913713","9833ede1-0736-4a82-b226-d633014cd7cc","1e95a960-b398-4145-803f-a8c1dc68745f","fb1cbcfc-04d6-4826-bab6-08f6cdc694a5","f7a6faf6-f7c7-4e53-9354-b2cb21674003"})
                .setShopSpecified(false)
                .minAmount(2563)
                .usageLimit(1282)
                .code("E")
                .setPublic(true)
                .setHidden(false)
                .setDisabled(true)
                .displayEndsAt("2023-02-25T05:45:26.000000+09:00")
                .displayStartsAt("2022-05-18T11:35:56.000000+09:00")
                .endsAt("2022-08-13T12:27:13.000000+09:00")
                .startsAt("2020-07-22T18:57:35.000000+09:00")
                .discountUpperLimit(3090)
                .description("w7IiG4t54Wzbr2CJfnRherxEcoT4K9Gsvxs64Ea")
                .name("0HaT15fZF0XhztC7dV1nv25bDg1mULsdqJx5Re1Jj1HDIXuQPLWY8RpX9IKp43JT2IsCEMlCVFrdP95iWSWZPWJ0UZjUA4KAAL9UxE5O73XoEjID8xclRM");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
