// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.UpdateCustomerAccount;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class UpdateCustomerAccountTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new UpdateCustomerAccount(
            "5993ff81-3f5f-410c-a81d-0690652458d8"
        );
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new UpdateCustomerAccount(
            "5993ff81-3f5f-410c-a81d-0690652458d8"
        )
                .metadata("{\"key1\":\"foo\",\"key2\":\"bar\"}");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new UpdateCustomerAccount(
            "5993ff81-3f5f-410c-a81d-0690652458d8"
        )
                .externalId("bParNfnyP1qJg2dQCHT9aNUmtGADQUJYwfQBzmqNKvGEB8g4")
                .metadata("{\"key1\":\"foo\",\"key2\":\"bar\"}");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new UpdateCustomerAccount(
            "5993ff81-3f5f-410c-a81d-0690652458d8"
        )
                .accountName("wynWWLfojPF6qKKlDKVEJbCmUNFznGLBetCrEPmMntExlsFMQWhrRVvp6Q7k9MZk4k7J0ZoDG4vT6p8Y6FyBYxSnEpwQPmfolxa0QwrJbv8rP4JcjMzNHnZe5RqeuroRoMZflRnztsu7gyeGfw")
                .externalId("c6uxoVO0CF2jbc6L4cGUKx")
                .metadata("{\"key1\":\"foo\",\"key2\":\"bar\"}");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new UpdateCustomerAccount(
            "5993ff81-3f5f-410c-a81d-0690652458d8"
        )
                .status("suspended")
                .accountName("woAGRbeqM7hFqZAGxmqsuUkRzsfbq6vpdqYeRzZy4RgJewgg2SVqMQbCiXnrjhyRZwDjOtpkwjysP4fDwamGYAYpQrgl8vTC0VhZVUmjhqR3V2uV8ILuqneCkdTAvEtZnxD3onTWXTfvTKei9VxVmkjQS0PYGRtE7KsSTIeeYT9RYRIbqzg46xjX")
                .externalId("AJvbm9Jhs6OSsRfxyxLerKo3rf")
                .metadata("{\"key1\":\"foo\",\"key2\":\"bar\"}");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
