// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.UpdateCustomerAccount;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class UpdateCustomerAccountTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new UpdateCustomerAccount(
            "6c95145f-3596-4b43-8f51-3bdda92d9c70"
        );
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new UpdateCustomerAccount(
            "6c95145f-3596-4b43-8f51-3bdda92d9c70"
        )
                .metadata("{\"key1\":\"foo\",\"key2\":\"bar\"}");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new UpdateCustomerAccount(
            "6c95145f-3596-4b43-8f51-3bdda92d9c70"
        )
                .externalId("HPWBk4EuPXAdPsFrqn8lZhZeEREMPOrt6FiPMjvdOWMTWBS")
                .metadata("{\"key1\":\"foo\",\"key2\":\"bar\"}");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new UpdateCustomerAccount(
            "6c95145f-3596-4b43-8f51-3bdda92d9c70"
        )
                .accountName("V2DZcDZOYuP6lQNwYNr6HR2LU1R05Nv6BVAU7LaM8C1ttRgDjJEPO94kDr9zzklHhLNGhiY9k5KzsrYX7bP3YPoI9UxkPJeYoqNUwbKFBIRbj9Eg8Qv")
                .externalId("9TqpVlTxM9MTE0puB6bniBgIOe13YGFPN4WO9oC8wBC8")
                .metadata("{\"key1\":\"foo\",\"key2\":\"bar\"}");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new UpdateCustomerAccount(
            "6c95145f-3596-4b43-8f51-3bdda92d9c70"
        )
                .status("pre-closed")
                .accountName("2e5HWpM8C6fXCgLndbja9BagjKY8DAtd1I")
                .externalId("BKZGUtp1yt25DCohJ0WI6uoMwMuyn7N72FwpgJBTN7373")
                .metadata("{\"key1\":\"foo\",\"key2\":\"bar\"}");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
