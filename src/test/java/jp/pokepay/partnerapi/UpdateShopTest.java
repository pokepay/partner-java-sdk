// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi;

import jp.pokepay.partnerapi.request.UpdateShop;
import jp.pokepay.partnerapi.request.Request;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class UpdateShopTest {
    @Test
    void test0() throws ConnectionError, ProcessingError {
        Request request = new UpdateShop(
            "4c353055-614c-4aca-ba83-d5b55a73cb4f"
        );
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test1() throws ConnectionError, ProcessingError {
        Request request = new UpdateShop(
            "4c353055-614c-4aca-ba83-d5b55a73cb4f"
        )
                .status("disabled");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test2() throws ConnectionError, ProcessingError {
        Request request = new UpdateShop(
            "4c353055-614c-4aca-ba83-d5b55a73cb4f"
        )
                .canTopupPrivateMoneyIds(new String[]{"da602888-c4e4-49bf-812a-67f759c6b2ee","fb2e3412-9eb2-4904-99bf-7b5413a877b9","ead7cb6b-d9e4-46a6-b778-bf587fa9c174","11a55b1e-4474-4eab-a991-73d5f2525c90","3530637c-dbdc-4ec8-8993-d8bc07c02577","2d5f0f5f-e78f-49fb-b799-d740ffbb1bf6","09fa58ef-450d-4fca-9f0c-c01daebfb994"})
                .status("disabled");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test3() throws ConnectionError, ProcessingError {
        Request request = new UpdateShop(
            "4c353055-614c-4aca-ba83-d5b55a73cb4f"
        )
                .privateMoneyIds(new String[]{"13fa1894-5a40-4908-b6ca-2b6df7a1d3d2"})
                .canTopupPrivateMoneyIds(new String[]{"1771a415-b492-4253-b0da-e5d8267b73e4","b3cc2b3c-7b7b-4019-b858-5f611191f8cd","74ee8361-d1ec-4afe-adeb-2f94233b6261","9bed39ae-3da4-445a-bee9-c20dea7b3639","bd8ee9ba-0fe5-467e-ad2f-ad1373bab8d6","b5493d9f-2f83-4e59-9435-7a32a70b0f1d"})
                .status("active");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test4() throws ConnectionError, ProcessingError {
        Request request = new UpdateShop(
            "4c353055-614c-4aca-ba83-d5b55a73cb4f"
        )
                .externalId("4RATpcrh495rO4DdE")
                .privateMoneyIds(new String[]{"cb68d941-6dfb-4844-86ae-58b961dcc9bb","5647c0b8-21ff-4019-a198-c5a3b4e1a2f6","ae7fd029-e42a-44b2-b0c1-6a4592655c05","750a9acf-676e-4e18-b94a-9f4fff0b9985","d53cb9a0-6d80-4ee8-9f84-132152d90d70","4157c695-9c70-47cb-a23b-a19a5815a779","89dcc180-4ae7-4c89-b71b-e4222ea770a7"})
                .canTopupPrivateMoneyIds(new String[]{"2c32792c-e31b-43d5-b77b-ba27697f42fb","0cda89bb-6907-4e31-bc74-af996422eab0"})
                .status("disabled");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test5() throws ConnectionError, ProcessingError {
        Request request = new UpdateShop(
            "4c353055-614c-4aca-ba83-d5b55a73cb4f"
        )
                .email("kmdTx0ejtp@H7BY.com")
                .externalId("HzP47iH9EhI")
                .privateMoneyIds(new String[]{})
                .canTopupPrivateMoneyIds(new String[]{"52ca8af4-387c-45b3-ac56-9f606e035eb5","59c1ac91-8075-4cf8-8e9a-1e1e1e0a9c0d","a31cb3fe-ff23-4d99-ba3f-ed877737fad8","16a25e24-5d49-4149-a12f-0d6bacee17e9"})
                .status("active");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test6() throws ConnectionError, ProcessingError {
        Request request = new UpdateShop(
            "4c353055-614c-4aca-ba83-d5b55a73cb4f"
        )
                .tel("087-058-2910")
                .email("QyldndduG2@bWRS.com")
                .externalId("nH1mnYwRdKaQb2u7u91XUstNWh")
                .privateMoneyIds(new String[]{"b478332f-1c21-41e5-b7f1-6b8ca39f6e96","92b19a0d-30d2-4d3a-bced-c8c9a2febec0","e790068f-c016-42dc-ba55-b1cf15720295","2e54aea5-e2c3-4ad3-811a-f91aeac9979d","26818dae-4be9-467b-ae97-a247596fe801","b5ad52b5-db8a-4cb4-887e-60fd7087596b"})
                .canTopupPrivateMoneyIds(new String[]{"b8d76e86-b894-43e3-834a-7f3bdb9fdc65","e2e901a0-268f-4b85-a02f-bbb640afa0a4","6b714b53-dde8-47d8-9f71-dfcdb2908f46"})
                .status("disabled");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test7() throws ConnectionError, ProcessingError {
        Request request = new UpdateShop(
            "4c353055-614c-4aca-ba83-d5b55a73cb4f"
        )
                .address("ofs9WuqlKfO94OBu0LD3DGlJ261ZjmdAWQlA9fgcywcJJx99v0eGsEaZ5h08oz9gXfYSPF2GNaVo25KDBtLEmIcjtI7O4kdDSXdqyYR96tMM0G4gPpBafd6rmmruQWBWseMvVm72Yq9G6e7di3SgXVIFlQS6W2XsQYFcEBCnhe2Jp2Ajwyo1ebnH9JPPAHYLsYeYrQwpQYP3PG901m3xY0X2kGULao")
                .tel("01129-4370")
                .email("vVOH81aoMx@LwO8.com")
                .externalId("TE")
                .privateMoneyIds(new String[]{"26b59b20-a6d0-40fe-9219-29fbe104df04","8b1e48fd-fb44-45a0-a239-e4c8b4bb19a4","48bdf59a-39cf-4560-b99a-feee607f959e","60ac05a4-2ba1-412a-b8ae-e568ace4515c","64d00bc5-dd94-465e-b58f-bd0738cd7c92","f5f6aa62-4fc2-4203-a696-036c648591d9","14a43552-8524-4a33-bf2d-3a7f098c9b60","5edb2411-1184-48f4-b056-f0efc73966fe","55b6d2c7-548e-45bc-9595-d189e4a8fe73","a95bea1e-9036-4142-a28b-d8d1f0a03036"})
                .canTopupPrivateMoneyIds(new String[]{"1ccb7756-7370-4f13-ad93-7c0d40ecd8be","f456b1d9-e497-4b68-be6c-24461c7bdf99"})
                .status("active");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test8() throws ConnectionError, ProcessingError {
        Request request = new UpdateShop(
            "4c353055-614c-4aca-ba83-d5b55a73cb4f"
        )
                .postalCode("6580780")
                .address("8NDtaM0A9HGEVw0D8cYCaBYZvEOFL4nqQiRj9bERC5h6j22zcgbWlWRrzljBqui9dGFxyRRHEqiUo")
                .tel("09709-964")
                .email("CQElfkkET5@EltK.com")
                .externalId("pBBzyHSDvHBxXcV")
                .privateMoneyIds(new String[]{"1b248554-3159-454b-b281-12c1e98339b9","755209c8-a6c9-4d0f-8476-407088125464","a6753e86-1f94-47e6-a87b-c794b49dde7c","358bdd31-35d0-406a-8454-ad877ef784c7"})
                .canTopupPrivateMoneyIds(new String[]{"9ef74a15-de8d-4bfb-b628-a12d0243dcbc"})
                .status("disabled");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
    @Test
    void test9() throws ConnectionError, ProcessingError {
        Request request = new UpdateShop(
            "4c353055-614c-4aca-ba83-d5b55a73cb4f"
        )
                .name("ip1PFNP46aswfkSID2OBE4hn8DwQRQdBpDZHOCcYawSnHhAvwZPMGHNtaNndBe9WuE73r9CvsxGav9Ap9iuzSrloqA9P")
                .postalCode("6278617")
                .address("01a5y3ETdCNXUDUP9eiQvaZHO1MuMJ4XAuba9Yj7LWlfWY9qOT5uNHYvH6mZyWdqEcTZt9pgfho6OoXLvoaRC7cZefXJ2GptHCmiada2ou7a7akgpMkmElicUa6Q6MOu8p7b5lEBoWAuhccQxUreofT2Vku")
                .tel("03-655-7240")
                .email("EaJpAZo6R4@XxfG.com")
                .externalId("6Y2Xuvp6b1Aya7RW0f5D1QhJn2X9QZo2e1gi")
                .privateMoneyIds(new String[]{"7de7a725-f5ca-4a62-9876-d2e26b9e2929","95ee7d2b-076e-4942-886b-ca0b4049bd15","8dd7082a-c1c9-4622-8e94-0f3bbd315dfd","a48134a8-9186-49b8-a9ab-d8bb85030161"})
                .canTopupPrivateMoneyIds(new String[]{"f152bbce-5f08-4e6c-95e8-61bb81eb7f3e"})
                .status("active");
        try {
            PartnerAPITest.getClient().send(request);
        } catch (PartnerRequestError e) {
            if (e.getType().equals("invalid_parameters")) {
                System.out.println(e.getType());
                System.out.println(e.getMessage());
                System.out.println(e.getRawJson());
            }
            assertNotEquals("invalid_parameters", e.getType());
        }
    }
}
