// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.partnerapi.tdsl;

import jp.pokepay.partnerapi.PartnerAPITest;
import jp.pokepay.partnerapi.request.*;
import jp.pokepay.partnerapi.response.*;
import com.google.gson.JsonObject;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class WebhookTests {
    @Test
    void test0() throws Exception {
        PaginatedOrganizationWorkerTaskWebhook list = (PaginatedOrganizationWorkerTaskWebhook)PartnerAPITest.getClient().send(new ListWebhooks());
        for (OrganizationWorkerTaskWebhook row: list.getRows()) {
            PartnerAPITest.getClient().send(new DeleteWebhook(
                row.getId()
            ));
        }
        OrganizationWorkerTaskWebhook webhook1 = (OrganizationWorkerTaskWebhook)PartnerAPITest.getClient().send(new CreateWebhook(
            "bulk_shops",
            "http://localhost/bulk_shops"
        ));
        assertEquals("coilinc", webhook1.getOrganizationCode());
        assertEquals("bulk_shops", webhook1.getTask());
        assertEquals("http://localhost/bulk_shops", webhook1.getUrl());
        assertEquals(true, webhook1.isActive());
        assertEquals("application/json", webhook1.getContentType());
        OrganizationWorkerTaskWebhook webhook2 = (OrganizationWorkerTaskWebhook)PartnerAPITest.getClient().send(new CreateWebhook(
            "process_user_stats_operation",
            "http://localhost/process_user_stats_operation"
        ));
        assertEquals("coilinc", webhook2.getOrganizationCode());
        assertEquals("process_user_stats_operation", webhook2.getTask());
        assertEquals("http://localhost/process_user_stats_operation", webhook2.getUrl());
        assertEquals(true, webhook2.isActive());
        assertEquals("application/json", webhook2.getContentType());
        PaginatedOrganizationWorkerTaskWebhook list2 = (PaginatedOrganizationWorkerTaskWebhook)PartnerAPITest.getClient().send(new ListWebhooks());
        assertEquals(2, list2.getCount());
        assertEquals(webhook2.getId(), list2.getRows()[0].getId());
        assertEquals(webhook1.getId(), list2.getRows()[1].getId());
        OrganizationWorkerTaskWebhook updateResponse = (OrganizationWorkerTaskWebhook)PartnerAPITest.getClient().send(new UpdateWebhook(
            webhook1.getId()
        )
            .setActive(false));
        assertEquals(webhook1.getId(), updateResponse.getId());
        assertEquals(webhook1.getOrganizationCode(), updateResponse.getOrganizationCode());
        assertEquals(webhook1.getTask(), updateResponse.getTask());
        assertEquals(webhook1.getUrl(), updateResponse.getUrl());
        assertEquals(webhook1.getContentType(), updateResponse.getContentType());
        assertEquals(false, updateResponse.isActive());
    }
}
